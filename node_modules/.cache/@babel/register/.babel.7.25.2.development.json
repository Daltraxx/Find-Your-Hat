{"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\dpett\\\\projects\\\\Find Your Hat\\\\test\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\dpett\\\\projects\\\\Find Your Hat\",\"filename\":\"C:\\\\Users\\\\dpett\\\\projects\\\\Find Your Hat\\\\test\\\\FieldClass_test.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\dpett\\\\projects\\\\Find Your Hat\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.25.2:development":{"value":{"code":"const assert = require('assert');\nconst {\n  Field\n} = require('../FieldClass');\nconst playerCharacter = '!';\nconst hatCharacter = '^';\nconst holeCharacter = 'O';\nconst fieldCharacter = '░';\nconst pathCharacter = '*';\ndescribe('Field', () => {\n  describe('.getRandomKeyPosition', () => {\n    let field, rowIndex, columnIndex;\n    beforeEach(() => {\n      fieldGame = new Field();\n      rowIndex = 0;\n      columnIndex = 1;\n    });\n    it('generates a valid random position array [row, column] on the game map when height is 1 and width is 1', () => {\n      //setup\n      const height = 1;\n      const width = 1;\n\n      //exercise\n      const result = fieldGame.getRandomKeyPosition(height, width);\n\n      //verify\n      assert.ok(result[rowIndex] >= 0 && result[rowIndex] <= height && result[columnIndex] >= 0 && result[columnIndex] <= width);\n    });\n    it('generates a valid random position array [row, column] on the game map when height is 10 and width is 10', () => {\n      //setup\n      const height = 10;\n      const width = 10;\n\n      //exercise\n      const result = fieldGame.getRandomKeyPosition(height, width);\n\n      //verify\n      assert.ok(result[rowIndex] >= 0 && result[rowIndex] <= height && result[columnIndex] >= 0 && result[columnIndex] <= width);\n    });\n    it('generates a valid random position array [row, column] on the game map when height is 100 and width is 100', () => {\n      //setup\n      const height = 100;\n      const width = 100;\n\n      //exercise\n      const result = fieldGame.getRandomKeyPosition(height, width);\n\n      //verify\n      assert.ok(result[rowIndex] >= 0 && result[rowIndex] <= height && result[columnIndex] >= 0 && result[columnIndex] <= width);\n    });\n    it('generates a valid random position array [row, column] on the game map when height is 3 and width is 9', () => {\n      //setup\n      const height = 3;\n      const width = 9;\n\n      //exercise\n      const result = fieldGame.getRandomKeyPosition(height, width);\n\n      //verify\n      assert.ok(result[rowIndex] >= 0 && result[rowIndex] <= height && result[columnIndex] >= 0 && result[columnIndex] <= width);\n    });\n    it('generates a valid random position array [row, column] on the game map when height is 9 and width is 3', () => {\n      //setup\n      const height = 9;\n      const width = 3;\n\n      //exercise\n      const result = fieldGame.getRandomKeyPosition(height, width);\n\n      //verify\n      assert.ok(result[rowIndex] >= 0 && result[rowIndex] <= height && result[columnIndex] >= 0 && result[columnIndex] <= width);\n    });\n    it('throws an error if it is passed a height that is less than 1', () => {\n      //setup\n      const height = -1;\n      const width = 10;\n\n      //exercise\n      const result = () => fieldGame.getRandomKeyPosition(height, width);\n\n      //verify\n      assert.throws(result, /Height and width values cannot be less than 1/);\n    });\n    it('throws an error if it is passed a width that is less than 1', () => {\n      //setup\n      const height = 10;\n      const width = -1;\n\n      //exercise\n      const result = () => fieldGame.getRandomKeyPosition(height, width);\n\n      //verify\n      assert.throws(result, /Height and width values cannot be less than 1/);\n    });\n  });\n  describe('.setHatPosition', () => {\n    let fieldGame;\n    beforeEach(() => {\n      fieldGame = new Field();\n\n      //generate and assign gameGrid for field instance\n      const fieldHeight = 10;\n      const fieldWidth = 50;\n      const percentageHoles = 20;\n      const playerRandom = true;\n      const hatRandom = true;\n      fieldGame.gameGrid = fieldGame.generateField(fieldHeight, fieldWidth, percentageHoles, playerRandom, hatRandom);\n    });\n    it('throws an error if the field instance\\'s gameGrid property is undefined', () => {\n      //setup\n      fieldGame.gameGrid = undefined;\n\n      //exercise\n      const result = () => fieldGame.setHatPosition();\n\n      //verify\n      assert.throws(result, /Game Grid must already be provided/);\n    });\n    it('sets the instance\\'s hatRowPosition and hatColumnPosition with the correct values when called', () => {\n      //setup\n      fieldGame.setHatPosition();\n\n      //exercise\n      const result = fieldGame.gameGrid[fieldGame.hatRowPosition][fieldGame.hatColumnPosition];\n\n      //verify\n      assert.strictEqual(result, hatCharacter);\n    });\n  });\n  describe('.setPlayerPosition', () => {\n    let fieldGame;\n    beforeEach(() => {\n      fieldGame = new Field();\n\n      //generate and assign gameGrid for field instance\n      const fieldHeight = 10;\n      const fieldWidth = 50;\n      const percentageHoles = 20;\n      const playerRandom = true;\n      const hatRandom = true;\n      fieldGame.gameGrid = fieldGame.generateField(fieldHeight, fieldWidth, percentageHoles, playerRandom, hatRandom);\n    });\n    it('throws an error if the field instance\\'s gameGrid property is undefined', () => {\n      //setup\n      fieldGame.gameGrid = undefined;\n\n      //exercise\n      const result = () => fieldGame.setPlayerPosition();\n\n      //verify\n      assert.throws(result, /Game Grid must already be provided/);\n    });\n    it('sets the instance\\'s playerRowPosition and playerColumnPosition with the correct values when called', () => {\n      //setup\n      fieldGame.setPlayerPosition();\n\n      //exercise\n      const result = fieldGame.gameGrid[fieldGame.playerRowPosition][fieldGame.playerColumnPosition];\n\n      //verify\n      assert.strictEqual(result, playerCharacter);\n    });\n  });\n  describe('.setFieldDimensions', () => {\n    let fieldGame;\n    beforeEach(() => {\n      fieldGame = new Field();\n    });\n    it('throws an error if the field instance\\'s gameGrid property is undefined', () => {\n      //setup\n      fieldGame.gameGrid = undefined;\n\n      //exercise\n      const result = () => fieldGame.setFieldDimensions();\n\n      //verify\n      assert.throws(result, /Game Grid must already be provided/);\n    });\n    it('correctly sets the field\\'s dimensions when called and a custom game field has been provided', () => {\n      //setup\n      fieldGame.gameGrid = [['*', '░', 'O'], ['░', 'O', '░'], ['░', '^', '░']];\n      const expectedFieldWidth = fieldGame.gameGrid[0].length;\n      const expectedFieldHeight = fieldGame.gameGrid.length;\n\n      //exercise\n      fieldGame.setFieldDimensions();\n      const fieldWidthResult = fieldGame.fieldWidth;\n      const fieldHeightResult = fieldGame.fieldHeight;\n\n      //verify\n      assert.strictEqual(expectedFieldWidth, fieldWidthResult);\n      assert.strictEqual(expectedFieldHeight, fieldHeightResult);\n    });\n  });\n  describe('.setHoles', () => {\n    let fieldGame;\n    beforeEach(() => {\n      fieldGame = new Field();\n    });\n    it('throws an error if the field instance\\'s gameGrid property is undefined', () => {\n      //setup\n      fieldGame.gameGrid = undefined;\n\n      //exercise\n      const result = () => fieldGame.setHoles();\n\n      //verify\n      assert.throws(result, /Game Grid must already be provided/);\n    });\n    it('correctly sets the field\\'s hole positions when called and a custom game field has been provided', () => {\n      //setup\n      fieldGame.gameGrid = [['*', '░', 'O'], ['░', 'O', 'O'], ['░', '^', 'O']];\n      const expectedHolePositions = [[0, 2], [1, 1], [1, 2], [2, 2]];\n\n      //exercise\n      fieldGame.setHoles();\n      const resultHolePositions = fieldGame.holes;\n\n      //verify\n      assert.deepEqual(expectedHolePositions, resultHolePositions);\n    });\n  });\n  describe('populateRandomHoles', () => {\n    let fieldGame, field, percentageHoles;\n    beforeEach(() => {\n      fieldGame = new Field();\n      field = [['*', '░', '░'], ['░', '░', '░'], ['░', '░', '░'], ['░', '░', '░'], ['░', '░', '░'], ['░', '^', '░']];\n      fieldGame.fieldHeight = field.length;\n      fieldGame.fieldWidth = field[0].length;\n      percentageHoles = 20;\n    });\n    it('accurately updates the instance\\'s holes property with [row, column] positions as it determines spots to be holes', () => {\n      //setup\n      percentageHoles = 20;\n      fieldGame.populateRandomHoles(field, percentageHoles);\n      const resultHolePositions = fieldGame.holes;\n      let testPass = true;\n\n      //exercise\n      for (let row = 0; row < field.length; row++) {\n        for (let column = 0; column < field[row].length; column++) {\n          let stringifiedPosition = JSON.stringify([row, column]);\n          if (field[row][column] === holeCharacter && !resultHolePositions.find(element => JSON.stringify(element) === stringifiedPosition)) {\n            testPass = false;\n            break;\n          } else if (field[row][column] !== holeCharacter && resultHolePositions.find(element => JSON.stringify(element) === stringifiedPosition)) {\n            testPass = false;\n            break;\n          }\n        }\n      }\n\n      //verify\n      assert.ok(testPass);\n    });\n    it('sets an amount of holes equal to the floored percentage of holes allowed by the passed percentageHoles parameter', () => {\n      //setup\n      percentageHoles = 60;\n      fieldGame.populateRandomHoles(field, percentageHoles);\n      let resultNumberHoles = 0;\n      const expectedNumberHoles = Math.floor((fieldGame.fieldHeight * fieldGame.fieldWidth - 2) * (percentageHoles / 100)); //9\n\n      //exercise\n      for (let row = 0; row < field.length; row++) {\n        for (let column = 0; column < field[row].length; column++) {\n          if (field[row][column] === holeCharacter) {\n            resultNumberHoles++;\n          }\n        }\n      }\n\n      //verify\n      assert.deepEqual(resultNumberHoles, expectedNumberHoles);\n    });\n  });\n  describe('.generateField', () => {\n    let fieldGame, fieldHeight, fieldWidth, percentageHoles, playerRandom;\n    beforeEach(() => {\n      fieldGame = new Field();\n      //give method arguments default values. Can reassign as necessary\n      fieldHeight = 10;\n      fieldWidth = 10;\n      percentageHoles = 20;\n      playerRandom = true;\n      hatRandom = true;\n    });\n    it('assigns the fieldWidth and fieldHeight arguments to be the fieldHeight and fieldWidth of the Field instance', () => {\n      //setup\n      fieldHeight = 10;\n      fieldWidth = 20;\n      const expectedHeight = fieldHeight;\n      const expectedWidth = fieldWidth;\n      //exercise\n      fieldGame.generateField(fieldHeight, fieldWidth, percentageHoles, playerRandom, hatRandom);\n      const heightResult = fieldGame.fieldHeight;\n      const widthResult = fieldGame.fieldWidth;\n      //verify\n      assert.strictEqual(heightResult, expectedHeight);\n      assert.strictEqual(widthResult, expectedWidth);\n    });\n    it('sets the player in a random starting position if \"playerRandom\" is set to true and sets path character in that starting position', () => {\n      //setup\n      playerRandom = true;\n      const defaultPlayerPosition = 0;\n      let potentialFailures = 0;\n      //exercise\n      for (let i = 0; i < 3; i++) {\n        //if resulting position is the default position 3 times, conclude randomization of player position is failing\n        fieldGame.gameGrid = fieldGame.generateField(fieldHeight, fieldWidth, percentageHoles, playerRandom, hatRandom);\n        let playerRowPositionResult = fieldGame.playerRowPosition;\n        let playerColumnPositionResult = fieldGame.playerColumnPosition;\n        if (playerRowPositionResult === defaultPlayerPosition && playerColumnPositionResult === defaultPlayerPosition) {\n          potentialFailures++;\n        }\n      }\n\n      //verify\n      assert.ok(potentialFailures <= 3);\n      assert.strictEqual(fieldGame.gameGrid[fieldGame.playerRowPosition][fieldGame.playerColumnPosition], playerCharacter);\n    });\n    it('sets the player in the default starting position (top left) if \"playerRandom\" is set to false', () => {\n      //setup\n      playerRandom = false;\n      const defaultPlayerPosition = 0;\n      //exercise\n      fieldGame.gameGrid = fieldGame.generateField(fieldHeight, fieldWidth, percentageHoles, playerRandom, hatRandom);\n\n      //verify\n      assert.strictEqual(fieldGame.gameGrid[defaultPlayerPosition][defaultPlayerPosition], playerCharacter);\n    });\n    it('sets the hat in a random position if \"hatRandom\" is set to true and sets hat character in that position', () => {\n      //setup\n      hatRandom = true;\n      const defaultHatRowPosition = fieldHeight - 1;\n      const defaultHatColumnPosition = fieldWidth - 2;\n      let potentialFailures = 0;\n\n      //exercise\n      for (let i = 0; i < 3; i++) {\n        //if resulting position is the default position 3 times, conclude randomization of hat position is failing\n        fieldGame.gameGrid = fieldGame.generateField(fieldHeight, fieldWidth, percentageHoles, playerRandom, hatRandom);\n        if (fieldGame.hatRowPosition === defaultHatRowPosition && fieldGame.hatColumnPosition === defaultHatColumnPosition) {\n          potentialFailures++;\n        }\n      }\n\n      //verify\n      assert.ok(potentialFailures <= 3);\n      assert.strictEqual(fieldGame.gameGrid[fieldGame.hatRowPosition][fieldGame.hatColumnPosition], hatCharacter);\n    });\n    it('never sets the hat and the player in the same position when \"hatRandom\" and \"playerRandom\" are set to true', () => {\n      //setup\n      hatRandom = true;\n      playerRandom = true;\n      fieldHeight = 2;\n      fieldWidth = 1;\n      let failure = false;\n      //exercise\n      for (let i = 0; i < 10; i++) {\n        fieldGame.generateField(fieldHeight, fieldWidth, percentageHoles, playerRandom, hatRandom);\n        if (fieldGame.hatRowPosition === fieldGame.playerRowPosition && fieldGame.hatColumnPosition === fieldGame.playerColumnPosition) {\n          failure = true;\n          break;\n        }\n      }\n\n      //verify\n      assert.strictEqual(failure, false);\n    });\n    it('never sets the hat and the player in the same position when \"hatRandom\" is set to true and \"playerRandom\" is set to false', () => {\n      //setup\n      hatRandom = true;\n      playerRandom = false;\n      fieldHeight = 2;\n      fieldWidth = 1;\n      let failure = false;\n      let hatPosition = [];\n      //exercise\n      for (let i = 0; i < 10; i++) {\n        //if resulting position is the default position 3 times, conclude randomization of hat position is failing\n        fieldGame.gameGrid = fieldGame.generateField(fieldHeight, fieldWidth, percentageHoles, playerRandom, hatRandom);\n        if (fieldGame.hatRowPosition === fieldGame.playerRowPosition && fieldGame.hatColumnPosition === fieldGame.playerColumnPosition) {\n          failure = true;\n          break;\n        }\n      }\n\n      //verify\n      assert.strictEqual(failure, false);\n    });\n    it('sets the hat in the default position (second to last of bottom row) if \"hatRandom\" is set to false', () => {\n      //setup\n      hatRandom = false;\n      const defaultHatRowPosition = fieldHeight - 1;\n      const defaultHatColumnPosition = fieldWidth - 2;\n      //exercise\n      fieldGame.gameGrid = fieldGame.generateField(fieldHeight, fieldWidth, percentageHoles, playerRandom, hatRandom);\n\n      //verify\n      assert.strictEqual(fieldGame.gameGrid[defaultHatRowPosition][defaultHatColumnPosition], hatCharacter);\n      assert.strictEqual(fieldGame.hatRowPosition, defaultHatRowPosition);\n      assert.strictEqual(fieldGame.hatColumnPosition, defaultHatColumnPosition);\n    });\n  });\n  describe('hideHoles', () => {\n    let fieldGame, fieldHeight, fieldWidth, percentageHoles, playerRandom, hatRandom;\n    beforeEach(() => {\n      fieldGame = new Field();\n      fieldHeight = 10;\n      fieldWidth = 10;\n      percentageHoles = 50;\n      playerRandom = true;\n      hatRandom = true;\n    });\n    it('hides all holes and only holes by replacing them with field characters', () => {\n      //setup\n      fieldGame.gameGrid = fieldGame.generateField(fieldHeight, fieldWidth, percentageHoles, playerRandom, hatRandom);\n      let expectedPlayerCount = 1;\n      let expectedHatCount = 1;\n      let expectedHoleCount = 0;\n\n      //exercise\n      fieldGame.hideHoles();\n      let resultPlayerCount = 0;\n      let resultHatCount = 0;\n      let resultHoleCount = 0;\n      for (let row of fieldGame.gameGrid) {\n        for (let column of row) {\n          if (column === playerCharacter) resultPlayerCount++;\n          if (column === hatCharacter) resultHatCount++;\n          if (column === holeCharacter) resultHoleCount++;\n        }\n      }\n\n      //verify\n      assert.strictEqual(expectedPlayerCount, resultPlayerCount);\n      assert.strictEqual(expectedHatCount, resultHatCount);\n      assert.strictEqual(expectedHoleCount, resultHoleCount);\n    });\n    it('throws an error if called and no gameGrid has been defined', () => {\n      //setup\n      fieldGame.gameGrid = undefined;\n\n      //exercise\n      const result = () => fieldGame.hideHoles();\n\n      //verify\n      assert.throws(result, /Game Grid must already be provided/);\n    });\n  });\n  describe('move', () => {\n    let fieldGame;\n    beforeEach(() => {\n      fieldGame = new Field();\n      fieldGame.gameGrid = [['░', '░', '░'], ['░', '!', '░'], ['░', '░', '░']];\n      fieldGame.setPlayerPosition();\n      fieldGame.setFieldDimensions();\n    });\n    it('moves the player character left one position when the direction parameter is \"a\" and leaves a path character in the previous position', () => {\n      //setup\n      const expectedPlayerPosition = [1, 0];\n      const expectedPathPosition = [1, 1];\n\n      //exercise\n      fieldGame.move('a');\n      const resultPlayerPosition = [fieldGame.playerRowPosition, fieldGame.playerColumnPosition];\n      const resultPathPosition = [];\n      for (let row = 0; row < fieldGame.gameGrid.length; row++) {\n        for (let column = 0; column < fieldGame.gameGrid[row].length; column++) {\n          if (fieldGame.gameGrid[row][column] === pathCharacter) {\n            [resultPathPosition[0], resultPathPosition[1]] = [row, column];\n          }\n        }\n      }\n\n      //verify\n      assert.deepEqual(expectedPlayerPosition, resultPlayerPosition);\n      assert.deepEqual(expectedPathPosition, resultPathPosition);\n    });\n    it('moves the player character right one position when the direction parameter is \"d\" and leaves a path character in the previous position', () => {\n      //setup\n      const expectedPlayerPosition = [1, 2];\n      const expectedPathPosition = [1, 1];\n\n      //exercise\n      fieldGame.move('d');\n      const resultPlayerPosition = [fieldGame.playerRowPosition, fieldGame.playerColumnPosition];\n      const resultPathPosition = [];\n      for (let row = 0; row < fieldGame.gameGrid.length; row++) {\n        for (let column = 0; column < fieldGame.gameGrid[row].length; column++) {\n          if (fieldGame.gameGrid[row][column] === pathCharacter) {\n            [resultPathPosition[0], resultPathPosition[1]] = [row, column];\n          }\n        }\n      }\n\n      //verify\n      assert.deepEqual(expectedPlayerPosition, resultPlayerPosition);\n      assert.deepEqual(expectedPathPosition, resultPathPosition);\n    });\n    it('moves the player character up one position when the direction parameter is \"w\" and leaves a path character in the previous position', () => {\n      //setup\n      const expectedPlayerPosition = [0, 1];\n      const expectedPathPosition = [1, 1];\n\n      //exercise\n      fieldGame.move('w');\n      const resultPlayerPosition = [fieldGame.playerRowPosition, fieldGame.playerColumnPosition];\n      const resultPathPosition = [];\n      for (let row = 0; row < fieldGame.gameGrid.length; row++) {\n        for (let column = 0; column < fieldGame.gameGrid[row].length; column++) {\n          if (fieldGame.gameGrid[row][column] === pathCharacter) {\n            [resultPathPosition[0], resultPathPosition[1]] = [row, column];\n          }\n        }\n      }\n\n      //verify\n      assert.deepEqual(expectedPlayerPosition, resultPlayerPosition);\n      assert.deepEqual(expectedPathPosition, resultPathPosition);\n    });\n    it('moves the player character down one position when the direction parameter is \"s\" and leaves a path character in the previous position', () => {\n      //setup\n      const expectedPlayerPosition = [2, 1];\n      const expectedPathPosition = [1, 1];\n\n      //exercise\n      fieldGame.move('s');\n      const resultPlayerPosition = [fieldGame.playerRowPosition, fieldGame.playerColumnPosition];\n      const resultPathPosition = [];\n      for (let row = 0; row < fieldGame.gameGrid.length; row++) {\n        for (let column = 0; column < fieldGame.gameGrid[row].length; column++) {\n          if (fieldGame.gameGrid[row][column] === pathCharacter) {\n            [resultPathPosition[0], resultPathPosition[1]] = [row, column];\n          }\n        }\n      }\n\n      //verify\n      assert.deepEqual(expectedPlayerPosition, resultPlayerPosition);\n      assert.deepEqual(expectedPathPosition, resultPathPosition);\n    });\n    it('it does not move the character if the direction parameter is not a valid WASD input', () => {\n      //setup\n      const expectedPlayerPosition = [1, 1];\n      const expectedPathCount = 0;\n\n      //exercise\n      fieldGame.move('invalid input');\n      const resultPlayerPosition = [fieldGame.playerRowPosition, fieldGame.playerColumnPosition];\n      const resultPathCount = 0;\n      for (let row = 0; row < fieldGame.gameGrid.length; row++) {\n        for (let column = 0; column < fieldGame.gameGrid[row].length; column++) {\n          if (fieldGame.gameGrid[row][column] === pathCharacter) {\n            resultPathCount = 1;\n          }\n        }\n      }\n\n      //verify\n      assert.deepEqual(expectedPlayerPosition, resultPlayerPosition);\n      assert.strictEqual(expectedPathCount, resultPathCount);\n    });\n    it('throws an error if gameGrid has not been defined yet', () => {\n      //setup\n      fieldGame.gameGrid = undefined;\n\n      //exercise\n      const result = () => fieldGame.move();\n\n      //verify\n      assert.throws(result, /This method cannot be used until a game grid has been provided/);\n    });\n  });\n  describe('moveLeft', () => {\n    let fieldGame;\n    beforeEach(() => {\n      fieldGame = new Field();\n      fieldGame.gameGrid = [['░', '░', '░'], ['░', playerCharacter, '░'], ['░', '░', '░']];\n      fieldGame.setPlayerPosition();\n      fieldGame.setFieldDimensions();\n    });\n    it('moves the player down one position and leaves a path character in previous position', () => {\n      //setup\n      const expectedPlayerPosition = [1, 0];\n      const expectedPathPosition = [1, 1];\n\n      //exercise\n      fieldGame.moveLeft();\n      const resultPlayerPosition = [fieldGame.playerRowPosition, fieldGame.playerColumnPosition];\n      const resultPathPosition = [];\n      for (let row = 0; row < fieldGame.gameGrid.length; row++) {\n        for (let column = 0; column < fieldGame.gameGrid[row].length; column++) {\n          if (fieldGame.gameGrid[row][column] === pathCharacter) {\n            [resultPathPosition[0], resultPathPosition[1]] = [row, column];\n          }\n        }\n      }\n\n      //verify\n      assert.deepEqual(expectedPlayerPosition, resultPlayerPosition);\n      assert.deepEqual(expectedPathPosition, resultPathPosition);\n    });\n    it('ends the game and does not move the player\\'s position left if the new position satisfies game\\'s end conditions', () => {\n      //setup\n      fieldGame.gameGrid[1][0] = holeCharacter;\n      fieldGame.setHoles();\n      const expectedPlayerPosition = [1, 1];\n\n      //exercise\n      fieldGame.moveLeft();\n      const resultPlayerPosition = [fieldGame.playerRowPosition, fieldGame.playerColumnPosition];\n\n      //verify\n      assert.deepEqual(expectedPlayerPosition, resultPlayerPosition);\n    });\n    it('throws an error if gameGrid has not been defined yet', () => {\n      //setup\n      fieldGame.gameGrid = undefined;\n\n      //exercise\n      const result = () => fieldGame.moveLeft();\n\n      //verify\n      assert.throws(result, /This method cannot be used until a game grid has been provided/);\n    });\n  });\n  describe('moveRight', () => {\n    let fieldGame;\n    beforeEach(() => {\n      fieldGame = new Field();\n      fieldGame.gameGrid = [['░', '░', '░'], ['░', playerCharacter, '░'], ['░', '░', '░']];\n      fieldGame.setPlayerPosition();\n      fieldGame.setFieldDimensions();\n    });\n    it('moves the player right one position and leaves a path character in previous position', () => {\n      //setup\n      const expectedPlayerPosition = [1, 2];\n      const expectedPathPosition = [1, 1];\n\n      //exercise\n      fieldGame.moveRight();\n      const resultPlayerPosition = [fieldGame.playerRowPosition, fieldGame.playerColumnPosition];\n      const resultPathPosition = [];\n      for (let row = 0; row < fieldGame.gameGrid.length; row++) {\n        for (let column = 0; column < fieldGame.gameGrid[row].length; column++) {\n          if (fieldGame.gameGrid[row][column] === pathCharacter) {\n            [resultPathPosition[0], resultPathPosition[1]] = [row, column];\n          }\n        }\n      }\n\n      //verify\n      assert.deepEqual(expectedPlayerPosition, resultPlayerPosition);\n      assert.deepEqual(expectedPathPosition, resultPathPosition);\n    });\n    it('ends the game and does not move the player\\'s position right if the new position satisfies game\\'s end conditions', () => {\n      //setup\n      fieldGame.gameGrid[1][2] = hatCharacter;\n      fieldGame.setHatPosition();\n      const expectedPlayerPosition = [1, 1];\n\n      //exercise\n      fieldGame.moveRight();\n      const resultPlayerPosition = [fieldGame.playerRowPosition, fieldGame.playerColumnPosition];\n\n      //verify\n      assert.deepEqual(expectedPlayerPosition, resultPlayerPosition);\n    });\n    it('throws an error if gameGrid has not been defined yet', () => {\n      //setup\n      fieldGame.gameGrid = undefined;\n\n      //exercise\n      const result = () => fieldGame.moveRight();\n\n      //verify\n      assert.throws(result, /This method cannot be used until a game grid has been provided/);\n    });\n  });\n  describe('moveUp', () => {\n    let fieldGame;\n    beforeEach(() => {\n      fieldGame = new Field();\n      fieldGame.gameGrid = [['░', '░', '░'], ['░', playerCharacter, '░'], ['░', '░', '░']];\n      fieldGame.setPlayerPosition();\n      fieldGame.setFieldDimensions();\n    });\n    it('moves the player down up position and leaves a path character in previous position', () => {\n      //setup\n      const expectedPlayerPosition = [0, 1];\n      const expectedPathPosition = [1, 1];\n\n      //exercise\n      fieldGame.moveUp();\n      const resultPlayerPosition = [fieldGame.playerRowPosition, fieldGame.playerColumnPosition];\n      const resultPathPosition = [];\n      for (let row = 0; row < fieldGame.gameGrid.length; row++) {\n        for (let column = 0; column < fieldGame.gameGrid[row].length; column++) {\n          if (fieldGame.gameGrid[row][column] === pathCharacter) {\n            [resultPathPosition[0], resultPathPosition[1]] = [row, column];\n          }\n        }\n      }\n\n      //verify\n      assert.deepEqual(expectedPlayerPosition, resultPlayerPosition);\n      assert.deepEqual(expectedPathPosition, resultPathPosition);\n    });\n    it('ends the game and does not move the player\\'s position up if the new position satisfies game\\'s end conditions', () => {\n      //setup\n      fieldGame.gameGrid[0][1] = hatCharacter;\n      fieldGame.setHatPosition();\n      const expectedPlayerPosition = [1, 1];\n\n      //exercise\n      fieldGame.moveUp();\n      const resultPlayerPosition = [fieldGame.playerRowPosition, fieldGame.playerColumnPosition];\n\n      //verify\n      assert.deepEqual(expectedPlayerPosition, resultPlayerPosition);\n    });\n    it('throws an error if gameGrid has not been defined yet', () => {\n      //setup\n      fieldGame.gameGrid = undefined;\n\n      //exercise\n      const result = () => fieldGame.moveUp();\n\n      //verify\n      assert.throws(result, /This method cannot be used until a game grid has been provided/);\n    });\n  });\n  describe('moveDown', () => {\n    let fieldGame;\n    beforeEach(() => {\n      fieldGame = new Field();\n      fieldGame.gameGrid = [['░', '░', '░'], ['░', playerCharacter, '░'], ['░', '░', '░']];\n      fieldGame.setPlayerPosition();\n      fieldGame.setFieldDimensions();\n    });\n    it('moves the player down one position and leaves a path character in previous position', () => {\n      //setup\n      const expectedPlayerPosition = [2, 1];\n      const expectedPathPosition = [1, 1];\n\n      //exercise\n      fieldGame.moveDown();\n      const resultPlayerPosition = [fieldGame.playerRowPosition, fieldGame.playerColumnPosition];\n      const resultPathPosition = [];\n      for (let row = 0; row < fieldGame.gameGrid.length; row++) {\n        for (let column = 0; column < fieldGame.gameGrid[row].length; column++) {\n          if (fieldGame.gameGrid[row][column] === pathCharacter) {\n            [resultPathPosition[0], resultPathPosition[1]] = [row, column];\n          }\n        }\n      }\n\n      //verify\n      assert.deepEqual(expectedPlayerPosition, resultPlayerPosition);\n      assert.deepEqual(expectedPathPosition, resultPathPosition);\n    });\n    it('ends the game and does not move the player\\'s position down if the new position satisfies game\\'s end conditions', () => {\n      //setup\n      const expectedPlayerPosition = [2, 1];\n\n      //exercise\n      fieldGame.moveDown();\n      fieldGame.moveDown();\n      const resultPlayerPosition = [fieldGame.playerRowPosition, fieldGame.playerColumnPosition];\n\n      //verify\n      assert.deepEqual(expectedPlayerPosition, resultPlayerPosition);\n    });\n    it('throws an error if gameGrid has not been defined yet', () => {\n      //setup\n      fieldGame.gameGrid = undefined;\n\n      //exercise\n      const result = () => fieldGame.moveDown();\n\n      //verify\n      assert.throws(result, /This method cannot be used until a game grid has been provided/);\n    });\n  });\n  describe('meetsEndConditions', () => {\n    let fieldGame, outOfBoundsPosition, hatPosition, holePosition, safePosition;\n    beforeEach(() => {\n      fieldGame = new Field();\n      fieldGame.gameGrid = [['░', '░', '░'], ['░', '░', hatCharacter], ['░', '░', holeCharacter]];\n      fieldGame.setFieldDimensions();\n      fieldGame.setHoles();\n      fieldGame.setHatPosition();\n      fieldGame.gameActive = true;\n      outOfBoundsPosition = [0, 4];\n      hatPosition = [1, 3];\n      holePosition = [2, 3];\n      safePosition = [0, 0];\n    });\n    it('returns true if newPosition parameter is out of the game map\\'s bounds and calls gameOver to end the game', () => {\n      //setup\n      const newPosition = outOfBoundsPosition;\n      const expectedResult = true;\n\n      //exercise\n      const actualResult = fieldGame.meetsEndConditions(newPosition);\n\n      //verify\n      assert.strictEqual(expectedResult, actualResult);\n      assert.strictEqual(fieldGame.gameActive, false);\n    });\n    it('returns true if newPosition parameter is the hat location and calls gameOver to end the game', () => {\n      //setup\n      const newPosition = hatPosition;\n      const expectedResult = true;\n\n      //exercise\n      const actualResult = fieldGame.meetsEndConditions(newPosition);\n\n      //verify\n      assert.strictEqual(expectedResult, actualResult);\n      assert.strictEqual(fieldGame.gameActive, false);\n    });\n    it('returns true if newPosition parameter is a hole location and calls gameOver to end the game', () => {\n      //setup\n      const newPosition = holePosition;\n      const expectedResult = true;\n\n      //exercise\n      const actualResult = fieldGame.meetsEndConditions(newPosition);\n\n      //verify\n      assert.strictEqual(expectedResult, actualResult);\n      assert.strictEqual(fieldGame.gameActive, false);\n    });\n    it('returns false if newPosition parameter does not meet end conditions and does not call gameOver to end the game', () => {\n      //setup\n      const newPosition = safePosition;\n      const expectedResult = false;\n\n      //exercise\n      const actualResult = fieldGame.meetsEndConditions(newPosition);\n\n      //verify\n      assert.strictEqual(expectedResult, actualResult);\n      assert.strictEqual(fieldGame.gameActive, true);\n    });\n    it('throws an error if gameGrid has not been defined yet', () => {\n      //setup\n      fieldGame.gameGrid = undefined;\n\n      //exercise\n      const result = () => fieldGame.meetsEndConditions();\n\n      //verify\n      assert.throws(result, /This method cannot be used until a game grid has been provided/);\n    });\n  });\n  describe('gameOver', () => {\n    let fieldGame, gameOverReason, consoleSpy;\n    beforeEach(() => {\n      fieldGame = new Field();\n      fieldGame.gameActive = true;\n      gameOverReason = {\n        OutOfBounds: 'out',\n        Win: 'win',\n        FellInHole: 'fell'\n      };\n    });\n    it('ends the game if \"out\" is the passed in gameOver reason and returns the reason', () => {\n      //setup\n      const gameOverArgument = gameOverReason.OutOfBounds;\n      const expectedGameActiveResult = false;\n      const expectedGameOverReturnReason = gameOverArgument;\n\n      //exercise\n      const actualGameOverReturnReason = fieldGame.gameOver(gameOverArgument);\n      const actualGameActiveResult = fieldGame.gameActive;\n\n      //verify\n      assert.equal(expectedGameActiveResult, actualGameActiveResult);\n      assert.equal(expectedGameOverReturnReason, actualGameOverReturnReason);\n    });\n    it('ends the game if \"win\" is the passed in gameOver reason and returns the reason', () => {\n      //setup\n      const gameOverArgument = gameOverReason.Win;\n      const expectedGameActiveResult = false;\n      const expectedGameOverReturnReason = gameOverArgument;\n\n      //exercise\n      const actualGameOverReturnReason = fieldGame.gameOver(gameOverArgument);\n      const actualGameActiveResult = fieldGame.gameActive;\n\n      //verify\n      assert.equal(expectedGameActiveResult, actualGameActiveResult);\n      assert.equal(expectedGameOverReturnReason, actualGameOverReturnReason);\n    });\n    it('ends the game if \"fell\" is the passed in gameOver reason and returns the reason', () => {\n      //setup\n      const gameOverArgument = gameOverReason.FellInHole;\n      const expectedGameActiveResult = false;\n      const expectedGameOverReturnReason = gameOverArgument;\n\n      //exercise\n      const actualGameOverReturnReason = fieldGame.gameOver(gameOverArgument);\n      const actualGameActiveResult = fieldGame.gameActive;\n\n      //verify\n      assert.equal(expectedGameActiveResult, actualGameActiveResult);\n      assert.equal(expectedGameOverReturnReason, actualGameOverReturnReason);\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhc3NlcnQiLCJyZXF1aXJlIiwiRmllbGQiLCJwbGF5ZXJDaGFyYWN0ZXIiLCJoYXRDaGFyYWN0ZXIiLCJob2xlQ2hhcmFjdGVyIiwiZmllbGRDaGFyYWN0ZXIiLCJwYXRoQ2hhcmFjdGVyIiwiZGVzY3JpYmUiLCJmaWVsZCIsInJvd0luZGV4IiwiY29sdW1uSW5kZXgiLCJiZWZvcmVFYWNoIiwiZmllbGRHYW1lIiwiaXQiLCJoZWlnaHQiLCJ3aWR0aCIsInJlc3VsdCIsImdldFJhbmRvbUtleVBvc2l0aW9uIiwib2siLCJ0aHJvd3MiLCJmaWVsZEhlaWdodCIsImZpZWxkV2lkdGgiLCJwZXJjZW50YWdlSG9sZXMiLCJwbGF5ZXJSYW5kb20iLCJoYXRSYW5kb20iLCJnYW1lR3JpZCIsImdlbmVyYXRlRmllbGQiLCJ1bmRlZmluZWQiLCJzZXRIYXRQb3NpdGlvbiIsImhhdFJvd1Bvc2l0aW9uIiwiaGF0Q29sdW1uUG9zaXRpb24iLCJzdHJpY3RFcXVhbCIsInNldFBsYXllclBvc2l0aW9uIiwicGxheWVyUm93UG9zaXRpb24iLCJwbGF5ZXJDb2x1bW5Qb3NpdGlvbiIsInNldEZpZWxkRGltZW5zaW9ucyIsImV4cGVjdGVkRmllbGRXaWR0aCIsImxlbmd0aCIsImV4cGVjdGVkRmllbGRIZWlnaHQiLCJmaWVsZFdpZHRoUmVzdWx0IiwiZmllbGRIZWlnaHRSZXN1bHQiLCJzZXRIb2xlcyIsImV4cGVjdGVkSG9sZVBvc2l0aW9ucyIsInJlc3VsdEhvbGVQb3NpdGlvbnMiLCJob2xlcyIsImRlZXBFcXVhbCIsInBvcHVsYXRlUmFuZG9tSG9sZXMiLCJ0ZXN0UGFzcyIsInJvdyIsImNvbHVtbiIsInN0cmluZ2lmaWVkUG9zaXRpb24iLCJKU09OIiwic3RyaW5naWZ5IiwiZmluZCIsImVsZW1lbnQiLCJyZXN1bHROdW1iZXJIb2xlcyIsImV4cGVjdGVkTnVtYmVySG9sZXMiLCJNYXRoIiwiZmxvb3IiLCJleHBlY3RlZEhlaWdodCIsImV4cGVjdGVkV2lkdGgiLCJoZWlnaHRSZXN1bHQiLCJ3aWR0aFJlc3VsdCIsImRlZmF1bHRQbGF5ZXJQb3NpdGlvbiIsInBvdGVudGlhbEZhaWx1cmVzIiwiaSIsInBsYXllclJvd1Bvc2l0aW9uUmVzdWx0IiwicGxheWVyQ29sdW1uUG9zaXRpb25SZXN1bHQiLCJkZWZhdWx0SGF0Um93UG9zaXRpb24iLCJkZWZhdWx0SGF0Q29sdW1uUG9zaXRpb24iLCJmYWlsdXJlIiwiaGF0UG9zaXRpb24iLCJleHBlY3RlZFBsYXllckNvdW50IiwiZXhwZWN0ZWRIYXRDb3VudCIsImV4cGVjdGVkSG9sZUNvdW50IiwiaGlkZUhvbGVzIiwicmVzdWx0UGxheWVyQ291bnQiLCJyZXN1bHRIYXRDb3VudCIsInJlc3VsdEhvbGVDb3VudCIsImV4cGVjdGVkUGxheWVyUG9zaXRpb24iLCJleHBlY3RlZFBhdGhQb3NpdGlvbiIsIm1vdmUiLCJyZXN1bHRQbGF5ZXJQb3NpdGlvbiIsInJlc3VsdFBhdGhQb3NpdGlvbiIsImV4cGVjdGVkUGF0aENvdW50IiwicmVzdWx0UGF0aENvdW50IiwibW92ZUxlZnQiLCJtb3ZlUmlnaHQiLCJtb3ZlVXAiLCJtb3ZlRG93biIsIm91dE9mQm91bmRzUG9zaXRpb24iLCJob2xlUG9zaXRpb24iLCJzYWZlUG9zaXRpb24iLCJnYW1lQWN0aXZlIiwibmV3UG9zaXRpb24iLCJleHBlY3RlZFJlc3VsdCIsImFjdHVhbFJlc3VsdCIsIm1lZXRzRW5kQ29uZGl0aW9ucyIsImdhbWVPdmVyUmVhc29uIiwiY29uc29sZVNweSIsIk91dE9mQm91bmRzIiwiV2luIiwiRmVsbEluSG9sZSIsImdhbWVPdmVyQXJndW1lbnQiLCJleHBlY3RlZEdhbWVBY3RpdmVSZXN1bHQiLCJleHBlY3RlZEdhbWVPdmVyUmV0dXJuUmVhc29uIiwiYWN0dWFsR2FtZU92ZXJSZXR1cm5SZWFzb24iLCJnYW1lT3ZlciIsImFjdHVhbEdhbWVBY3RpdmVSZXN1bHQiLCJlcXVhbCJdLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxkcGV0dFxccHJvamVjdHNcXEZpbmQgWW91ciBIYXRcXHRlc3RcXCIsInNvdXJjZXMiOlsiRmllbGRDbGFzc190ZXN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGFzc2VydCA9IHJlcXVpcmUoJ2Fzc2VydCcpO1xyXG5jb25zdCB7IEZpZWxkIH0gPSByZXF1aXJlKCcuLi9GaWVsZENsYXNzJyk7XHJcblxyXG5jb25zdCBwbGF5ZXJDaGFyYWN0ZXIgPSAnISc7XHJcbmNvbnN0IGhhdENoYXJhY3RlciA9ICdeJztcclxuY29uc3QgaG9sZUNoYXJhY3RlciA9ICdPJztcclxuY29uc3QgZmllbGRDaGFyYWN0ZXIgPSAn4paRJztcclxuY29uc3QgcGF0aENoYXJhY3RlciA9ICcqJztcclxuXHJcbmRlc2NyaWJlKCdGaWVsZCcsICgpID0+IHtcclxuICAgIGRlc2NyaWJlKCcuZ2V0UmFuZG9tS2V5UG9zaXRpb24nLCAoKSA9PiB7XHJcblxyXG4gICAgICAgIGxldCBmaWVsZCwgcm93SW5kZXgsIGNvbHVtbkluZGV4O1xyXG4gICAgICAgIGJlZm9yZUVhY2goKCkgPT4ge1xyXG4gICAgICAgICAgICBmaWVsZEdhbWUgPSBuZXcgRmllbGQoKTtcclxuICAgICAgICAgICAgcm93SW5kZXggPSAwO1xyXG4gICAgICAgICAgICBjb2x1bW5JbmRleCA9IDE7XHJcbiAgICAgICAgfSlcclxuXHJcbiAgICAgICAgaXQoJ2dlbmVyYXRlcyBhIHZhbGlkIHJhbmRvbSBwb3NpdGlvbiBhcnJheSBbcm93LCBjb2x1bW5dIG9uIHRoZSBnYW1lIG1hcCB3aGVuIGhlaWdodCBpcyAxIGFuZCB3aWR0aCBpcyAxJywgKCkgPT4ge1xyXG4gICAgICAgICAgICAvL3NldHVwXHJcbiAgICAgICAgICAgIGNvbnN0IGhlaWdodCA9IDE7XHJcbiAgICAgICAgICAgIGNvbnN0IHdpZHRoID0gMTtcclxuXHJcbiAgICAgICAgICAgIC8vZXhlcmNpc2VcclxuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gZmllbGRHYW1lLmdldFJhbmRvbUtleVBvc2l0aW9uKGhlaWdodCwgd2lkdGgpO1xyXG5cclxuICAgICAgICAgICAgLy92ZXJpZnlcclxuICAgICAgICAgICAgYXNzZXJ0Lm9rKFxyXG4gICAgICAgICAgICAgICAgKHJlc3VsdFtyb3dJbmRleF0gPj0gMCAmJiByZXN1bHRbcm93SW5kZXhdIDw9IGhlaWdodCkgXHJcbiAgICAgICAgICAgICAgICAmJiBcclxuICAgICAgICAgICAgICAgIChyZXN1bHRbY29sdW1uSW5kZXhdID49IDAgJiYgcmVzdWx0W2NvbHVtbkluZGV4XSA8PSB3aWR0aClcclxuICAgICAgICAgICAgKTtcclxuICAgICAgICB9KVxyXG5cclxuICAgICAgICBpdCgnZ2VuZXJhdGVzIGEgdmFsaWQgcmFuZG9tIHBvc2l0aW9uIGFycmF5IFtyb3csIGNvbHVtbl0gb24gdGhlIGdhbWUgbWFwIHdoZW4gaGVpZ2h0IGlzIDEwIGFuZCB3aWR0aCBpcyAxMCcsICgpID0+IHtcclxuICAgICAgICAgICAgLy9zZXR1cFxyXG4gICAgICAgICAgICBjb25zdCBoZWlnaHQgPSAxMDtcclxuICAgICAgICAgICAgY29uc3Qgd2lkdGggPSAxMDtcclxuXHJcbiAgICAgICAgICAgIC8vZXhlcmNpc2VcclxuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gZmllbGRHYW1lLmdldFJhbmRvbUtleVBvc2l0aW9uKGhlaWdodCwgd2lkdGgpO1xyXG5cclxuICAgICAgICAgICAgLy92ZXJpZnlcclxuICAgICAgICAgICAgYXNzZXJ0Lm9rKFxyXG4gICAgICAgICAgICAgICAgKHJlc3VsdFtyb3dJbmRleF0gPj0gMCAmJiByZXN1bHRbcm93SW5kZXhdIDw9IGhlaWdodCkgXHJcbiAgICAgICAgICAgICAgICAmJiBcclxuICAgICAgICAgICAgICAgIChyZXN1bHRbY29sdW1uSW5kZXhdID49IDAgJiYgcmVzdWx0W2NvbHVtbkluZGV4XSA8PSB3aWR0aClcclxuICAgICAgICAgICAgKTtcclxuICAgICAgICB9KVxyXG5cclxuICAgICAgICBpdCgnZ2VuZXJhdGVzIGEgdmFsaWQgcmFuZG9tIHBvc2l0aW9uIGFycmF5IFtyb3csIGNvbHVtbl0gb24gdGhlIGdhbWUgbWFwIHdoZW4gaGVpZ2h0IGlzIDEwMCBhbmQgd2lkdGggaXMgMTAwJywgKCkgPT4ge1xyXG4gICAgICAgICAgICAvL3NldHVwXHJcbiAgICAgICAgICAgIGNvbnN0IGhlaWdodCA9IDEwMDtcclxuICAgICAgICAgICAgY29uc3Qgd2lkdGggPSAxMDA7XHJcblxyXG4gICAgICAgICAgICAvL2V4ZXJjaXNlXHJcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGZpZWxkR2FtZS5nZXRSYW5kb21LZXlQb3NpdGlvbihoZWlnaHQsIHdpZHRoKTtcclxuXHJcbiAgICAgICAgICAgIC8vdmVyaWZ5XHJcbiAgICAgICAgICAgIGFzc2VydC5vayhcclxuICAgICAgICAgICAgICAgIChyZXN1bHRbcm93SW5kZXhdID49IDAgJiYgcmVzdWx0W3Jvd0luZGV4XSA8PSBoZWlnaHQpIFxyXG4gICAgICAgICAgICAgICAgJiYgXHJcbiAgICAgICAgICAgICAgICAocmVzdWx0W2NvbHVtbkluZGV4XSA+PSAwICYmIHJlc3VsdFtjb2x1bW5JbmRleF0gPD0gd2lkdGgpXHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgfSlcclxuXHJcbiAgICAgICAgaXQoJ2dlbmVyYXRlcyBhIHZhbGlkIHJhbmRvbSBwb3NpdGlvbiBhcnJheSBbcm93LCBjb2x1bW5dIG9uIHRoZSBnYW1lIG1hcCB3aGVuIGhlaWdodCBpcyAzIGFuZCB3aWR0aCBpcyA5JywgKCkgPT4ge1xyXG4gICAgICAgICAgICAvL3NldHVwXHJcbiAgICAgICAgICAgIGNvbnN0IGhlaWdodCA9IDM7XHJcbiAgICAgICAgICAgIGNvbnN0IHdpZHRoID0gOTtcclxuXHJcbiAgICAgICAgICAgIC8vZXhlcmNpc2VcclxuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gZmllbGRHYW1lLmdldFJhbmRvbUtleVBvc2l0aW9uKGhlaWdodCwgd2lkdGgpO1xyXG5cclxuICAgICAgICAgICAgLy92ZXJpZnlcclxuICAgICAgICAgICAgYXNzZXJ0Lm9rKFxyXG4gICAgICAgICAgICAgICAgKHJlc3VsdFtyb3dJbmRleF0gPj0gMCAmJiByZXN1bHRbcm93SW5kZXhdIDw9IGhlaWdodCkgXHJcbiAgICAgICAgICAgICAgICAmJiBcclxuICAgICAgICAgICAgICAgIChyZXN1bHRbY29sdW1uSW5kZXhdID49IDAgJiYgcmVzdWx0W2NvbHVtbkluZGV4XSA8PSB3aWR0aClcclxuICAgICAgICAgICAgKTtcclxuICAgICAgICB9KVxyXG5cclxuICAgICAgICBpdCgnZ2VuZXJhdGVzIGEgdmFsaWQgcmFuZG9tIHBvc2l0aW9uIGFycmF5IFtyb3csIGNvbHVtbl0gb24gdGhlIGdhbWUgbWFwIHdoZW4gaGVpZ2h0IGlzIDkgYW5kIHdpZHRoIGlzIDMnLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIC8vc2V0dXBcclxuICAgICAgICAgICAgY29uc3QgaGVpZ2h0ID0gOTtcclxuICAgICAgICAgICAgY29uc3Qgd2lkdGggPSAzO1xyXG5cclxuICAgICAgICAgICAgLy9leGVyY2lzZVxyXG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSBmaWVsZEdhbWUuZ2V0UmFuZG9tS2V5UG9zaXRpb24oaGVpZ2h0LCB3aWR0aCk7XHJcblxyXG4gICAgICAgICAgICAvL3ZlcmlmeVxyXG4gICAgICAgICAgICBhc3NlcnQub2soXHJcbiAgICAgICAgICAgICAgICAocmVzdWx0W3Jvd0luZGV4XSA+PSAwICYmIHJlc3VsdFtyb3dJbmRleF0gPD0gaGVpZ2h0KSBcclxuICAgICAgICAgICAgICAgICYmIFxyXG4gICAgICAgICAgICAgICAgKHJlc3VsdFtjb2x1bW5JbmRleF0gPj0gMCAmJiByZXN1bHRbY29sdW1uSW5kZXhdIDw9IHdpZHRoKVxyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgIH0pXHJcblxyXG4gICAgICAgIGl0KCd0aHJvd3MgYW4gZXJyb3IgaWYgaXQgaXMgcGFzc2VkIGEgaGVpZ2h0IHRoYXQgaXMgbGVzcyB0aGFuIDEnLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIC8vc2V0dXBcclxuICAgICAgICAgICAgY29uc3QgaGVpZ2h0ID0gLTE7XHJcbiAgICAgICAgICAgIGNvbnN0IHdpZHRoID0gMTA7XHJcblxyXG4gICAgICAgICAgICAvL2V4ZXJjaXNlXHJcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9ICgpID0+IGZpZWxkR2FtZS5nZXRSYW5kb21LZXlQb3NpdGlvbihoZWlnaHQsIHdpZHRoKTtcclxuICAgIFxyXG5cclxuICAgICAgICAgICAgLy92ZXJpZnlcclxuICAgICAgICAgICAgYXNzZXJ0LnRocm93cyhyZXN1bHQsIC9IZWlnaHQgYW5kIHdpZHRoIHZhbHVlcyBjYW5ub3QgYmUgbGVzcyB0aGFuIDEvKVxyXG4gICAgICAgIH0pXHJcblxyXG4gICAgICAgIGl0KCd0aHJvd3MgYW4gZXJyb3IgaWYgaXQgaXMgcGFzc2VkIGEgd2lkdGggdGhhdCBpcyBsZXNzIHRoYW4gMScsICgpID0+IHtcclxuICAgICAgICAgICAgLy9zZXR1cFxyXG4gICAgICAgICAgICBjb25zdCBoZWlnaHQgPSAxMDtcclxuICAgICAgICAgICAgY29uc3Qgd2lkdGggPSAtMTtcclxuXHJcbiAgICAgICAgICAgIC8vZXhlcmNpc2VcclxuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gKCkgPT4gZmllbGRHYW1lLmdldFJhbmRvbUtleVBvc2l0aW9uKGhlaWdodCwgd2lkdGgpO1xyXG4gICAgXHJcblxyXG4gICAgICAgICAgICAvL3ZlcmlmeVxyXG4gICAgICAgICAgICBhc3NlcnQudGhyb3dzKHJlc3VsdCwgL0hlaWdodCBhbmQgd2lkdGggdmFsdWVzIGNhbm5vdCBiZSBsZXNzIHRoYW4gMS8pXHJcbiAgICAgICAgfSlcclxuICAgIH0pXHJcblxyXG4gICAgZGVzY3JpYmUoJy5zZXRIYXRQb3NpdGlvbicsICgpID0+IHtcclxuXHJcbiAgICAgICAgbGV0IGZpZWxkR2FtZTtcclxuICAgICAgICBiZWZvcmVFYWNoKCgpID0+IHtcclxuICAgICAgICAgICAgZmllbGRHYW1lID0gbmV3IEZpZWxkKCk7XHJcblxyXG4gICAgICAgICAgICAvL2dlbmVyYXRlIGFuZCBhc3NpZ24gZ2FtZUdyaWQgZm9yIGZpZWxkIGluc3RhbmNlXHJcbiAgICAgICAgICAgIGNvbnN0IGZpZWxkSGVpZ2h0ID0gMTA7XHJcbiAgICAgICAgICAgIGNvbnN0IGZpZWxkV2lkdGggPSA1MDtcclxuICAgICAgICAgICAgY29uc3QgcGVyY2VudGFnZUhvbGVzID0gMjA7XHJcbiAgICAgICAgICAgIGNvbnN0IHBsYXllclJhbmRvbSA9IHRydWU7XHJcbiAgICAgICAgICAgIGNvbnN0IGhhdFJhbmRvbSA9IHRydWU7XHJcbiAgICAgICAgICAgIGZpZWxkR2FtZS5nYW1lR3JpZCA9IGZpZWxkR2FtZS5nZW5lcmF0ZUZpZWxkKGZpZWxkSGVpZ2h0LCBmaWVsZFdpZHRoLCBwZXJjZW50YWdlSG9sZXMsIHBsYXllclJhbmRvbSwgaGF0UmFuZG9tKTtcclxuICAgICAgICB9KVxyXG5cclxuICAgICAgICBpdCgndGhyb3dzIGFuIGVycm9yIGlmIHRoZSBmaWVsZCBpbnN0YW5jZVxcJ3MgZ2FtZUdyaWQgcHJvcGVydHkgaXMgdW5kZWZpbmVkJywgKCkgPT4ge1xyXG4gICAgICAgICAgICAvL3NldHVwXHJcbiAgICAgICAgICAgIGZpZWxkR2FtZS5nYW1lR3JpZCA9IHVuZGVmaW5lZDtcclxuXHJcbiAgICAgICAgICAgIC8vZXhlcmNpc2VcclxuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gKCkgPT4gZmllbGRHYW1lLnNldEhhdFBvc2l0aW9uKCk7XHJcblxyXG4gICAgICAgICAgICAvL3ZlcmlmeVxyXG4gICAgICAgICAgICBhc3NlcnQudGhyb3dzKHJlc3VsdCwgL0dhbWUgR3JpZCBtdXN0IGFscmVhZHkgYmUgcHJvdmlkZWQvKTtcclxuICAgICAgICB9KVxyXG5cclxuICAgICAgICBpdCgnc2V0cyB0aGUgaW5zdGFuY2VcXCdzIGhhdFJvd1Bvc2l0aW9uIGFuZCBoYXRDb2x1bW5Qb3NpdGlvbiB3aXRoIHRoZSBjb3JyZWN0IHZhbHVlcyB3aGVuIGNhbGxlZCcsICgpID0+IHtcclxuICAgICAgICAgICAgLy9zZXR1cFxyXG4gICAgICAgICAgICBmaWVsZEdhbWUuc2V0SGF0UG9zaXRpb24oKTtcclxuXHJcbiAgICAgICAgICAgIC8vZXhlcmNpc2VcclxuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gZmllbGRHYW1lLmdhbWVHcmlkW2ZpZWxkR2FtZS5oYXRSb3dQb3NpdGlvbl1bZmllbGRHYW1lLmhhdENvbHVtblBvc2l0aW9uXTtcclxuXHJcbiAgICAgICAgICAgIC8vdmVyaWZ5XHJcbiAgICAgICAgICAgIGFzc2VydC5zdHJpY3RFcXVhbChyZXN1bHQsIGhhdENoYXJhY3Rlcik7XHJcbiAgICAgICAgfSlcclxuICAgIH0pXHJcblxyXG4gICAgZGVzY3JpYmUoJy5zZXRQbGF5ZXJQb3NpdGlvbicsICgpID0+IHtcclxuXHJcbiAgICAgICAgbGV0IGZpZWxkR2FtZTtcclxuICAgICAgICBiZWZvcmVFYWNoKCgpID0+IHtcclxuICAgICAgICAgICAgZmllbGRHYW1lID0gbmV3IEZpZWxkKCk7XHJcblxyXG4gICAgICAgICAgICAvL2dlbmVyYXRlIGFuZCBhc3NpZ24gZ2FtZUdyaWQgZm9yIGZpZWxkIGluc3RhbmNlXHJcbiAgICAgICAgICAgIGNvbnN0IGZpZWxkSGVpZ2h0ID0gMTA7XHJcbiAgICAgICAgICAgIGNvbnN0IGZpZWxkV2lkdGggPSA1MDtcclxuICAgICAgICAgICAgY29uc3QgcGVyY2VudGFnZUhvbGVzID0gMjA7XHJcbiAgICAgICAgICAgIGNvbnN0IHBsYXllclJhbmRvbSA9IHRydWU7XHJcbiAgICAgICAgICAgIGNvbnN0IGhhdFJhbmRvbSA9IHRydWU7XHJcbiAgICAgICAgICAgIGZpZWxkR2FtZS5nYW1lR3JpZCA9IGZpZWxkR2FtZS5nZW5lcmF0ZUZpZWxkKGZpZWxkSGVpZ2h0LCBmaWVsZFdpZHRoLCBwZXJjZW50YWdlSG9sZXMsIHBsYXllclJhbmRvbSwgaGF0UmFuZG9tKTtcclxuICAgICAgICAgICAgXHJcblxyXG4gICAgICAgIH0pXHJcblxyXG4gICAgICAgIGl0KCd0aHJvd3MgYW4gZXJyb3IgaWYgdGhlIGZpZWxkIGluc3RhbmNlXFwncyBnYW1lR3JpZCBwcm9wZXJ0eSBpcyB1bmRlZmluZWQnLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIC8vc2V0dXBcclxuICAgICAgICAgICAgZmllbGRHYW1lLmdhbWVHcmlkID0gdW5kZWZpbmVkO1xyXG5cclxuICAgICAgICAgICAgLy9leGVyY2lzZVxyXG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSAoKSA9PiBmaWVsZEdhbWUuc2V0UGxheWVyUG9zaXRpb24oKTtcclxuXHJcbiAgICAgICAgICAgIC8vdmVyaWZ5XHJcbiAgICAgICAgICAgIGFzc2VydC50aHJvd3MocmVzdWx0LCAvR2FtZSBHcmlkIG11c3QgYWxyZWFkeSBiZSBwcm92aWRlZC8pO1xyXG4gICAgICAgIH0pXHJcblxyXG4gICAgICAgIGl0KCdzZXRzIHRoZSBpbnN0YW5jZVxcJ3MgcGxheWVyUm93UG9zaXRpb24gYW5kIHBsYXllckNvbHVtblBvc2l0aW9uIHdpdGggdGhlIGNvcnJlY3QgdmFsdWVzIHdoZW4gY2FsbGVkJywgKCkgPT4ge1xyXG4gICAgICAgICAgICAvL3NldHVwXHJcbiAgICAgICAgICAgIGZpZWxkR2FtZS5zZXRQbGF5ZXJQb3NpdGlvbigpO1xyXG5cclxuICAgICAgICAgICAgLy9leGVyY2lzZVxyXG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSBmaWVsZEdhbWUuZ2FtZUdyaWRbZmllbGRHYW1lLnBsYXllclJvd1Bvc2l0aW9uXVtmaWVsZEdhbWUucGxheWVyQ29sdW1uUG9zaXRpb25dO1xyXG5cclxuICAgICAgICAgICAgLy92ZXJpZnlcclxuICAgICAgICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKHJlc3VsdCwgcGxheWVyQ2hhcmFjdGVyKTtcclxuICAgICAgICB9KVxyXG4gICAgfSlcclxuXHJcbiAgICBkZXNjcmliZSgnLnNldEZpZWxkRGltZW5zaW9ucycsICgpID0+IHtcclxuXHJcbiAgICAgICAgbGV0IGZpZWxkR2FtZTtcclxuICAgICAgICBiZWZvcmVFYWNoKCgpID0+IHtcclxuICAgICAgICAgICAgZmllbGRHYW1lID0gbmV3IEZpZWxkKCk7XHJcbiAgICAgICAgfSlcclxuICAgICAgICBcclxuICAgICAgICBpdCgndGhyb3dzIGFuIGVycm9yIGlmIHRoZSBmaWVsZCBpbnN0YW5jZVxcJ3MgZ2FtZUdyaWQgcHJvcGVydHkgaXMgdW5kZWZpbmVkJywgKCkgPT4ge1xyXG4gICAgICAgICAgICAvL3NldHVwXHJcbiAgICAgICAgICAgIGZpZWxkR2FtZS5nYW1lR3JpZCA9IHVuZGVmaW5lZDtcclxuXHJcbiAgICAgICAgICAgIC8vZXhlcmNpc2VcclxuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gKCkgPT4gZmllbGRHYW1lLnNldEZpZWxkRGltZW5zaW9ucygpO1xyXG5cclxuICAgICAgICAgICAgLy92ZXJpZnlcclxuICAgICAgICAgICAgYXNzZXJ0LnRocm93cyhyZXN1bHQsIC9HYW1lIEdyaWQgbXVzdCBhbHJlYWR5IGJlIHByb3ZpZGVkLyk7XHJcbiAgICAgICAgfSlcclxuXHJcbiAgICAgICAgaXQoJ2NvcnJlY3RseSBzZXRzIHRoZSBmaWVsZFxcJ3MgZGltZW5zaW9ucyB3aGVuIGNhbGxlZCBhbmQgYSBjdXN0b20gZ2FtZSBmaWVsZCBoYXMgYmVlbiBwcm92aWRlZCcsICgpID0+IHtcclxuICAgICAgICAgICAgLy9zZXR1cFxyXG4gICAgICAgICAgICBmaWVsZEdhbWUuZ2FtZUdyaWQgPSBbXHJcbiAgICAgICAgICAgICAgICBbJyonLCAn4paRJywgJ08nXSxcclxuICAgICAgICAgICAgICAgIFsn4paRJywgJ08nLCAn4paRJ10sXHJcbiAgICAgICAgICAgICAgICBbJ+KWkScsICdeJywgJ+KWkSddXHJcbiAgICAgICAgICAgIF07XHJcbiAgICAgICAgICAgIGNvbnN0IGV4cGVjdGVkRmllbGRXaWR0aCA9IGZpZWxkR2FtZS5nYW1lR3JpZFswXS5sZW5ndGg7XHJcbiAgICAgICAgICAgIGNvbnN0IGV4cGVjdGVkRmllbGRIZWlnaHQgPSBmaWVsZEdhbWUuZ2FtZUdyaWQubGVuZ3RoO1xyXG5cclxuICAgICAgICAgICAgLy9leGVyY2lzZVxyXG4gICAgICAgICAgICBmaWVsZEdhbWUuc2V0RmllbGREaW1lbnNpb25zKCk7XHJcbiAgICAgICAgICAgIGNvbnN0IGZpZWxkV2lkdGhSZXN1bHQgPSBmaWVsZEdhbWUuZmllbGRXaWR0aDtcclxuICAgICAgICAgICAgY29uc3QgZmllbGRIZWlnaHRSZXN1bHQgPSBmaWVsZEdhbWUuZmllbGRIZWlnaHQ7XHJcbiAgICAgICAgICAgIFxyXG5cclxuICAgICAgICAgICAgLy92ZXJpZnlcclxuICAgICAgICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKGV4cGVjdGVkRmllbGRXaWR0aCwgZmllbGRXaWR0aFJlc3VsdCk7XHJcbiAgICAgICAgICAgIGFzc2VydC5zdHJpY3RFcXVhbChleHBlY3RlZEZpZWxkSGVpZ2h0LCBmaWVsZEhlaWdodFJlc3VsdCk7XHJcbiAgICAgICAgfSlcclxuICAgIH0pXHJcblxyXG4gICAgZGVzY3JpYmUoJy5zZXRIb2xlcycsICgpID0+IHtcclxuXHJcbiAgICAgICAgbGV0IGZpZWxkR2FtZTtcclxuICAgICAgICBiZWZvcmVFYWNoKCgpID0+IHtcclxuICAgICAgICAgICAgZmllbGRHYW1lID0gbmV3IEZpZWxkKCk7XHJcbiAgICAgICAgfSlcclxuICAgICAgICBcclxuICAgICAgICBpdCgndGhyb3dzIGFuIGVycm9yIGlmIHRoZSBmaWVsZCBpbnN0YW5jZVxcJ3MgZ2FtZUdyaWQgcHJvcGVydHkgaXMgdW5kZWZpbmVkJywgKCkgPT4ge1xyXG4gICAgICAgICAgICAvL3NldHVwXHJcbiAgICAgICAgICAgIGZpZWxkR2FtZS5nYW1lR3JpZCA9IHVuZGVmaW5lZDtcclxuXHJcbiAgICAgICAgICAgIC8vZXhlcmNpc2VcclxuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gKCkgPT4gZmllbGRHYW1lLnNldEhvbGVzKCk7XHJcblxyXG4gICAgICAgICAgICAvL3ZlcmlmeVxyXG4gICAgICAgICAgICBhc3NlcnQudGhyb3dzKHJlc3VsdCwgL0dhbWUgR3JpZCBtdXN0IGFscmVhZHkgYmUgcHJvdmlkZWQvKTtcclxuICAgICAgICB9KVxyXG5cclxuICAgICAgICBpdCgnY29ycmVjdGx5IHNldHMgdGhlIGZpZWxkXFwncyBob2xlIHBvc2l0aW9ucyB3aGVuIGNhbGxlZCBhbmQgYSBjdXN0b20gZ2FtZSBmaWVsZCBoYXMgYmVlbiBwcm92aWRlZCcsICgpID0+IHtcclxuICAgICAgICAgICAgLy9zZXR1cFxyXG4gICAgICAgICAgICBmaWVsZEdhbWUuZ2FtZUdyaWQgPSBbXHJcbiAgICAgICAgICAgICAgICBbJyonLCAn4paRJywgJ08nXSxcclxuICAgICAgICAgICAgICAgIFsn4paRJywgJ08nLCAnTyddLFxyXG4gICAgICAgICAgICAgICAgWyfilpEnLCAnXicsICdPJ11cclxuICAgICAgICAgICAgXTtcclxuICAgICAgICAgICAgY29uc3QgZXhwZWN0ZWRIb2xlUG9zaXRpb25zID0gW1swLCAyXSwgWzEsIDFdLCBbMSwgMl0sIFsyLCAyXV07XHJcblxyXG4gICAgICAgICAgICAvL2V4ZXJjaXNlXHJcbiAgICAgICAgICAgIGZpZWxkR2FtZS5zZXRIb2xlcygpO1xyXG4gICAgICAgICAgICBjb25zdCByZXN1bHRIb2xlUG9zaXRpb25zID0gZmllbGRHYW1lLmhvbGVzO1xyXG4gICAgICAgICAgICBcclxuXHJcbiAgICAgICAgICAgIC8vdmVyaWZ5XHJcbiAgICAgICAgICAgIGFzc2VydC5kZWVwRXF1YWwoZXhwZWN0ZWRIb2xlUG9zaXRpb25zLCByZXN1bHRIb2xlUG9zaXRpb25zKTtcclxuICAgICAgICB9KVxyXG4gICAgfSlcclxuXHJcbiAgICBkZXNjcmliZSgncG9wdWxhdGVSYW5kb21Ib2xlcycsICgpID0+IHtcclxuXHJcbiAgICAgICAgbGV0IGZpZWxkR2FtZSwgZmllbGQsIHBlcmNlbnRhZ2VIb2xlcztcclxuICAgICAgICBiZWZvcmVFYWNoKCgpID0+IHtcclxuICAgICAgICAgICAgZmllbGRHYW1lID0gbmV3IEZpZWxkKCk7XHJcbiAgICAgICAgICAgIGZpZWxkID0gW1xyXG4gICAgICAgICAgICAgICAgWycqJywgJ+KWkScsICfilpEnXSxcclxuICAgICAgICAgICAgICAgIFsn4paRJywgJ+KWkScsICfilpEnXSxcclxuICAgICAgICAgICAgICAgIFsn4paRJywgJ+KWkScsICfilpEnXSxcclxuICAgICAgICAgICAgICAgIFsn4paRJywgJ+KWkScsICfilpEnXSxcclxuICAgICAgICAgICAgICAgIFsn4paRJywgJ+KWkScsICfilpEnXSxcclxuICAgICAgICAgICAgICAgIFsn4paRJywgJ14nLCAn4paRJ11cclxuICAgICAgICAgICAgXTtcclxuICAgICAgICAgICAgZmllbGRHYW1lLmZpZWxkSGVpZ2h0ID0gZmllbGQubGVuZ3RoO1xyXG4gICAgICAgICAgICBmaWVsZEdhbWUuZmllbGRXaWR0aCA9IGZpZWxkWzBdLmxlbmd0aDtcclxuICAgICAgICAgICAgcGVyY2VudGFnZUhvbGVzID0gMjA7XHJcblxyXG4gICAgICAgICAgICBcclxuICAgICAgICB9KVxyXG4gICAgICAgIFxyXG4gICAgICAgIGl0KCdhY2N1cmF0ZWx5IHVwZGF0ZXMgdGhlIGluc3RhbmNlXFwncyBob2xlcyBwcm9wZXJ0eSB3aXRoIFtyb3csIGNvbHVtbl0gcG9zaXRpb25zIGFzIGl0IGRldGVybWluZXMgc3BvdHMgdG8gYmUgaG9sZXMnLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIC8vc2V0dXBcclxuICAgICAgICAgICAgcGVyY2VudGFnZUhvbGVzID0gMjA7XHJcbiAgICAgICAgICAgIGZpZWxkR2FtZS5wb3B1bGF0ZVJhbmRvbUhvbGVzKGZpZWxkLCBwZXJjZW50YWdlSG9sZXMpO1xyXG4gICAgICAgICAgICBjb25zdCByZXN1bHRIb2xlUG9zaXRpb25zID0gZmllbGRHYW1lLmhvbGVzO1xyXG4gICAgICAgICAgICBsZXQgdGVzdFBhc3MgPSB0cnVlO1xyXG5cclxuICAgICAgICAgICAgLy9leGVyY2lzZVxyXG4gICAgICAgICAgICBmb3IgKGxldCByb3cgPSAwOyByb3cgPCBmaWVsZC5sZW5ndGg7IHJvdysrKSB7XHJcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBjb2x1bW4gPSAwOyBjb2x1bW4gPCBmaWVsZFtyb3ddLmxlbmd0aDsgY29sdW1uKyspIHtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgc3RyaW5naWZpZWRQb3NpdGlvbiA9IEpTT04uc3RyaW5naWZ5KFtyb3csIGNvbHVtbl0pO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChmaWVsZFtyb3ddW2NvbHVtbl0gPT09IGhvbGVDaGFyYWN0ZXIgJiYgIXJlc3VsdEhvbGVQb3NpdGlvbnMuZmluZCgoZWxlbWVudCkgPT4gSlNPTi5zdHJpbmdpZnkoZWxlbWVudCkgPT09IHN0cmluZ2lmaWVkUG9zaXRpb24pKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRlc3RQYXNzID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoZmllbGRbcm93XVtjb2x1bW5dICE9PSBob2xlQ2hhcmFjdGVyICYmIHJlc3VsdEhvbGVQb3NpdGlvbnMuZmluZCgoZWxlbWVudCkgPT4gSlNPTi5zdHJpbmdpZnkoZWxlbWVudCkgPT09IHN0cmluZ2lmaWVkUG9zaXRpb24pKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRlc3RQYXNzID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgLy92ZXJpZnlcclxuICAgICAgICAgICAgYXNzZXJ0Lm9rKHRlc3RQYXNzKTtcclxuICAgICAgICB9KVxyXG5cclxuICAgICAgICBpdCgnc2V0cyBhbiBhbW91bnQgb2YgaG9sZXMgZXF1YWwgdG8gdGhlIGZsb29yZWQgcGVyY2VudGFnZSBvZiBob2xlcyBhbGxvd2VkIGJ5IHRoZSBwYXNzZWQgcGVyY2VudGFnZUhvbGVzIHBhcmFtZXRlcicsICgpID0+IHtcclxuICAgICAgICAgICAgLy9zZXR1cFxyXG4gICAgICAgICAgICBwZXJjZW50YWdlSG9sZXMgPSA2MDtcclxuICAgICAgICAgICAgZmllbGRHYW1lLnBvcHVsYXRlUmFuZG9tSG9sZXMoZmllbGQsIHBlcmNlbnRhZ2VIb2xlcyk7XHJcbiAgICAgICAgICAgIGxldCByZXN1bHROdW1iZXJIb2xlcyA9IDA7XHJcbiAgICAgICAgICAgIGNvbnN0IGV4cGVjdGVkTnVtYmVySG9sZXMgPSBNYXRoLmZsb29yKCgoZmllbGRHYW1lLmZpZWxkSGVpZ2h0ICogZmllbGRHYW1lLmZpZWxkV2lkdGgpIC0gMikgKiAocGVyY2VudGFnZUhvbGVzIC8gMTAwKSk7IC8vOVxyXG5cclxuICAgICAgICAgICAgLy9leGVyY2lzZVxyXG4gICAgICAgICAgICBmb3IgKGxldCByb3cgPSAwOyByb3cgPCBmaWVsZC5sZW5ndGg7IHJvdysrKSB7XHJcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBjb2x1bW4gPSAwOyBjb2x1bW4gPCBmaWVsZFtyb3ddLmxlbmd0aDsgY29sdW1uKyspIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoZmllbGRbcm93XVtjb2x1bW5dID09PSBob2xlQ2hhcmFjdGVyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdE51bWJlckhvbGVzKys7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAvL3ZlcmlmeVxyXG4gICAgICAgICAgICBhc3NlcnQuZGVlcEVxdWFsKHJlc3VsdE51bWJlckhvbGVzLCBleHBlY3RlZE51bWJlckhvbGVzKTtcclxuICAgICAgICB9KVxyXG4gICAgfSlcclxuICAgIFxyXG4gICAgZGVzY3JpYmUoJy5nZW5lcmF0ZUZpZWxkJywgKCkgPT4ge1xyXG5cclxuICAgICAgICBsZXQgZmllbGRHYW1lLCBmaWVsZEhlaWdodCwgZmllbGRXaWR0aCwgcGVyY2VudGFnZUhvbGVzLCBwbGF5ZXJSYW5kb207XHJcbiAgICAgICAgYmVmb3JlRWFjaCgoKSA9PiB7XHJcbiAgICAgICAgICAgIGZpZWxkR2FtZSA9IG5ldyBGaWVsZCgpO1xyXG4gICAgICAgICAgICAvL2dpdmUgbWV0aG9kIGFyZ3VtZW50cyBkZWZhdWx0IHZhbHVlcy4gQ2FuIHJlYXNzaWduIGFzIG5lY2Vzc2FyeVxyXG4gICAgICAgICAgICBmaWVsZEhlaWdodCA9IDEwO1xyXG4gICAgICAgICAgICBmaWVsZFdpZHRoID0gMTA7XHJcbiAgICAgICAgICAgIHBlcmNlbnRhZ2VIb2xlcyA9IDIwO1xyXG4gICAgICAgICAgICBwbGF5ZXJSYW5kb20gPSB0cnVlO1xyXG4gICAgICAgICAgICBoYXRSYW5kb20gPSB0cnVlO1xyXG4gICAgICAgIH0pXHJcblxyXG4gICAgICAgIGl0KCdhc3NpZ25zIHRoZSBmaWVsZFdpZHRoIGFuZCBmaWVsZEhlaWdodCBhcmd1bWVudHMgdG8gYmUgdGhlIGZpZWxkSGVpZ2h0IGFuZCBmaWVsZFdpZHRoIG9mIHRoZSBGaWVsZCBpbnN0YW5jZScsICgpID0+IHtcclxuICAgICAgICAgICAgLy9zZXR1cFxyXG4gICAgICAgICAgICBmaWVsZEhlaWdodCA9IDEwO1xyXG4gICAgICAgICAgICBmaWVsZFdpZHRoID0gMjA7XHJcbiAgICAgICAgICAgIGNvbnN0IGV4cGVjdGVkSGVpZ2h0ID0gZmllbGRIZWlnaHQ7XHJcbiAgICAgICAgICAgIGNvbnN0IGV4cGVjdGVkV2lkdGggPSBmaWVsZFdpZHRoO1xyXG4gICAgICAgICAgICAvL2V4ZXJjaXNlXHJcbiAgICAgICAgICAgIGZpZWxkR2FtZS5nZW5lcmF0ZUZpZWxkKGZpZWxkSGVpZ2h0LCBmaWVsZFdpZHRoLCBwZXJjZW50YWdlSG9sZXMsIHBsYXllclJhbmRvbSwgaGF0UmFuZG9tKTtcclxuICAgICAgICAgICAgY29uc3QgaGVpZ2h0UmVzdWx0ID0gZmllbGRHYW1lLmZpZWxkSGVpZ2h0O1xyXG4gICAgICAgICAgICBjb25zdCB3aWR0aFJlc3VsdCA9IGZpZWxkR2FtZS5maWVsZFdpZHRoO1xyXG4gICAgICAgICAgICAvL3ZlcmlmeVxyXG4gICAgICAgICAgICBhc3NlcnQuc3RyaWN0RXF1YWwoaGVpZ2h0UmVzdWx0LCBleHBlY3RlZEhlaWdodCk7XHJcbiAgICAgICAgICAgIGFzc2VydC5zdHJpY3RFcXVhbCh3aWR0aFJlc3VsdCwgZXhwZWN0ZWRXaWR0aCk7XHJcbiAgICAgICAgfSlcclxuXHJcbiAgICAgICAgaXQoJ3NldHMgdGhlIHBsYXllciBpbiBhIHJhbmRvbSBzdGFydGluZyBwb3NpdGlvbiBpZiBcInBsYXllclJhbmRvbVwiIGlzIHNldCB0byB0cnVlIGFuZCBzZXRzIHBhdGggY2hhcmFjdGVyIGluIHRoYXQgc3RhcnRpbmcgcG9zaXRpb24nLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIC8vc2V0dXBcclxuICAgICAgICAgICAgcGxheWVyUmFuZG9tID0gdHJ1ZTtcclxuICAgICAgICAgICAgY29uc3QgZGVmYXVsdFBsYXllclBvc2l0aW9uID0gMDtcclxuICAgICAgICAgICAgbGV0IHBvdGVudGlhbEZhaWx1cmVzID0gMDtcclxuICAgICAgICAgICAgLy9leGVyY2lzZVxyXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDM7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgLy9pZiByZXN1bHRpbmcgcG9zaXRpb24gaXMgdGhlIGRlZmF1bHQgcG9zaXRpb24gMyB0aW1lcywgY29uY2x1ZGUgcmFuZG9taXphdGlvbiBvZiBwbGF5ZXIgcG9zaXRpb24gaXMgZmFpbGluZ1xyXG4gICAgICAgICAgICAgICAgZmllbGRHYW1lLmdhbWVHcmlkID0gZmllbGRHYW1lLmdlbmVyYXRlRmllbGQoZmllbGRIZWlnaHQsIGZpZWxkV2lkdGgsIHBlcmNlbnRhZ2VIb2xlcywgcGxheWVyUmFuZG9tLCBoYXRSYW5kb20pO1xyXG4gICAgICAgICAgICAgICAgbGV0IHBsYXllclJvd1Bvc2l0aW9uUmVzdWx0ID0gZmllbGRHYW1lLnBsYXllclJvd1Bvc2l0aW9uO1xyXG4gICAgICAgICAgICAgICAgbGV0IHBsYXllckNvbHVtblBvc2l0aW9uUmVzdWx0ID0gZmllbGRHYW1lLnBsYXllckNvbHVtblBvc2l0aW9uO1xyXG5cclxuICAgICAgICAgICAgICAgIGlmIChwbGF5ZXJSb3dQb3NpdGlvblJlc3VsdCA9PT0gZGVmYXVsdFBsYXllclBvc2l0aW9uICYmIHBsYXllckNvbHVtblBvc2l0aW9uUmVzdWx0ID09PSBkZWZhdWx0UGxheWVyUG9zaXRpb24pIHtcclxuICAgICAgICAgICAgICAgICAgICBwb3RlbnRpYWxGYWlsdXJlcysrO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLy92ZXJpZnlcclxuICAgICAgICAgICAgYXNzZXJ0Lm9rKHBvdGVudGlhbEZhaWx1cmVzIDw9IDMpO1xyXG4gICAgICAgICAgICBhc3NlcnQuc3RyaWN0RXF1YWwoZmllbGRHYW1lLmdhbWVHcmlkW2ZpZWxkR2FtZS5wbGF5ZXJSb3dQb3NpdGlvbl1bZmllbGRHYW1lLnBsYXllckNvbHVtblBvc2l0aW9uXSwgcGxheWVyQ2hhcmFjdGVyKTtcclxuICAgICAgICB9KVxyXG5cclxuICAgICAgICBpdCgnc2V0cyB0aGUgcGxheWVyIGluIHRoZSBkZWZhdWx0IHN0YXJ0aW5nIHBvc2l0aW9uICh0b3AgbGVmdCkgaWYgXCJwbGF5ZXJSYW5kb21cIiBpcyBzZXQgdG8gZmFsc2UnLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIC8vc2V0dXBcclxuICAgICAgICAgICAgcGxheWVyUmFuZG9tID0gZmFsc2U7XHJcbiAgICAgICAgICAgIGNvbnN0IGRlZmF1bHRQbGF5ZXJQb3NpdGlvbiA9IDA7XHJcbiAgICAgICAgICAgIC8vZXhlcmNpc2VcclxuICAgICAgICAgICAgZmllbGRHYW1lLmdhbWVHcmlkID0gZmllbGRHYW1lLmdlbmVyYXRlRmllbGQoZmllbGRIZWlnaHQsIGZpZWxkV2lkdGgsIHBlcmNlbnRhZ2VIb2xlcywgcGxheWVyUmFuZG9tLCBoYXRSYW5kb20pO1xyXG5cclxuICAgICAgICAgICAgLy92ZXJpZnlcclxuICAgICAgICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKGZpZWxkR2FtZS5nYW1lR3JpZFtkZWZhdWx0UGxheWVyUG9zaXRpb25dW2RlZmF1bHRQbGF5ZXJQb3NpdGlvbl0sIHBsYXllckNoYXJhY3Rlcik7XHJcbiAgICAgICAgfSlcclxuXHJcbiAgICAgICAgaXQoJ3NldHMgdGhlIGhhdCBpbiBhIHJhbmRvbSBwb3NpdGlvbiBpZiBcImhhdFJhbmRvbVwiIGlzIHNldCB0byB0cnVlIGFuZCBzZXRzIGhhdCBjaGFyYWN0ZXIgaW4gdGhhdCBwb3NpdGlvbicsICgpID0+IHtcclxuICAgICAgICAgICAgLy9zZXR1cFxyXG4gICAgICAgICAgICBoYXRSYW5kb20gPSB0cnVlO1xyXG4gICAgICAgICAgICBjb25zdCBkZWZhdWx0SGF0Um93UG9zaXRpb24gPSBmaWVsZEhlaWdodCAtIDE7XHJcbiAgICAgICAgICAgIGNvbnN0IGRlZmF1bHRIYXRDb2x1bW5Qb3NpdGlvbiA9IGZpZWxkV2lkdGggLSAyO1xyXG4gICAgICAgICAgICBsZXQgcG90ZW50aWFsRmFpbHVyZXMgPSAwO1xyXG5cclxuICAgICAgICAgICAgLy9leGVyY2lzZVxyXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDM7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgLy9pZiByZXN1bHRpbmcgcG9zaXRpb24gaXMgdGhlIGRlZmF1bHQgcG9zaXRpb24gMyB0aW1lcywgY29uY2x1ZGUgcmFuZG9taXphdGlvbiBvZiBoYXQgcG9zaXRpb24gaXMgZmFpbGluZ1xyXG4gICAgICAgICAgICAgICAgZmllbGRHYW1lLmdhbWVHcmlkID0gZmllbGRHYW1lLmdlbmVyYXRlRmllbGQoZmllbGRIZWlnaHQsIGZpZWxkV2lkdGgsIHBlcmNlbnRhZ2VIb2xlcywgcGxheWVyUmFuZG9tLCBoYXRSYW5kb20pO1xyXG5cclxuICAgICAgICAgICAgICAgIGlmIChmaWVsZEdhbWUuaGF0Um93UG9zaXRpb24gPT09IGRlZmF1bHRIYXRSb3dQb3NpdGlvbiAmJiBmaWVsZEdhbWUuaGF0Q29sdW1uUG9zaXRpb24gPT09IGRlZmF1bHRIYXRDb2x1bW5Qb3NpdGlvbikge1xyXG4gICAgICAgICAgICAgICAgICAgIHBvdGVudGlhbEZhaWx1cmVzKys7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAvL3ZlcmlmeVxyXG4gICAgICAgICAgICBhc3NlcnQub2socG90ZW50aWFsRmFpbHVyZXMgPD0gMyk7XHJcbiAgICAgICAgICAgIGFzc2VydC5zdHJpY3RFcXVhbChmaWVsZEdhbWUuZ2FtZUdyaWRbZmllbGRHYW1lLmhhdFJvd1Bvc2l0aW9uXVtmaWVsZEdhbWUuaGF0Q29sdW1uUG9zaXRpb25dLCBoYXRDaGFyYWN0ZXIpO1xyXG4gICAgICAgIH0pXHJcblxyXG4gICAgICAgIGl0KCduZXZlciBzZXRzIHRoZSBoYXQgYW5kIHRoZSBwbGF5ZXIgaW4gdGhlIHNhbWUgcG9zaXRpb24gd2hlbiBcImhhdFJhbmRvbVwiIGFuZCBcInBsYXllclJhbmRvbVwiIGFyZSBzZXQgdG8gdHJ1ZScsICgpID0+IHtcclxuICAgICAgICAgICAgLy9zZXR1cFxyXG4gICAgICAgICAgICBoYXRSYW5kb20gPSB0cnVlO1xyXG4gICAgICAgICAgICBwbGF5ZXJSYW5kb20gPSB0cnVlO1xyXG4gICAgICAgICAgICBmaWVsZEhlaWdodCA9IDI7XHJcbiAgICAgICAgICAgIGZpZWxkV2lkdGggPSAxO1xyXG4gICAgICAgICAgICBsZXQgZmFpbHVyZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICAvL2V4ZXJjaXNlXHJcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMTA7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgZmllbGRHYW1lLmdlbmVyYXRlRmllbGQoZmllbGRIZWlnaHQsIGZpZWxkV2lkdGgsIHBlcmNlbnRhZ2VIb2xlcywgcGxheWVyUmFuZG9tLCBoYXRSYW5kb20pO1xyXG4gICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgaWYgKGZpZWxkR2FtZS5oYXRSb3dQb3NpdGlvbiA9PT0gZmllbGRHYW1lLnBsYXllclJvd1Bvc2l0aW9uICYmIGZpZWxkR2FtZS5oYXRDb2x1bW5Qb3NpdGlvbiA9PT0gZmllbGRHYW1lLnBsYXllckNvbHVtblBvc2l0aW9uKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZmFpbHVyZSA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC8vdmVyaWZ5XHJcbiAgICAgICAgICAgIGFzc2VydC5zdHJpY3RFcXVhbChmYWlsdXJlLCBmYWxzZSk7XHJcbiAgICAgICAgfSlcclxuXHJcbiAgICAgICAgaXQoJ25ldmVyIHNldHMgdGhlIGhhdCBhbmQgdGhlIHBsYXllciBpbiB0aGUgc2FtZSBwb3NpdGlvbiB3aGVuIFwiaGF0UmFuZG9tXCIgaXMgc2V0IHRvIHRydWUgYW5kIFwicGxheWVyUmFuZG9tXCIgaXMgc2V0IHRvIGZhbHNlJywgKCkgPT4ge1xyXG4gICAgICAgICAgICAvL3NldHVwXHJcbiAgICAgICAgICAgIGhhdFJhbmRvbSA9IHRydWU7XHJcbiAgICAgICAgICAgIHBsYXllclJhbmRvbSA9IGZhbHNlO1xyXG4gICAgICAgICAgICBmaWVsZEhlaWdodCA9IDI7XHJcbiAgICAgICAgICAgIGZpZWxkV2lkdGggPSAxO1xyXG4gICAgICAgICAgICBsZXQgZmFpbHVyZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICBsZXQgaGF0UG9zaXRpb24gPSBbXTtcclxuICAgICAgICAgICAgLy9leGVyY2lzZVxyXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDEwOyBpKyspIHtcclxuICAgICAgICAgICAgICAgIC8vaWYgcmVzdWx0aW5nIHBvc2l0aW9uIGlzIHRoZSBkZWZhdWx0IHBvc2l0aW9uIDMgdGltZXMsIGNvbmNsdWRlIHJhbmRvbWl6YXRpb24gb2YgaGF0IHBvc2l0aW9uIGlzIGZhaWxpbmdcclxuICAgICAgICAgICAgICAgIGZpZWxkR2FtZS5nYW1lR3JpZCA9IGZpZWxkR2FtZS5nZW5lcmF0ZUZpZWxkKGZpZWxkSGVpZ2h0LCBmaWVsZFdpZHRoLCBwZXJjZW50YWdlSG9sZXMsIHBsYXllclJhbmRvbSwgaGF0UmFuZG9tKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICBpZiAoZmllbGRHYW1lLmhhdFJvd1Bvc2l0aW9uID09PSBmaWVsZEdhbWUucGxheWVyUm93UG9zaXRpb24gJiYgZmllbGRHYW1lLmhhdENvbHVtblBvc2l0aW9uID09PSBmaWVsZEdhbWUucGxheWVyQ29sdW1uUG9zaXRpb24pIHtcclxuICAgICAgICAgICAgICAgICAgICBmYWlsdXJlID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC8vdmVyaWZ5XHJcbiAgICAgICAgICAgIGFzc2VydC5zdHJpY3RFcXVhbChmYWlsdXJlLCBmYWxzZSk7XHJcbiAgICAgICAgfSlcclxuXHJcbiAgICAgICAgaXQoJ3NldHMgdGhlIGhhdCBpbiB0aGUgZGVmYXVsdCBwb3NpdGlvbiAoc2Vjb25kIHRvIGxhc3Qgb2YgYm90dG9tIHJvdykgaWYgXCJoYXRSYW5kb21cIiBpcyBzZXQgdG8gZmFsc2UnLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIC8vc2V0dXBcclxuICAgICAgICAgICAgaGF0UmFuZG9tID0gZmFsc2U7XHJcbiAgICAgICAgICAgIGNvbnN0IGRlZmF1bHRIYXRSb3dQb3NpdGlvbiA9IGZpZWxkSGVpZ2h0IC0gMTtcclxuICAgICAgICAgICAgY29uc3QgZGVmYXVsdEhhdENvbHVtblBvc2l0aW9uID0gZmllbGRXaWR0aCAtIDI7XHJcbiAgICAgICAgICAgIC8vZXhlcmNpc2VcclxuICAgICAgICAgICAgZmllbGRHYW1lLmdhbWVHcmlkID0gZmllbGRHYW1lLmdlbmVyYXRlRmllbGQoZmllbGRIZWlnaHQsIGZpZWxkV2lkdGgsIHBlcmNlbnRhZ2VIb2xlcywgcGxheWVyUmFuZG9tLCBoYXRSYW5kb20pO1xyXG5cclxuICAgICAgICAgICAgLy92ZXJpZnlcclxuICAgICAgICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKGZpZWxkR2FtZS5nYW1lR3JpZFtkZWZhdWx0SGF0Um93UG9zaXRpb25dW2RlZmF1bHRIYXRDb2x1bW5Qb3NpdGlvbl0sIGhhdENoYXJhY3Rlcik7XHJcbiAgICAgICAgICAgIGFzc2VydC5zdHJpY3RFcXVhbChmaWVsZEdhbWUuaGF0Um93UG9zaXRpb24sIGRlZmF1bHRIYXRSb3dQb3NpdGlvbik7XHJcbiAgICAgICAgICAgIGFzc2VydC5zdHJpY3RFcXVhbChmaWVsZEdhbWUuaGF0Q29sdW1uUG9zaXRpb24sIGRlZmF1bHRIYXRDb2x1bW5Qb3NpdGlvbik7XHJcbiAgICAgICAgfSlcclxuXHJcbiAgICAgICAgXHJcbiAgICB9KVxyXG5cclxuICAgIGRlc2NyaWJlKCdoaWRlSG9sZXMnLCAoKSA9PiB7XHJcbiAgICAgICAgbGV0IGZpZWxkR2FtZSwgZmllbGRIZWlnaHQsIGZpZWxkV2lkdGgsIHBlcmNlbnRhZ2VIb2xlcywgcGxheWVyUmFuZG9tLCBoYXRSYW5kb207XHJcbiAgICAgICAgYmVmb3JlRWFjaCgoKSA9PiB7XHJcbiAgICAgICAgICAgIGZpZWxkR2FtZSA9IG5ldyBGaWVsZCgpO1xyXG5cclxuICAgICAgICAgICAgZmllbGRIZWlnaHQgPSAxMDtcclxuICAgICAgICAgICAgZmllbGRXaWR0aCA9IDEwO1xyXG4gICAgICAgICAgICBwZXJjZW50YWdlSG9sZXMgPSA1MDtcclxuICAgICAgICAgICAgcGxheWVyUmFuZG9tID0gdHJ1ZTtcclxuICAgICAgICAgICAgaGF0UmFuZG9tID0gdHJ1ZTtcclxuICAgICAgICB9KVxyXG5cclxuICAgICAgICBpdCgnaGlkZXMgYWxsIGhvbGVzIGFuZCBvbmx5IGhvbGVzIGJ5IHJlcGxhY2luZyB0aGVtIHdpdGggZmllbGQgY2hhcmFjdGVycycsICgpID0+IHtcclxuICAgICAgICAgICAgLy9zZXR1cFxyXG4gICAgICAgICAgICBmaWVsZEdhbWUuZ2FtZUdyaWQgPSBmaWVsZEdhbWUuZ2VuZXJhdGVGaWVsZChmaWVsZEhlaWdodCwgZmllbGRXaWR0aCwgcGVyY2VudGFnZUhvbGVzLCBwbGF5ZXJSYW5kb20sIGhhdFJhbmRvbSk7XHJcbiAgICAgICAgICAgIGxldCBleHBlY3RlZFBsYXllckNvdW50ID0gMTtcclxuICAgICAgICAgICAgbGV0IGV4cGVjdGVkSGF0Q291bnQgPSAxO1xyXG4gICAgICAgICAgICBsZXQgZXhwZWN0ZWRIb2xlQ291bnQgPSAwO1xyXG5cclxuICAgICAgICAgICAgLy9leGVyY2lzZVxyXG4gICAgICAgICAgICBmaWVsZEdhbWUuaGlkZUhvbGVzKCk7XHJcbiAgICAgICAgICAgIGxldCByZXN1bHRQbGF5ZXJDb3VudCA9IDA7XHJcbiAgICAgICAgICAgIGxldCByZXN1bHRIYXRDb3VudCA9IDA7XHJcbiAgICAgICAgICAgIGxldCByZXN1bHRIb2xlQ291bnQgPSAwO1xyXG4gICAgICAgICAgICBmb3IgKGxldCByb3cgb2YgZmllbGRHYW1lLmdhbWVHcmlkKSB7XHJcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBjb2x1bW4gb2Ygcm93KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNvbHVtbiA9PT0gcGxheWVyQ2hhcmFjdGVyKSByZXN1bHRQbGF5ZXJDb3VudCsrO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChjb2x1bW4gPT09IGhhdENoYXJhY3RlcikgcmVzdWx0SGF0Q291bnQrKztcclxuICAgICAgICAgICAgICAgICAgICBpZiAoY29sdW1uID09PSBob2xlQ2hhcmFjdGVyKSByZXN1bHRIb2xlQ291bnQrKztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLy92ZXJpZnlcclxuICAgICAgICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKGV4cGVjdGVkUGxheWVyQ291bnQsIHJlc3VsdFBsYXllckNvdW50KTtcclxuICAgICAgICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKGV4cGVjdGVkSGF0Q291bnQsIHJlc3VsdEhhdENvdW50KTtcclxuICAgICAgICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKGV4cGVjdGVkSG9sZUNvdW50LCByZXN1bHRIb2xlQ291bnQpO1xyXG5cclxuICAgICAgICB9KVxyXG5cclxuXHJcblxyXG4gICAgICAgIGl0KCd0aHJvd3MgYW4gZXJyb3IgaWYgY2FsbGVkIGFuZCBubyBnYW1lR3JpZCBoYXMgYmVlbiBkZWZpbmVkJywgKCkgPT4ge1xyXG4gICAgICAgICAgICAvL3NldHVwXHJcbiAgICAgICAgICAgIGZpZWxkR2FtZS5nYW1lR3JpZCA9IHVuZGVmaW5lZDtcclxuXHJcbiAgICAgICAgICAgIC8vZXhlcmNpc2VcclxuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gKCkgPT4gZmllbGRHYW1lLmhpZGVIb2xlcygpO1xyXG5cclxuICAgICAgICAgICAgLy92ZXJpZnlcclxuICAgICAgICAgICAgYXNzZXJ0LnRocm93cyhyZXN1bHQsIC9HYW1lIEdyaWQgbXVzdCBhbHJlYWR5IGJlIHByb3ZpZGVkLyk7XHJcbiAgICAgICAgfSlcclxuICAgIH0pXHJcblxyXG4gICAgZGVzY3JpYmUoJ21vdmUnLCAoKSA9PiB7XHJcbiAgICAgICAgXHJcbiAgICAgICAgbGV0IGZpZWxkR2FtZTtcclxuICAgICAgICBiZWZvcmVFYWNoKCgpID0+IHtcclxuICAgICAgICAgICAgZmllbGRHYW1lID0gbmV3IEZpZWxkKCk7XHJcbiAgICAgICAgICAgIGZpZWxkR2FtZS5nYW1lR3JpZCA9IFtcclxuICAgICAgICAgICAgICAgIFsn4paRJywgJ+KWkScsICfilpEnXSxcclxuICAgICAgICAgICAgICAgIFsn4paRJywgJyEnLCAn4paRJ10sXHJcbiAgICAgICAgICAgICAgICBbJ+KWkScsICfilpEnLCAn4paRJ11cclxuICAgICAgICAgICAgXTtcclxuICAgICAgICAgICAgZmllbGRHYW1lLnNldFBsYXllclBvc2l0aW9uKCk7XHJcbiAgICAgICAgICAgIGZpZWxkR2FtZS5zZXRGaWVsZERpbWVuc2lvbnMoKTtcclxuICAgICAgICB9KVxyXG5cclxuICAgICAgICBpdCgnbW92ZXMgdGhlIHBsYXllciBjaGFyYWN0ZXIgbGVmdCBvbmUgcG9zaXRpb24gd2hlbiB0aGUgZGlyZWN0aW9uIHBhcmFtZXRlciBpcyBcImFcIiBhbmQgbGVhdmVzIGEgcGF0aCBjaGFyYWN0ZXIgaW4gdGhlIHByZXZpb3VzIHBvc2l0aW9uJywgKCkgPT4ge1xyXG4gICAgICAgICAgICAvL3NldHVwXHJcbiAgICAgICAgICAgIGNvbnN0IGV4cGVjdGVkUGxheWVyUG9zaXRpb24gPSBbMSwgMF07XHJcbiAgICAgICAgICAgIGNvbnN0IGV4cGVjdGVkUGF0aFBvc2l0aW9uID0gWzEsIDFdO1xyXG4gICAgICAgICAgICBcclxuXHJcbiAgICAgICAgICAgIC8vZXhlcmNpc2VcclxuICAgICAgICAgICAgZmllbGRHYW1lLm1vdmUoJ2EnKTtcclxuICAgICAgICAgICAgY29uc3QgcmVzdWx0UGxheWVyUG9zaXRpb24gPSBbZmllbGRHYW1lLnBsYXllclJvd1Bvc2l0aW9uLCBmaWVsZEdhbWUucGxheWVyQ29sdW1uUG9zaXRpb25dO1xyXG4gICAgICAgICAgICBjb25zdCByZXN1bHRQYXRoUG9zaXRpb24gPSBbXTtcclxuICAgICAgICAgICAgZm9yIChsZXQgcm93ID0gMDsgcm93IDwgZmllbGRHYW1lLmdhbWVHcmlkLmxlbmd0aDsgcm93KyspIHtcclxuICAgICAgICAgICAgICAgIGZvciAobGV0IGNvbHVtbiA9IDA7IGNvbHVtbiA8IGZpZWxkR2FtZS5nYW1lR3JpZFtyb3ddLmxlbmd0aDsgY29sdW1uKyspIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoZmllbGRHYW1lLmdhbWVHcmlkW3Jvd11bY29sdW1uXSA9PT0gcGF0aENoYXJhY3Rlcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBbcmVzdWx0UGF0aFBvc2l0aW9uWzBdLCByZXN1bHRQYXRoUG9zaXRpb25bMV1dID0gW3JvdywgY29sdW1uXTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC8vdmVyaWZ5XHJcbiAgICAgICAgICAgIGFzc2VydC5kZWVwRXF1YWwoZXhwZWN0ZWRQbGF5ZXJQb3NpdGlvbiwgcmVzdWx0UGxheWVyUG9zaXRpb24pO1xyXG4gICAgICAgICAgICBhc3NlcnQuZGVlcEVxdWFsKGV4cGVjdGVkUGF0aFBvc2l0aW9uLCByZXN1bHRQYXRoUG9zaXRpb24pO1xyXG4gICAgICAgIH0pXHJcblxyXG4gICAgICAgIGl0KCdtb3ZlcyB0aGUgcGxheWVyIGNoYXJhY3RlciByaWdodCBvbmUgcG9zaXRpb24gd2hlbiB0aGUgZGlyZWN0aW9uIHBhcmFtZXRlciBpcyBcImRcIiBhbmQgbGVhdmVzIGEgcGF0aCBjaGFyYWN0ZXIgaW4gdGhlIHByZXZpb3VzIHBvc2l0aW9uJywgKCkgPT4ge1xyXG4gICAgICAgICAgICAvL3NldHVwXHJcbiAgICAgICAgICAgIGNvbnN0IGV4cGVjdGVkUGxheWVyUG9zaXRpb24gPSBbMSwgMl07XHJcbiAgICAgICAgICAgIGNvbnN0IGV4cGVjdGVkUGF0aFBvc2l0aW9uID0gWzEsIDFdO1xyXG4gICAgICAgICAgICBcclxuXHJcbiAgICAgICAgICAgIC8vZXhlcmNpc2VcclxuICAgICAgICAgICAgZmllbGRHYW1lLm1vdmUoJ2QnKTtcclxuICAgICAgICAgICAgY29uc3QgcmVzdWx0UGxheWVyUG9zaXRpb24gPSBbZmllbGRHYW1lLnBsYXllclJvd1Bvc2l0aW9uLCBmaWVsZEdhbWUucGxheWVyQ29sdW1uUG9zaXRpb25dO1xyXG4gICAgICAgICAgICBjb25zdCByZXN1bHRQYXRoUG9zaXRpb24gPSBbXTtcclxuICAgICAgICAgICAgZm9yIChsZXQgcm93ID0gMDsgcm93IDwgZmllbGRHYW1lLmdhbWVHcmlkLmxlbmd0aDsgcm93KyspIHtcclxuICAgICAgICAgICAgICAgIGZvciAobGV0IGNvbHVtbiA9IDA7IGNvbHVtbiA8IGZpZWxkR2FtZS5nYW1lR3JpZFtyb3ddLmxlbmd0aDsgY29sdW1uKyspIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoZmllbGRHYW1lLmdhbWVHcmlkW3Jvd11bY29sdW1uXSA9PT0gcGF0aENoYXJhY3Rlcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBbcmVzdWx0UGF0aFBvc2l0aW9uWzBdLCByZXN1bHRQYXRoUG9zaXRpb25bMV1dID0gW3JvdywgY29sdW1uXTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC8vdmVyaWZ5XHJcbiAgICAgICAgICAgIGFzc2VydC5kZWVwRXF1YWwoZXhwZWN0ZWRQbGF5ZXJQb3NpdGlvbiwgcmVzdWx0UGxheWVyUG9zaXRpb24pO1xyXG4gICAgICAgICAgICBhc3NlcnQuZGVlcEVxdWFsKGV4cGVjdGVkUGF0aFBvc2l0aW9uLCByZXN1bHRQYXRoUG9zaXRpb24pO1xyXG4gICAgICAgIH0pXHJcblxyXG4gICAgICAgIGl0KCdtb3ZlcyB0aGUgcGxheWVyIGNoYXJhY3RlciB1cCBvbmUgcG9zaXRpb24gd2hlbiB0aGUgZGlyZWN0aW9uIHBhcmFtZXRlciBpcyBcIndcIiBhbmQgbGVhdmVzIGEgcGF0aCBjaGFyYWN0ZXIgaW4gdGhlIHByZXZpb3VzIHBvc2l0aW9uJywgKCkgPT4ge1xyXG4gICAgICAgICAgICAvL3NldHVwXHJcbiAgICAgICAgICAgIGNvbnN0IGV4cGVjdGVkUGxheWVyUG9zaXRpb24gPSBbMCwgMV07XHJcbiAgICAgICAgICAgIGNvbnN0IGV4cGVjdGVkUGF0aFBvc2l0aW9uID0gWzEsIDFdO1xyXG4gICAgICAgICAgICBcclxuXHJcbiAgICAgICAgICAgIC8vZXhlcmNpc2VcclxuICAgICAgICAgICAgZmllbGRHYW1lLm1vdmUoJ3cnKTtcclxuICAgICAgICAgICAgY29uc3QgcmVzdWx0UGxheWVyUG9zaXRpb24gPSBbZmllbGRHYW1lLnBsYXllclJvd1Bvc2l0aW9uLCBmaWVsZEdhbWUucGxheWVyQ29sdW1uUG9zaXRpb25dO1xyXG4gICAgICAgICAgICBjb25zdCByZXN1bHRQYXRoUG9zaXRpb24gPSBbXTtcclxuICAgICAgICAgICAgZm9yIChsZXQgcm93ID0gMDsgcm93IDwgZmllbGRHYW1lLmdhbWVHcmlkLmxlbmd0aDsgcm93KyspIHtcclxuICAgICAgICAgICAgICAgIGZvciAobGV0IGNvbHVtbiA9IDA7IGNvbHVtbiA8IGZpZWxkR2FtZS5nYW1lR3JpZFtyb3ddLmxlbmd0aDsgY29sdW1uKyspIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoZmllbGRHYW1lLmdhbWVHcmlkW3Jvd11bY29sdW1uXSA9PT0gcGF0aENoYXJhY3Rlcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBbcmVzdWx0UGF0aFBvc2l0aW9uWzBdLCByZXN1bHRQYXRoUG9zaXRpb25bMV1dID0gW3JvdywgY29sdW1uXTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC8vdmVyaWZ5XHJcbiAgICAgICAgICAgIGFzc2VydC5kZWVwRXF1YWwoZXhwZWN0ZWRQbGF5ZXJQb3NpdGlvbiwgcmVzdWx0UGxheWVyUG9zaXRpb24pO1xyXG4gICAgICAgICAgICBhc3NlcnQuZGVlcEVxdWFsKGV4cGVjdGVkUGF0aFBvc2l0aW9uLCByZXN1bHRQYXRoUG9zaXRpb24pO1xyXG4gICAgICAgIH0pXHJcblxyXG4gICAgICAgIGl0KCdtb3ZlcyB0aGUgcGxheWVyIGNoYXJhY3RlciBkb3duIG9uZSBwb3NpdGlvbiB3aGVuIHRoZSBkaXJlY3Rpb24gcGFyYW1ldGVyIGlzIFwic1wiIGFuZCBsZWF2ZXMgYSBwYXRoIGNoYXJhY3RlciBpbiB0aGUgcHJldmlvdXMgcG9zaXRpb24nLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIC8vc2V0dXBcclxuICAgICAgICAgICAgY29uc3QgZXhwZWN0ZWRQbGF5ZXJQb3NpdGlvbiA9IFsyLCAxXTtcclxuICAgICAgICAgICAgY29uc3QgZXhwZWN0ZWRQYXRoUG9zaXRpb24gPSBbMSwgMV07XHJcbiAgICAgICAgICAgIFxyXG5cclxuICAgICAgICAgICAgLy9leGVyY2lzZVxyXG4gICAgICAgICAgICBmaWVsZEdhbWUubW92ZSgncycpO1xyXG4gICAgICAgICAgICBjb25zdCByZXN1bHRQbGF5ZXJQb3NpdGlvbiA9IFtmaWVsZEdhbWUucGxheWVyUm93UG9zaXRpb24sIGZpZWxkR2FtZS5wbGF5ZXJDb2x1bW5Qb3NpdGlvbl07XHJcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdFBhdGhQb3NpdGlvbiA9IFtdO1xyXG4gICAgICAgICAgICBmb3IgKGxldCByb3cgPSAwOyByb3cgPCBmaWVsZEdhbWUuZ2FtZUdyaWQubGVuZ3RoOyByb3crKykge1xyXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgY29sdW1uID0gMDsgY29sdW1uIDwgZmllbGRHYW1lLmdhbWVHcmlkW3Jvd10ubGVuZ3RoOyBjb2x1bW4rKykge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChmaWVsZEdhbWUuZ2FtZUdyaWRbcm93XVtjb2x1bW5dID09PSBwYXRoQ2hhcmFjdGVyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFtyZXN1bHRQYXRoUG9zaXRpb25bMF0sIHJlc3VsdFBhdGhQb3NpdGlvblsxXV0gPSBbcm93LCBjb2x1bW5dO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLy92ZXJpZnlcclxuICAgICAgICAgICAgYXNzZXJ0LmRlZXBFcXVhbChleHBlY3RlZFBsYXllclBvc2l0aW9uLCByZXN1bHRQbGF5ZXJQb3NpdGlvbik7XHJcbiAgICAgICAgICAgIGFzc2VydC5kZWVwRXF1YWwoZXhwZWN0ZWRQYXRoUG9zaXRpb24sIHJlc3VsdFBhdGhQb3NpdGlvbik7XHJcbiAgICAgICAgfSlcclxuICAgICAgICBcclxuICAgICAgICBpdCgnaXQgZG9lcyBub3QgbW92ZSB0aGUgY2hhcmFjdGVyIGlmIHRoZSBkaXJlY3Rpb24gcGFyYW1ldGVyIGlzIG5vdCBhIHZhbGlkIFdBU0QgaW5wdXQnLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIC8vc2V0dXBcclxuICAgICAgICAgICAgY29uc3QgZXhwZWN0ZWRQbGF5ZXJQb3NpdGlvbiA9IFsxLCAxXTtcclxuICAgICAgICAgICAgY29uc3QgZXhwZWN0ZWRQYXRoQ291bnQgPSAwO1xyXG4gICAgICAgICAgICBcclxuXHJcbiAgICAgICAgICAgIC8vZXhlcmNpc2VcclxuICAgICAgICAgICAgZmllbGRHYW1lLm1vdmUoJ2ludmFsaWQgaW5wdXQnKTtcclxuICAgICAgICAgICAgY29uc3QgcmVzdWx0UGxheWVyUG9zaXRpb24gPSBbZmllbGRHYW1lLnBsYXllclJvd1Bvc2l0aW9uLCBmaWVsZEdhbWUucGxheWVyQ29sdW1uUG9zaXRpb25dO1xyXG4gICAgICAgICAgICBjb25zdCByZXN1bHRQYXRoQ291bnQgPSAwO1xyXG4gICAgICAgICAgICBmb3IgKGxldCByb3cgPSAwOyByb3cgPCBmaWVsZEdhbWUuZ2FtZUdyaWQubGVuZ3RoOyByb3crKykge1xyXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgY29sdW1uID0gMDsgY29sdW1uIDwgZmllbGRHYW1lLmdhbWVHcmlkW3Jvd10ubGVuZ3RoOyBjb2x1bW4rKykge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChmaWVsZEdhbWUuZ2FtZUdyaWRbcm93XVtjb2x1bW5dID09PSBwYXRoQ2hhcmFjdGVyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdFBhdGhDb3VudCA9IDE7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAvL3ZlcmlmeVxyXG4gICAgICAgICAgICBhc3NlcnQuZGVlcEVxdWFsKGV4cGVjdGVkUGxheWVyUG9zaXRpb24sIHJlc3VsdFBsYXllclBvc2l0aW9uKTtcclxuICAgICAgICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKGV4cGVjdGVkUGF0aENvdW50LCByZXN1bHRQYXRoQ291bnQpO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgXHJcblxyXG4gICAgICAgIGl0KCd0aHJvd3MgYW4gZXJyb3IgaWYgZ2FtZUdyaWQgaGFzIG5vdCBiZWVuIGRlZmluZWQgeWV0JywgKCkgPT4ge1xyXG4gICAgICAgICAgICAvL3NldHVwXHJcbiAgICAgICAgICAgIGZpZWxkR2FtZS5nYW1lR3JpZCA9IHVuZGVmaW5lZDtcclxuXHJcbiAgICAgICAgICAgIC8vZXhlcmNpc2VcclxuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gKCkgPT4gZmllbGRHYW1lLm1vdmUoKTtcclxuXHJcbiAgICAgICAgICAgIC8vdmVyaWZ5XHJcbiAgICAgICAgICAgIGFzc2VydC50aHJvd3MocmVzdWx0LCAvVGhpcyBtZXRob2QgY2Fubm90IGJlIHVzZWQgdW50aWwgYSBnYW1lIGdyaWQgaGFzIGJlZW4gcHJvdmlkZWQvKTtcclxuICAgICAgICB9KVxyXG4gICAgfSlcclxuXHJcbiAgICBkZXNjcmliZSgnbW92ZUxlZnQnLCAoKSA9PiB7XHJcblxyXG4gICAgICAgIGxldCBmaWVsZEdhbWU7XHJcbiAgICAgICAgYmVmb3JlRWFjaCgoKSA9PiB7XHJcbiAgICAgICAgICAgIGZpZWxkR2FtZSA9IG5ldyBGaWVsZCgpO1xyXG4gICAgICAgICAgICBmaWVsZEdhbWUuZ2FtZUdyaWQgPSBbXHJcbiAgICAgICAgICAgICAgICBbJ+KWkScsICfilpEnLCAn4paRJ10sXHJcbiAgICAgICAgICAgICAgICBbJ+KWkScsIHBsYXllckNoYXJhY3RlciwgJ+KWkSddLFxyXG4gICAgICAgICAgICAgICAgWyfilpEnLCAn4paRJywgJ+KWkSddXHJcbiAgICAgICAgICAgIF07XHJcbiAgICAgICAgICAgIGZpZWxkR2FtZS5zZXRQbGF5ZXJQb3NpdGlvbigpO1xyXG4gICAgICAgICAgICBmaWVsZEdhbWUuc2V0RmllbGREaW1lbnNpb25zKCk7XHJcbiAgICAgICAgfSlcclxuXHJcbiAgICAgICAgaXQoJ21vdmVzIHRoZSBwbGF5ZXIgZG93biBvbmUgcG9zaXRpb24gYW5kIGxlYXZlcyBhIHBhdGggY2hhcmFjdGVyIGluIHByZXZpb3VzIHBvc2l0aW9uJywgKCkgPT4ge1xyXG4gICAgICAgICAgICAvL3NldHVwXHJcbiAgICAgICAgICAgIGNvbnN0IGV4cGVjdGVkUGxheWVyUG9zaXRpb24gPSBbMSwgMF07XHJcbiAgICAgICAgICAgIGNvbnN0IGV4cGVjdGVkUGF0aFBvc2l0aW9uID0gWzEsIDFdO1xyXG4gICAgICAgICAgICBcclxuXHJcbiAgICAgICAgICAgIC8vZXhlcmNpc2VcclxuICAgICAgICAgICAgZmllbGRHYW1lLm1vdmVMZWZ0KCk7XHJcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdFBsYXllclBvc2l0aW9uID0gW2ZpZWxkR2FtZS5wbGF5ZXJSb3dQb3NpdGlvbiwgZmllbGRHYW1lLnBsYXllckNvbHVtblBvc2l0aW9uXTtcclxuICAgICAgICAgICAgY29uc3QgcmVzdWx0UGF0aFBvc2l0aW9uID0gW107XHJcbiAgICAgICAgICAgIGZvciAobGV0IHJvdyA9IDA7IHJvdyA8IGZpZWxkR2FtZS5nYW1lR3JpZC5sZW5ndGg7IHJvdysrKSB7XHJcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBjb2x1bW4gPSAwOyBjb2x1bW4gPCBmaWVsZEdhbWUuZ2FtZUdyaWRbcm93XS5sZW5ndGg7IGNvbHVtbisrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGZpZWxkR2FtZS5nYW1lR3JpZFtyb3ddW2NvbHVtbl0gPT09IHBhdGhDaGFyYWN0ZXIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgW3Jlc3VsdFBhdGhQb3NpdGlvblswXSwgcmVzdWx0UGF0aFBvc2l0aW9uWzFdXSA9IFtyb3csIGNvbHVtbl07XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAvL3ZlcmlmeVxyXG4gICAgICAgICAgICBhc3NlcnQuZGVlcEVxdWFsKGV4cGVjdGVkUGxheWVyUG9zaXRpb24sIHJlc3VsdFBsYXllclBvc2l0aW9uKTtcclxuICAgICAgICAgICAgYXNzZXJ0LmRlZXBFcXVhbChleHBlY3RlZFBhdGhQb3NpdGlvbiwgcmVzdWx0UGF0aFBvc2l0aW9uKTtcclxuICAgICAgICB9KVxyXG5cclxuICAgICAgICBpdCgnZW5kcyB0aGUgZ2FtZSBhbmQgZG9lcyBub3QgbW92ZSB0aGUgcGxheWVyXFwncyBwb3NpdGlvbiBsZWZ0IGlmIHRoZSBuZXcgcG9zaXRpb24gc2F0aXNmaWVzIGdhbWVcXCdzIGVuZCBjb25kaXRpb25zJywgKCkgPT4ge1xyXG4gICAgICAgICAgICAvL3NldHVwXHJcbiAgICAgICAgICAgIGZpZWxkR2FtZS5nYW1lR3JpZFsxXVswXSA9IGhvbGVDaGFyYWN0ZXI7XHJcbiAgICAgICAgICAgIGZpZWxkR2FtZS5zZXRIb2xlcygpO1xyXG4gICAgICAgICAgICBjb25zdCBleHBlY3RlZFBsYXllclBvc2l0aW9uID0gWzEsIDFdO1xyXG5cclxuICAgICAgICAgICAgLy9leGVyY2lzZVxyXG4gICAgICAgICAgICBmaWVsZEdhbWUubW92ZUxlZnQoKTtcclxuICAgICAgICAgICAgY29uc3QgcmVzdWx0UGxheWVyUG9zaXRpb24gPSBbZmllbGRHYW1lLnBsYXllclJvd1Bvc2l0aW9uLCBmaWVsZEdhbWUucGxheWVyQ29sdW1uUG9zaXRpb25dO1xyXG5cclxuICAgICAgICAgICAgLy92ZXJpZnlcclxuICAgICAgICAgICAgYXNzZXJ0LmRlZXBFcXVhbChleHBlY3RlZFBsYXllclBvc2l0aW9uLCByZXN1bHRQbGF5ZXJQb3NpdGlvbik7XHJcbiAgICAgICAgfSlcclxuXHJcbiAgICAgICAgaXQoJ3Rocm93cyBhbiBlcnJvciBpZiBnYW1lR3JpZCBoYXMgbm90IGJlZW4gZGVmaW5lZCB5ZXQnLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIC8vc2V0dXBcclxuICAgICAgICAgICAgZmllbGRHYW1lLmdhbWVHcmlkID0gdW5kZWZpbmVkO1xyXG5cclxuICAgICAgICAgICAgLy9leGVyY2lzZVxyXG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSAoKSA9PiBmaWVsZEdhbWUubW92ZUxlZnQoKTtcclxuXHJcbiAgICAgICAgICAgIC8vdmVyaWZ5XHJcbiAgICAgICAgICAgIGFzc2VydC50aHJvd3MocmVzdWx0LCAvVGhpcyBtZXRob2QgY2Fubm90IGJlIHVzZWQgdW50aWwgYSBnYW1lIGdyaWQgaGFzIGJlZW4gcHJvdmlkZWQvKTtcclxuICAgICAgICB9KVxyXG4gICAgfSlcclxuXHJcbiAgICBkZXNjcmliZSgnbW92ZVJpZ2h0JywgKCkgPT4ge1xyXG5cclxuICAgICAgICBsZXQgZmllbGRHYW1lO1xyXG4gICAgICAgIGJlZm9yZUVhY2goKCkgPT4ge1xyXG4gICAgICAgICAgICBmaWVsZEdhbWUgPSBuZXcgRmllbGQoKTtcclxuICAgICAgICAgICAgZmllbGRHYW1lLmdhbWVHcmlkID0gW1xyXG4gICAgICAgICAgICAgICAgWyfilpEnLCAn4paRJywgJ+KWkSddLFxyXG4gICAgICAgICAgICAgICAgWyfilpEnLCBwbGF5ZXJDaGFyYWN0ZXIsICfilpEnXSxcclxuICAgICAgICAgICAgICAgIFsn4paRJywgJ+KWkScsICfilpEnXVxyXG4gICAgICAgICAgICBdO1xyXG4gICAgICAgICAgICBmaWVsZEdhbWUuc2V0UGxheWVyUG9zaXRpb24oKTtcclxuICAgICAgICAgICAgZmllbGRHYW1lLnNldEZpZWxkRGltZW5zaW9ucygpO1xyXG4gICAgICAgIH0pXHJcblxyXG4gICAgICAgIGl0KCdtb3ZlcyB0aGUgcGxheWVyIHJpZ2h0IG9uZSBwb3NpdGlvbiBhbmQgbGVhdmVzIGEgcGF0aCBjaGFyYWN0ZXIgaW4gcHJldmlvdXMgcG9zaXRpb24nLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIC8vc2V0dXBcclxuICAgICAgICAgICAgY29uc3QgZXhwZWN0ZWRQbGF5ZXJQb3NpdGlvbiA9IFsxLCAyXTtcclxuICAgICAgICAgICAgY29uc3QgZXhwZWN0ZWRQYXRoUG9zaXRpb24gPSBbMSwgMV07XHJcbiAgICAgICAgICAgIFxyXG5cclxuICAgICAgICAgICAgLy9leGVyY2lzZVxyXG4gICAgICAgICAgICBmaWVsZEdhbWUubW92ZVJpZ2h0KCk7XHJcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdFBsYXllclBvc2l0aW9uID0gW2ZpZWxkR2FtZS5wbGF5ZXJSb3dQb3NpdGlvbiwgZmllbGRHYW1lLnBsYXllckNvbHVtblBvc2l0aW9uXTtcclxuICAgICAgICAgICAgY29uc3QgcmVzdWx0UGF0aFBvc2l0aW9uID0gW107XHJcbiAgICAgICAgICAgIGZvciAobGV0IHJvdyA9IDA7IHJvdyA8IGZpZWxkR2FtZS5nYW1lR3JpZC5sZW5ndGg7IHJvdysrKSB7XHJcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBjb2x1bW4gPSAwOyBjb2x1bW4gPCBmaWVsZEdhbWUuZ2FtZUdyaWRbcm93XS5sZW5ndGg7IGNvbHVtbisrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGZpZWxkR2FtZS5nYW1lR3JpZFtyb3ddW2NvbHVtbl0gPT09IHBhdGhDaGFyYWN0ZXIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgW3Jlc3VsdFBhdGhQb3NpdGlvblswXSwgcmVzdWx0UGF0aFBvc2l0aW9uWzFdXSA9IFtyb3csIGNvbHVtbl07XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAvL3ZlcmlmeVxyXG4gICAgICAgICAgICBhc3NlcnQuZGVlcEVxdWFsKGV4cGVjdGVkUGxheWVyUG9zaXRpb24sIHJlc3VsdFBsYXllclBvc2l0aW9uKTtcclxuICAgICAgICAgICAgYXNzZXJ0LmRlZXBFcXVhbChleHBlY3RlZFBhdGhQb3NpdGlvbiwgcmVzdWx0UGF0aFBvc2l0aW9uKTtcclxuICAgICAgICB9KVxyXG5cclxuICAgICAgICBpdCgnZW5kcyB0aGUgZ2FtZSBhbmQgZG9lcyBub3QgbW92ZSB0aGUgcGxheWVyXFwncyBwb3NpdGlvbiByaWdodCBpZiB0aGUgbmV3IHBvc2l0aW9uIHNhdGlzZmllcyBnYW1lXFwncyBlbmQgY29uZGl0aW9ucycsICgpID0+IHtcclxuICAgICAgICAgICAgLy9zZXR1cFxyXG4gICAgICAgICAgICBmaWVsZEdhbWUuZ2FtZUdyaWRbMV1bMl0gPSBoYXRDaGFyYWN0ZXI7XHJcbiAgICAgICAgICAgIGZpZWxkR2FtZS5zZXRIYXRQb3NpdGlvbigpO1xyXG4gICAgICAgICAgICBjb25zdCBleHBlY3RlZFBsYXllclBvc2l0aW9uID0gWzEsIDFdO1xyXG5cclxuICAgICAgICAgICAgLy9leGVyY2lzZVxyXG4gICAgICAgICAgICBmaWVsZEdhbWUubW92ZVJpZ2h0KCk7XHJcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdFBsYXllclBvc2l0aW9uID0gW2ZpZWxkR2FtZS5wbGF5ZXJSb3dQb3NpdGlvbiwgZmllbGRHYW1lLnBsYXllckNvbHVtblBvc2l0aW9uXTtcclxuXHJcbiAgICAgICAgICAgIC8vdmVyaWZ5XHJcbiAgICAgICAgICAgIGFzc2VydC5kZWVwRXF1YWwoZXhwZWN0ZWRQbGF5ZXJQb3NpdGlvbiwgcmVzdWx0UGxheWVyUG9zaXRpb24pO1xyXG4gICAgICAgIH0pXHJcblxyXG4gICAgICAgIGl0KCd0aHJvd3MgYW4gZXJyb3IgaWYgZ2FtZUdyaWQgaGFzIG5vdCBiZWVuIGRlZmluZWQgeWV0JywgKCkgPT4ge1xyXG4gICAgICAgICAgICAvL3NldHVwXHJcbiAgICAgICAgICAgIGZpZWxkR2FtZS5nYW1lR3JpZCA9IHVuZGVmaW5lZDtcclxuXHJcbiAgICAgICAgICAgIC8vZXhlcmNpc2VcclxuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gKCkgPT4gZmllbGRHYW1lLm1vdmVSaWdodCgpO1xyXG5cclxuICAgICAgICAgICAgLy92ZXJpZnlcclxuICAgICAgICAgICAgYXNzZXJ0LnRocm93cyhyZXN1bHQsIC9UaGlzIG1ldGhvZCBjYW5ub3QgYmUgdXNlZCB1bnRpbCBhIGdhbWUgZ3JpZCBoYXMgYmVlbiBwcm92aWRlZC8pO1xyXG4gICAgICAgIH0pXHJcbiAgICB9KVxyXG5cclxuICAgIGRlc2NyaWJlKCdtb3ZlVXAnLCAoKSA9PiB7XHJcblxyXG4gICAgICAgIGxldCBmaWVsZEdhbWU7XHJcbiAgICAgICAgYmVmb3JlRWFjaCgoKSA9PiB7XHJcbiAgICAgICAgICAgIGZpZWxkR2FtZSA9IG5ldyBGaWVsZCgpO1xyXG4gICAgICAgICAgICBmaWVsZEdhbWUuZ2FtZUdyaWQgPSBbXHJcbiAgICAgICAgICAgICAgICBbJ+KWkScsICfilpEnLCAn4paRJ10sXHJcbiAgICAgICAgICAgICAgICBbJ+KWkScsIHBsYXllckNoYXJhY3RlciwgJ+KWkSddLFxyXG4gICAgICAgICAgICAgICAgWyfilpEnLCAn4paRJywgJ+KWkSddXHJcbiAgICAgICAgICAgIF07XHJcbiAgICAgICAgICAgIGZpZWxkR2FtZS5zZXRQbGF5ZXJQb3NpdGlvbigpO1xyXG4gICAgICAgICAgICBmaWVsZEdhbWUuc2V0RmllbGREaW1lbnNpb25zKCk7XHJcbiAgICAgICAgfSlcclxuXHJcbiAgICAgICAgaXQoJ21vdmVzIHRoZSBwbGF5ZXIgZG93biB1cCBwb3NpdGlvbiBhbmQgbGVhdmVzIGEgcGF0aCBjaGFyYWN0ZXIgaW4gcHJldmlvdXMgcG9zaXRpb24nLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIC8vc2V0dXBcclxuICAgICAgICAgICAgY29uc3QgZXhwZWN0ZWRQbGF5ZXJQb3NpdGlvbiA9IFswLCAxXTtcclxuICAgICAgICAgICAgY29uc3QgZXhwZWN0ZWRQYXRoUG9zaXRpb24gPSBbMSwgMV07XHJcbiAgICAgICAgICAgIFxyXG5cclxuICAgICAgICAgICAgLy9leGVyY2lzZVxyXG4gICAgICAgICAgICBmaWVsZEdhbWUubW92ZVVwKCk7XHJcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdFBsYXllclBvc2l0aW9uID0gW2ZpZWxkR2FtZS5wbGF5ZXJSb3dQb3NpdGlvbiwgZmllbGRHYW1lLnBsYXllckNvbHVtblBvc2l0aW9uXTtcclxuICAgICAgICAgICAgY29uc3QgcmVzdWx0UGF0aFBvc2l0aW9uID0gW107XHJcbiAgICAgICAgICAgIGZvciAobGV0IHJvdyA9IDA7IHJvdyA8IGZpZWxkR2FtZS5nYW1lR3JpZC5sZW5ndGg7IHJvdysrKSB7XHJcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBjb2x1bW4gPSAwOyBjb2x1bW4gPCBmaWVsZEdhbWUuZ2FtZUdyaWRbcm93XS5sZW5ndGg7IGNvbHVtbisrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGZpZWxkR2FtZS5nYW1lR3JpZFtyb3ddW2NvbHVtbl0gPT09IHBhdGhDaGFyYWN0ZXIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgW3Jlc3VsdFBhdGhQb3NpdGlvblswXSwgcmVzdWx0UGF0aFBvc2l0aW9uWzFdXSA9IFtyb3csIGNvbHVtbl07XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAvL3ZlcmlmeVxyXG4gICAgICAgICAgICBhc3NlcnQuZGVlcEVxdWFsKGV4cGVjdGVkUGxheWVyUG9zaXRpb24sIHJlc3VsdFBsYXllclBvc2l0aW9uKTtcclxuICAgICAgICAgICAgYXNzZXJ0LmRlZXBFcXVhbChleHBlY3RlZFBhdGhQb3NpdGlvbiwgcmVzdWx0UGF0aFBvc2l0aW9uKTtcclxuICAgICAgICB9KVxyXG5cclxuICAgICAgICBpdCgnZW5kcyB0aGUgZ2FtZSBhbmQgZG9lcyBub3QgbW92ZSB0aGUgcGxheWVyXFwncyBwb3NpdGlvbiB1cCBpZiB0aGUgbmV3IHBvc2l0aW9uIHNhdGlzZmllcyBnYW1lXFwncyBlbmQgY29uZGl0aW9ucycsICgpID0+IHtcclxuICAgICAgICAgICAgLy9zZXR1cFxyXG4gICAgICAgICAgICBmaWVsZEdhbWUuZ2FtZUdyaWRbMF1bMV0gPSBoYXRDaGFyYWN0ZXI7XHJcbiAgICAgICAgICAgIGZpZWxkR2FtZS5zZXRIYXRQb3NpdGlvbigpO1xyXG4gICAgICAgICAgICBjb25zdCBleHBlY3RlZFBsYXllclBvc2l0aW9uID0gWzEsIDFdO1xyXG5cclxuICAgICAgICAgICAgLy9leGVyY2lzZVxyXG4gICAgICAgICAgICBmaWVsZEdhbWUubW92ZVVwKCk7XHJcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdFBsYXllclBvc2l0aW9uID0gW2ZpZWxkR2FtZS5wbGF5ZXJSb3dQb3NpdGlvbiwgZmllbGRHYW1lLnBsYXllckNvbHVtblBvc2l0aW9uXTtcclxuXHJcbiAgICAgICAgICAgIC8vdmVyaWZ5XHJcbiAgICAgICAgICAgIGFzc2VydC5kZWVwRXF1YWwoZXhwZWN0ZWRQbGF5ZXJQb3NpdGlvbiwgcmVzdWx0UGxheWVyUG9zaXRpb24pO1xyXG4gICAgICAgIH0pXHJcblxyXG4gICAgICAgIGl0KCd0aHJvd3MgYW4gZXJyb3IgaWYgZ2FtZUdyaWQgaGFzIG5vdCBiZWVuIGRlZmluZWQgeWV0JywgKCkgPT4ge1xyXG4gICAgICAgICAgICAvL3NldHVwXHJcbiAgICAgICAgICAgIGZpZWxkR2FtZS5nYW1lR3JpZCA9IHVuZGVmaW5lZDtcclxuXHJcbiAgICAgICAgICAgIC8vZXhlcmNpc2VcclxuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gKCkgPT4gZmllbGRHYW1lLm1vdmVVcCgpO1xyXG5cclxuICAgICAgICAgICAgLy92ZXJpZnlcclxuICAgICAgICAgICAgYXNzZXJ0LnRocm93cyhyZXN1bHQsIC9UaGlzIG1ldGhvZCBjYW5ub3QgYmUgdXNlZCB1bnRpbCBhIGdhbWUgZ3JpZCBoYXMgYmVlbiBwcm92aWRlZC8pO1xyXG4gICAgICAgIH0pXHJcbiAgICB9KVxyXG5cclxuICAgIGRlc2NyaWJlKCdtb3ZlRG93bicsICgpID0+IHtcclxuXHJcbiAgICAgICAgbGV0IGZpZWxkR2FtZTtcclxuICAgICAgICBiZWZvcmVFYWNoKCgpID0+IHtcclxuICAgICAgICAgICAgZmllbGRHYW1lID0gbmV3IEZpZWxkKCk7XHJcbiAgICAgICAgICAgIGZpZWxkR2FtZS5nYW1lR3JpZCA9IFtcclxuICAgICAgICAgICAgICAgIFsn4paRJywgJ+KWkScsICfilpEnXSxcclxuICAgICAgICAgICAgICAgIFsn4paRJywgcGxheWVyQ2hhcmFjdGVyLCAn4paRJ10sXHJcbiAgICAgICAgICAgICAgICBbJ+KWkScsICfilpEnLCAn4paRJ11cclxuICAgICAgICAgICAgXTtcclxuICAgICAgICAgICAgZmllbGRHYW1lLnNldFBsYXllclBvc2l0aW9uKCk7XHJcbiAgICAgICAgICAgIGZpZWxkR2FtZS5zZXRGaWVsZERpbWVuc2lvbnMoKTtcclxuICAgICAgICB9KVxyXG5cclxuICAgICAgICBpdCgnbW92ZXMgdGhlIHBsYXllciBkb3duIG9uZSBwb3NpdGlvbiBhbmQgbGVhdmVzIGEgcGF0aCBjaGFyYWN0ZXIgaW4gcHJldmlvdXMgcG9zaXRpb24nLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIC8vc2V0dXBcclxuICAgICAgICAgICAgY29uc3QgZXhwZWN0ZWRQbGF5ZXJQb3NpdGlvbiA9IFsyLCAxXTtcclxuICAgICAgICAgICAgY29uc3QgZXhwZWN0ZWRQYXRoUG9zaXRpb24gPSBbMSwgMV07XHJcbiAgICAgICAgICAgIFxyXG5cclxuICAgICAgICAgICAgLy9leGVyY2lzZVxyXG4gICAgICAgICAgICBmaWVsZEdhbWUubW92ZURvd24oKTtcclxuICAgICAgICAgICAgY29uc3QgcmVzdWx0UGxheWVyUG9zaXRpb24gPSBbZmllbGRHYW1lLnBsYXllclJvd1Bvc2l0aW9uLCBmaWVsZEdhbWUucGxheWVyQ29sdW1uUG9zaXRpb25dO1xyXG4gICAgICAgICAgICBjb25zdCByZXN1bHRQYXRoUG9zaXRpb24gPSBbXTtcclxuICAgICAgICAgICAgZm9yIChsZXQgcm93ID0gMDsgcm93IDwgZmllbGRHYW1lLmdhbWVHcmlkLmxlbmd0aDsgcm93KyspIHtcclxuICAgICAgICAgICAgICAgIGZvciAobGV0IGNvbHVtbiA9IDA7IGNvbHVtbiA8IGZpZWxkR2FtZS5nYW1lR3JpZFtyb3ddLmxlbmd0aDsgY29sdW1uKyspIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoZmllbGRHYW1lLmdhbWVHcmlkW3Jvd11bY29sdW1uXSA9PT0gcGF0aENoYXJhY3Rlcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBbcmVzdWx0UGF0aFBvc2l0aW9uWzBdLCByZXN1bHRQYXRoUG9zaXRpb25bMV1dID0gW3JvdywgY29sdW1uXTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC8vdmVyaWZ5XHJcbiAgICAgICAgICAgIGFzc2VydC5kZWVwRXF1YWwoZXhwZWN0ZWRQbGF5ZXJQb3NpdGlvbiwgcmVzdWx0UGxheWVyUG9zaXRpb24pO1xyXG4gICAgICAgICAgICBhc3NlcnQuZGVlcEVxdWFsKGV4cGVjdGVkUGF0aFBvc2l0aW9uLCByZXN1bHRQYXRoUG9zaXRpb24pO1xyXG4gICAgICAgIH0pXHJcblxyXG4gICAgICAgIGl0KCdlbmRzIHRoZSBnYW1lIGFuZCBkb2VzIG5vdCBtb3ZlIHRoZSBwbGF5ZXJcXCdzIHBvc2l0aW9uIGRvd24gaWYgdGhlIG5ldyBwb3NpdGlvbiBzYXRpc2ZpZXMgZ2FtZVxcJ3MgZW5kIGNvbmRpdGlvbnMnLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIC8vc2V0dXBcclxuICAgICAgICAgICAgY29uc3QgZXhwZWN0ZWRQbGF5ZXJQb3NpdGlvbiA9IFsyLCAxXTtcclxuXHJcbiAgICAgICAgICAgIC8vZXhlcmNpc2VcclxuICAgICAgICAgICAgZmllbGRHYW1lLm1vdmVEb3duKCk7XHJcbiAgICAgICAgICAgIGZpZWxkR2FtZS5tb3ZlRG93bigpO1xyXG4gICAgICAgICAgICBjb25zdCByZXN1bHRQbGF5ZXJQb3NpdGlvbiA9IFtmaWVsZEdhbWUucGxheWVyUm93UG9zaXRpb24sIGZpZWxkR2FtZS5wbGF5ZXJDb2x1bW5Qb3NpdGlvbl07XHJcblxyXG4gICAgICAgICAgICAvL3ZlcmlmeVxyXG4gICAgICAgICAgICBhc3NlcnQuZGVlcEVxdWFsKGV4cGVjdGVkUGxheWVyUG9zaXRpb24sIHJlc3VsdFBsYXllclBvc2l0aW9uKTtcclxuICAgICAgICB9KVxyXG5cclxuICAgICAgICBpdCgndGhyb3dzIGFuIGVycm9yIGlmIGdhbWVHcmlkIGhhcyBub3QgYmVlbiBkZWZpbmVkIHlldCcsICgpID0+IHtcclxuICAgICAgICAgICAgLy9zZXR1cFxyXG4gICAgICAgICAgICBmaWVsZEdhbWUuZ2FtZUdyaWQgPSB1bmRlZmluZWQ7XHJcblxyXG4gICAgICAgICAgICAvL2V4ZXJjaXNlXHJcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9ICgpID0+IGZpZWxkR2FtZS5tb3ZlRG93bigpO1xyXG5cclxuICAgICAgICAgICAgLy92ZXJpZnlcclxuICAgICAgICAgICAgYXNzZXJ0LnRocm93cyhyZXN1bHQsIC9UaGlzIG1ldGhvZCBjYW5ub3QgYmUgdXNlZCB1bnRpbCBhIGdhbWUgZ3JpZCBoYXMgYmVlbiBwcm92aWRlZC8pO1xyXG4gICAgICAgIH0pXHJcbiAgICB9KVxyXG5cclxuICAgIGRlc2NyaWJlKCdtZWV0c0VuZENvbmRpdGlvbnMnLCAoKSA9PiB7XHJcblxyXG4gICAgICAgIGxldCBmaWVsZEdhbWUsIG91dE9mQm91bmRzUG9zaXRpb24sIGhhdFBvc2l0aW9uLCBob2xlUG9zaXRpb24sIHNhZmVQb3NpdGlvbjtcclxuICAgICAgICBiZWZvcmVFYWNoKCgpID0+IHtcclxuICAgICAgICAgICAgZmllbGRHYW1lID0gbmV3IEZpZWxkKCk7XHJcbiAgICAgICAgICAgIGZpZWxkR2FtZS5nYW1lR3JpZCA9IFtcclxuICAgICAgICAgICAgICAgIFsn4paRJywgJ+KWkScsICfilpEnXSxcclxuICAgICAgICAgICAgICAgIFsn4paRJywgJ+KWkScsIGhhdENoYXJhY3Rlcl0sXHJcbiAgICAgICAgICAgICAgICBbJ+KWkScsICfilpEnLCBob2xlQ2hhcmFjdGVyXVxyXG4gICAgICAgICAgICBdO1xyXG4gICAgICAgICAgICBmaWVsZEdhbWUuc2V0RmllbGREaW1lbnNpb25zKCk7XHJcbiAgICAgICAgICAgIGZpZWxkR2FtZS5zZXRIb2xlcygpO1xyXG4gICAgICAgICAgICBmaWVsZEdhbWUuc2V0SGF0UG9zaXRpb24oKTtcclxuICAgICAgICAgICAgZmllbGRHYW1lLmdhbWVBY3RpdmUgPSB0cnVlO1xyXG5cclxuICAgICAgICAgICAgb3V0T2ZCb3VuZHNQb3NpdGlvbiA9IFswLCA0XTtcclxuICAgICAgICAgICAgaGF0UG9zaXRpb24gPSBbMSwgM107XHJcbiAgICAgICAgICAgIGhvbGVQb3NpdGlvbiA9IFsyLCAzXTtcclxuICAgICAgICAgICAgc2FmZVBvc2l0aW9uID0gWzAsIDBdO1xyXG4gICAgICAgIH0pXHJcblxyXG4gICAgICAgIGl0KCdyZXR1cm5zIHRydWUgaWYgbmV3UG9zaXRpb24gcGFyYW1ldGVyIGlzIG91dCBvZiB0aGUgZ2FtZSBtYXBcXCdzIGJvdW5kcyBhbmQgY2FsbHMgZ2FtZU92ZXIgdG8gZW5kIHRoZSBnYW1lJywgKCkgPT4ge1xyXG4gICAgICAgICAgICAvL3NldHVwXHJcbiAgICAgICAgICAgIGNvbnN0IG5ld1Bvc2l0aW9uID0gb3V0T2ZCb3VuZHNQb3NpdGlvbjtcclxuICAgICAgICAgICAgY29uc3QgZXhwZWN0ZWRSZXN1bHQgPSB0cnVlO1xyXG5cclxuICAgICAgICAgICAgLy9leGVyY2lzZVxyXG4gICAgICAgICAgICBjb25zdCBhY3R1YWxSZXN1bHQgPSBmaWVsZEdhbWUubWVldHNFbmRDb25kaXRpb25zKG5ld1Bvc2l0aW9uKTtcclxuXHJcbiAgICAgICAgICAgIC8vdmVyaWZ5XHJcbiAgICAgICAgICAgIGFzc2VydC5zdHJpY3RFcXVhbChleHBlY3RlZFJlc3VsdCwgYWN0dWFsUmVzdWx0KTtcclxuICAgICAgICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKGZpZWxkR2FtZS5nYW1lQWN0aXZlLCBmYWxzZSk7XHJcbiAgICAgICAgfSlcclxuXHJcbiAgICAgICAgaXQoJ3JldHVybnMgdHJ1ZSBpZiBuZXdQb3NpdGlvbiBwYXJhbWV0ZXIgaXMgdGhlIGhhdCBsb2NhdGlvbiBhbmQgY2FsbHMgZ2FtZU92ZXIgdG8gZW5kIHRoZSBnYW1lJywgKCkgPT4ge1xyXG4gICAgICAgICAgICAvL3NldHVwXHJcbiAgICAgICAgICAgIGNvbnN0IG5ld1Bvc2l0aW9uID0gaGF0UG9zaXRpb247XHJcbiAgICAgICAgICAgIGNvbnN0IGV4cGVjdGVkUmVzdWx0ID0gdHJ1ZTtcclxuXHJcbiAgICAgICAgICAgIC8vZXhlcmNpc2VcclxuICAgICAgICAgICAgY29uc3QgYWN0dWFsUmVzdWx0ID0gZmllbGRHYW1lLm1lZXRzRW5kQ29uZGl0aW9ucyhuZXdQb3NpdGlvbik7XHJcblxyXG4gICAgICAgICAgICAvL3ZlcmlmeVxyXG4gICAgICAgICAgICBhc3NlcnQuc3RyaWN0RXF1YWwoZXhwZWN0ZWRSZXN1bHQsIGFjdHVhbFJlc3VsdCk7XHJcbiAgICAgICAgICAgIGFzc2VydC5zdHJpY3RFcXVhbChmaWVsZEdhbWUuZ2FtZUFjdGl2ZSwgZmFsc2UpO1xyXG4gICAgICAgIH0pXHJcblxyXG4gICAgICAgIGl0KCdyZXR1cm5zIHRydWUgaWYgbmV3UG9zaXRpb24gcGFyYW1ldGVyIGlzIGEgaG9sZSBsb2NhdGlvbiBhbmQgY2FsbHMgZ2FtZU92ZXIgdG8gZW5kIHRoZSBnYW1lJywgKCkgPT4ge1xyXG4gICAgICAgICAgICAvL3NldHVwXHJcbiAgICAgICAgICAgIGNvbnN0IG5ld1Bvc2l0aW9uID0gaG9sZVBvc2l0aW9uO1xyXG4gICAgICAgICAgICBjb25zdCBleHBlY3RlZFJlc3VsdCA9IHRydWU7XHJcblxyXG4gICAgICAgICAgICAvL2V4ZXJjaXNlXHJcbiAgICAgICAgICAgIGNvbnN0IGFjdHVhbFJlc3VsdCA9IGZpZWxkR2FtZS5tZWV0c0VuZENvbmRpdGlvbnMobmV3UG9zaXRpb24pO1xyXG5cclxuICAgICAgICAgICAgLy92ZXJpZnlcclxuICAgICAgICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKGV4cGVjdGVkUmVzdWx0LCBhY3R1YWxSZXN1bHQpO1xyXG4gICAgICAgICAgICBhc3NlcnQuc3RyaWN0RXF1YWwoZmllbGRHYW1lLmdhbWVBY3RpdmUsIGZhbHNlKTtcclxuICAgICAgICB9KVxyXG5cclxuICAgICAgICBpdCgncmV0dXJucyBmYWxzZSBpZiBuZXdQb3NpdGlvbiBwYXJhbWV0ZXIgZG9lcyBub3QgbWVldCBlbmQgY29uZGl0aW9ucyBhbmQgZG9lcyBub3QgY2FsbCBnYW1lT3ZlciB0byBlbmQgdGhlIGdhbWUnLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIC8vc2V0dXBcclxuICAgICAgICAgICAgY29uc3QgbmV3UG9zaXRpb24gPSBzYWZlUG9zaXRpb247XHJcbiAgICAgICAgICAgIGNvbnN0IGV4cGVjdGVkUmVzdWx0ID0gZmFsc2U7XHJcblxyXG4gICAgICAgICAgICAvL2V4ZXJjaXNlXHJcbiAgICAgICAgICAgIGNvbnN0IGFjdHVhbFJlc3VsdCA9IGZpZWxkR2FtZS5tZWV0c0VuZENvbmRpdGlvbnMobmV3UG9zaXRpb24pO1xyXG5cclxuICAgICAgICAgICAgLy92ZXJpZnlcclxuICAgICAgICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKGV4cGVjdGVkUmVzdWx0LCBhY3R1YWxSZXN1bHQpO1xyXG4gICAgICAgICAgICBhc3NlcnQuc3RyaWN0RXF1YWwoZmllbGRHYW1lLmdhbWVBY3RpdmUsIHRydWUpO1xyXG4gICAgICAgIH0pXHJcblxyXG4gICAgICAgIGl0KCd0aHJvd3MgYW4gZXJyb3IgaWYgZ2FtZUdyaWQgaGFzIG5vdCBiZWVuIGRlZmluZWQgeWV0JywgKCkgPT4ge1xyXG4gICAgICAgICAgICAvL3NldHVwXHJcbiAgICAgICAgICAgIGZpZWxkR2FtZS5nYW1lR3JpZCA9IHVuZGVmaW5lZDtcclxuXHJcbiAgICAgICAgICAgIC8vZXhlcmNpc2VcclxuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gKCkgPT4gZmllbGRHYW1lLm1lZXRzRW5kQ29uZGl0aW9ucygpO1xyXG5cclxuICAgICAgICAgICAgLy92ZXJpZnlcclxuICAgICAgICAgICAgYXNzZXJ0LnRocm93cyhyZXN1bHQsIC9UaGlzIG1ldGhvZCBjYW5ub3QgYmUgdXNlZCB1bnRpbCBhIGdhbWUgZ3JpZCBoYXMgYmVlbiBwcm92aWRlZC8pO1xyXG4gICAgICAgIH0pXHJcbiAgICB9KVxyXG5cclxuICAgIGRlc2NyaWJlKCdnYW1lT3ZlcicsICgpID0+IHtcclxuXHJcbiAgICAgICAgbGV0IGZpZWxkR2FtZSwgZ2FtZU92ZXJSZWFzb24sIGNvbnNvbGVTcHk7XHJcbiAgICAgICAgYmVmb3JlRWFjaCgoKSA9PiB7XHJcbiAgICAgICAgICAgIGZpZWxkR2FtZSA9IG5ldyBGaWVsZCgpO1xyXG4gICAgICAgICAgICBmaWVsZEdhbWUuZ2FtZUFjdGl2ZSA9IHRydWU7XHJcblxyXG4gICAgICAgICAgICBnYW1lT3ZlclJlYXNvbiA9IHtcclxuICAgICAgICAgICAgICAgIE91dE9mQm91bmRzOiAnb3V0JyxcclxuICAgICAgICAgICAgICAgIFdpbjogJ3dpbicsXHJcbiAgICAgICAgICAgICAgICBGZWxsSW5Ib2xlOiAnZmVsbCdcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcblxyXG4gICAgICAgIGl0KCdlbmRzIHRoZSBnYW1lIGlmIFwib3V0XCIgaXMgdGhlIHBhc3NlZCBpbiBnYW1lT3ZlciByZWFzb24gYW5kIHJldHVybnMgdGhlIHJlYXNvbicsICgpID0+IHtcclxuICAgICAgICAgICAgLy9zZXR1cFxyXG4gICAgICAgICAgICBjb25zdCBnYW1lT3ZlckFyZ3VtZW50ID0gZ2FtZU92ZXJSZWFzb24uT3V0T2ZCb3VuZHM7XHJcbiAgICAgICAgICAgIGNvbnN0IGV4cGVjdGVkR2FtZUFjdGl2ZVJlc3VsdCA9IGZhbHNlO1xyXG4gICAgICAgICAgICBjb25zdCBleHBlY3RlZEdhbWVPdmVyUmV0dXJuUmVhc29uID0gZ2FtZU92ZXJBcmd1bWVudDtcclxuXHJcbiAgICAgICAgICAgIC8vZXhlcmNpc2VcclxuICAgICAgICAgICAgY29uc3QgYWN0dWFsR2FtZU92ZXJSZXR1cm5SZWFzb24gPSBmaWVsZEdhbWUuZ2FtZU92ZXIoZ2FtZU92ZXJBcmd1bWVudCk7XHJcbiAgICAgICAgICAgIGNvbnN0IGFjdHVhbEdhbWVBY3RpdmVSZXN1bHQgPSBmaWVsZEdhbWUuZ2FtZUFjdGl2ZTtcclxuXHJcbiAgICAgICAgICAgIC8vdmVyaWZ5XHJcbiAgICAgICAgICAgIGFzc2VydC5lcXVhbChleHBlY3RlZEdhbWVBY3RpdmVSZXN1bHQsIGFjdHVhbEdhbWVBY3RpdmVSZXN1bHQpO1xyXG4gICAgICAgICAgICBhc3NlcnQuZXF1YWwoZXhwZWN0ZWRHYW1lT3ZlclJldHVyblJlYXNvbiwgYWN0dWFsR2FtZU92ZXJSZXR1cm5SZWFzb24pO1xyXG4gICAgICAgIH0pXHJcblxyXG4gICAgICAgIGl0KCdlbmRzIHRoZSBnYW1lIGlmIFwid2luXCIgaXMgdGhlIHBhc3NlZCBpbiBnYW1lT3ZlciByZWFzb24gYW5kIHJldHVybnMgdGhlIHJlYXNvbicsICgpID0+IHtcclxuICAgICAgICAgICAgLy9zZXR1cFxyXG4gICAgICAgICAgICBjb25zdCBnYW1lT3ZlckFyZ3VtZW50ID0gZ2FtZU92ZXJSZWFzb24uV2luO1xyXG4gICAgICAgICAgICBjb25zdCBleHBlY3RlZEdhbWVBY3RpdmVSZXN1bHQgPSBmYWxzZTtcclxuICAgICAgICAgICAgY29uc3QgZXhwZWN0ZWRHYW1lT3ZlclJldHVyblJlYXNvbiA9IGdhbWVPdmVyQXJndW1lbnQ7XHJcblxyXG4gICAgICAgICAgICAvL2V4ZXJjaXNlXHJcbiAgICAgICAgICAgIGNvbnN0IGFjdHVhbEdhbWVPdmVyUmV0dXJuUmVhc29uID0gZmllbGRHYW1lLmdhbWVPdmVyKGdhbWVPdmVyQXJndW1lbnQpO1xyXG4gICAgICAgICAgICBjb25zdCBhY3R1YWxHYW1lQWN0aXZlUmVzdWx0ID0gZmllbGRHYW1lLmdhbWVBY3RpdmU7XHJcblxyXG4gICAgICAgICAgICAvL3ZlcmlmeVxyXG4gICAgICAgICAgICBhc3NlcnQuZXF1YWwoZXhwZWN0ZWRHYW1lQWN0aXZlUmVzdWx0LCBhY3R1YWxHYW1lQWN0aXZlUmVzdWx0KTtcclxuICAgICAgICAgICAgYXNzZXJ0LmVxdWFsKGV4cGVjdGVkR2FtZU92ZXJSZXR1cm5SZWFzb24sIGFjdHVhbEdhbWVPdmVyUmV0dXJuUmVhc29uKTtcclxuICAgICAgICB9KVxyXG5cclxuICAgICAgICBpdCgnZW5kcyB0aGUgZ2FtZSBpZiBcImZlbGxcIiBpcyB0aGUgcGFzc2VkIGluIGdhbWVPdmVyIHJlYXNvbiBhbmQgcmV0dXJucyB0aGUgcmVhc29uJywgKCkgPT4ge1xyXG4gICAgICAgICAgICAvL3NldHVwXHJcbiAgICAgICAgICAgIGNvbnN0IGdhbWVPdmVyQXJndW1lbnQgPSBnYW1lT3ZlclJlYXNvbi5GZWxsSW5Ib2xlO1xyXG4gICAgICAgICAgICBjb25zdCBleHBlY3RlZEdhbWVBY3RpdmVSZXN1bHQgPSBmYWxzZTtcclxuICAgICAgICAgICAgY29uc3QgZXhwZWN0ZWRHYW1lT3ZlclJldHVyblJlYXNvbiA9IGdhbWVPdmVyQXJndW1lbnQ7XHJcblxyXG4gICAgICAgICAgICAvL2V4ZXJjaXNlXHJcbiAgICAgICAgICAgIGNvbnN0IGFjdHVhbEdhbWVPdmVyUmV0dXJuUmVhc29uID0gZmllbGRHYW1lLmdhbWVPdmVyKGdhbWVPdmVyQXJndW1lbnQpO1xyXG4gICAgICAgICAgICBjb25zdCBhY3R1YWxHYW1lQWN0aXZlUmVzdWx0ID0gZmllbGRHYW1lLmdhbWVBY3RpdmU7XHJcblxyXG4gICAgICAgICAgICAvL3ZlcmlmeVxyXG4gICAgICAgICAgICBhc3NlcnQuZXF1YWwoZXhwZWN0ZWRHYW1lQWN0aXZlUmVzdWx0LCBhY3R1YWxHYW1lQWN0aXZlUmVzdWx0KTtcclxuICAgICAgICAgICAgYXNzZXJ0LmVxdWFsKGV4cGVjdGVkR2FtZU92ZXJSZXR1cm5SZWFzb24sIGFjdHVhbEdhbWVPdmVyUmV0dXJuUmVhc29uKTtcclxuICAgICAgICB9KVxyXG4gICAgfSlcclxufSkiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE1BQU0sR0FBR0MsT0FBTyxDQUFDLFFBQVEsQ0FBQztBQUNoQyxNQUFNO0VBQUVDO0FBQU0sQ0FBQyxHQUFHRCxPQUFPLENBQUMsZUFBZSxDQUFDO0FBRTFDLE1BQU1FLGVBQWUsR0FBRyxHQUFHO0FBQzNCLE1BQU1DLFlBQVksR0FBRyxHQUFHO0FBQ3hCLE1BQU1DLGFBQWEsR0FBRyxHQUFHO0FBQ3pCLE1BQU1DLGNBQWMsR0FBRyxHQUFHO0FBQzFCLE1BQU1DLGFBQWEsR0FBRyxHQUFHO0FBRXpCQyxR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QkFBd0IsR0FBRyxLQUFLO01BQ3RDLE1BQU1DLDRCQUE0QixHQUFHRixnQkFBZ0I7O01BRXJEO01BQ0EsTUFBTUcsMEJBQTBCLEdBQUc5RixTQUFTLENBQUMrRixRQUFRLENBQUNKLGdCQUFnQixDQUFDO01BQ3ZFLE1BQU1LLHNCQUFzQixHQUFHaEcsU0FBUyxDQUFDaUYsVUFBVTs7TUFFbkQ7TUFDQTlGLE1BQU0sQ0FBQzhHLEtBQUssQ0FBQ0wsd0JBQXdCLEVBQUVJLHNCQUFzQixDQUFDO01BQzlEN0csTUFBTSxDQUFDOEcsS0FBSyxDQUFDSiw0QkFBNEIsRUFBRUMsMEJBQTBCLENBQUM7SUFDMUUsQ0FBQyxDQUFDO0lBRUY3RixFQUFFLENBQUMsZ0ZBQWdGLEVBQUUsTUFBTTtNQUN2RjtNQUNBLE1BQU0wRixnQkFBZ0IsR0FBR0wsY0FBYyxDQUFDRyxHQUFHO01BQzNDLE1BQU1HLHdCQUF3QixHQUFHLEtBQUs7TUFDdEMsTUFBTUMsNEJBQTRCLEdBQUdGLGdCQUFnQjs7TUFFckQ7TUFDQSxNQUFNRywwQkFBMEIsR0FBRzlGLFNBQVMsQ0FBQytGLFFBQVEsQ0FBQ0osZ0JBQWdCLENBQUM7TUFDdkUsTUFBTUssc0JBQXNCLEdBQUdoRyxTQUFTLENBQUNpRixVQUFVOztNQUVuRDtNQUNBOUYsTUFBTSxDQUFDOEcsS0FBSyxDQUFDTCx3QkFBd0IsRUFBRUksc0JBQXNCLENBQUM7TUFDOUQ3RyxNQUFNLENBQUM4RyxLQUFLLENBQUNKLDRCQUE0QixFQUFFQywwQkFBMEIsQ0FBQztJQUMxRSxDQUFDLENBQUM7SUFFRjdGLEVBQUUsQ0FBQyxpRkFBaUYsRUFBRSxNQUFNO01BQ3hGO01BQ0EsTUFBTTBGLGdCQUFnQixHQUFHTCxjQUFjLENBQUNJLFVBQVU7TUFDbEQsTUFBTUUsd0JBQXdCLEdBQUcsS0FBSztNQUN0QyxNQUFNQyw0QkFBNEIsR0FBR0YsZ0JBQWdCOztNQUVyRDtNQUNBLE1BQU1HLDBCQUEwQixHQUFHOUYsU0FBUyxDQUFDK0YsUUFBUSxDQUFDSixnQkFBZ0IsQ0FBQztNQUN2RSxNQUFNSyxzQkFBc0IsR0FBR2hHLFNBQVMsQ0FBQ2lGLFVBQVU7O01BRW5EO01BQ0E5RixNQUFNLENBQUM4RyxLQUFLLENBQUNMLHdCQUF3QixFQUFFSSxzQkFBc0IsQ0FBQztNQUM5RDdHLE1BQU0sQ0FBQzhHLEtBQUssQ0FBQ0osNEJBQTRCLEVBQUVDLDBCQUEwQixDQUFDO0lBQzFFLENBQUMsQ0FBQztFQUNOLENBQUMsQ0FBQztBQUNOLENBQUMsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":["assert","require","Field","playerCharacter","hatCharacter","holeCharacter","fieldCharacter","pathCharacter","describe","field","rowIndex","columnIndex","beforeEach","fieldGame","it","height","width","result","getRandomKeyPosition","ok","throws","fieldHeight","fieldWidth","percentageHoles","playerRandom","hatRandom","gameGrid","generateField","undefined","setHatPosition","hatRowPosition","hatColumnPosition","strictEqual","setPlayerPosition","playerRowPosition","playerColumnPosition","setFieldDimensions","expectedFieldWidth","length","expectedFieldHeight","fieldWidthResult","fieldHeightResult","setHoles","expectedHolePositions","resultHolePositions","holes","deepEqual","populateRandomHoles","testPass","row","column","stringifiedPosition","JSON","stringify","find","element","resultNumberHoles","expectedNumberHoles","Math","floor","expectedHeight","expectedWidth","heightResult","widthResult","defaultPlayerPosition","potentialFailures","i","playerRowPositionResult","playerColumnPositionResult","defaultHatRowPosition","defaultHatColumnPosition","failure","hatPosition","expectedPlayerCount","expectedHatCount","expectedHoleCount","hideHoles","resultPlayerCount","resultHatCount","resultHoleCount","expectedPlayerPosition","expectedPathPosition","move","resultPlayerPosition","resultPathPosition","expectedPathCount","resultPathCount","moveLeft","moveRight","moveUp","moveDown","outOfBoundsPosition","holePosition","safePosition","gameActive","newPosition","expectedResult","actualResult","meetsEndConditions","gameOverReason","consoleSpy","OutOfBounds","Win","FellInHole","gameOverArgument","expectedGameActiveResult","expectedGameOverReturnReason","actualGameOverReturnReason","gameOver","actualGameActiveResult","equal"],"sourceRoot":"C:\\Users\\dpett\\projects\\Find Your Hat\\test\\","sources":["FieldClass_test.js"],"sourcesContent":["const assert = require('assert');\r\nconst { Field } = require('../FieldClass');\r\n\r\nconst playerCharacter = '!';\r\nconst hatCharacter = '^';\r\nconst holeCharacter = 'O';\r\nconst fieldCharacter = '░';\r\nconst pathCharacter = '*';\r\n\r\ndescribe('Field', () => {\r\n    describe('.getRandomKeyPosition', () => {\r\n\r\n        let field, rowIndex, columnIndex;\r\n        beforeEach(() => {\r\n            fieldGame = new Field();\r\n            rowIndex = 0;\r\n            columnIndex = 1;\r\n        })\r\n\r\n        it('generates a valid random position array [row, column] on the game map when height is 1 and width is 1', () => {\r\n            //setup\r\n            const height = 1;\r\n            const width = 1;\r\n\r\n            //exercise\r\n            const result = fieldGame.getRandomKeyPosition(height, width);\r\n\r\n            //verify\r\n            assert.ok(\r\n                (result[rowIndex] >= 0 && result[rowIndex] <= height) \r\n                && \r\n                (result[columnIndex] >= 0 && result[columnIndex] <= width)\r\n            );\r\n        })\r\n\r\n        it('generates a valid random position array [row, column] on the game map when height is 10 and width is 10', () => {\r\n            //setup\r\n            const height = 10;\r\n            const width = 10;\r\n\r\n            //exercise\r\n            const result = fieldGame.getRandomKeyPosition(height, width);\r\n\r\n            //verify\r\n            assert.ok(\r\n                (result[rowIndex] >= 0 && result[rowIndex] <= height) \r\n                && \r\n                (result[columnIndex] >= 0 && result[columnIndex] <= width)\r\n            );\r\n        })\r\n\r\n        it('generates a valid random position array [row, column] on the game map when height is 100 and width is 100', () => {\r\n            //setup\r\n            const height = 100;\r\n            const width = 100;\r\n\r\n            //exercise\r\n            const result = fieldGame.getRandomKeyPosition(height, width);\r\n\r\n            //verify\r\n            assert.ok(\r\n                (result[rowIndex] >= 0 && result[rowIndex] <= height) \r\n                && \r\n                (result[columnIndex] >= 0 && result[columnIndex] <= width)\r\n            );\r\n        })\r\n\r\n        it('generates a valid random position array [row, column] on the game map when height is 3 and width is 9', () => {\r\n            //setup\r\n            const height = 3;\r\n            const width = 9;\r\n\r\n            //exercise\r\n            const result = fieldGame.getRandomKeyPosition(height, width);\r\n\r\n            //verify\r\n            assert.ok(\r\n                (result[rowIndex] >= 0 && result[rowIndex] <= height) \r\n                && \r\n                (result[columnIndex] >= 0 && result[columnIndex] <= width)\r\n            );\r\n        })\r\n\r\n        it('generates a valid random position array [row, column] on the game map when height is 9 and width is 3', () => {\r\n            //setup\r\n            const height = 9;\r\n            const width = 3;\r\n\r\n            //exercise\r\n            const result = fieldGame.getRandomKeyPosition(height, width);\r\n\r\n            //verify\r\n            assert.ok(\r\n                (result[rowIndex] >= 0 && result[rowIndex] <= height) \r\n                && \r\n                (result[columnIndex] >= 0 && result[columnIndex] <= width)\r\n            );\r\n        })\r\n\r\n        it('throws an error if it is passed a height that is less than 1', () => {\r\n            //setup\r\n            const height = -1;\r\n            const width = 10;\r\n\r\n            //exercise\r\n            const result = () => fieldGame.getRandomKeyPosition(height, width);\r\n    \r\n\r\n            //verify\r\n            assert.throws(result, /Height and width values cannot be less than 1/)\r\n        })\r\n\r\n        it('throws an error if it is passed a width that is less than 1', () => {\r\n            //setup\r\n            const height = 10;\r\n            const width = -1;\r\n\r\n            //exercise\r\n            const result = () => fieldGame.getRandomKeyPosition(height, width);\r\n    \r\n\r\n            //verify\r\n            assert.throws(result, /Height and width values cannot be less than 1/)\r\n        })\r\n    })\r\n\r\n    describe('.setHatPosition', () => {\r\n\r\n        let fieldGame;\r\n        beforeEach(() => {\r\n            fieldGame = new Field();\r\n\r\n            //generate and assign gameGrid for field instance\r\n            const fieldHeight = 10;\r\n            const fieldWidth = 50;\r\n            const percentageHoles = 20;\r\n            const playerRandom = true;\r\n            const hatRandom = true;\r\n            fieldGame.gameGrid = fieldGame.generateField(fieldHeight, fieldWidth, percentageHoles, playerRandom, hatRandom);\r\n        })\r\n\r\n        it('throws an error if the field instance\\'s gameGrid property is undefined', () => {\r\n            //setup\r\n            fieldGame.gameGrid = undefined;\r\n\r\n            //exercise\r\n            const result = () => fieldGame.setHatPosition();\r\n\r\n            //verify\r\n            assert.throws(result, /Game Grid must already be provided/);\r\n        })\r\n\r\n        it('sets the instance\\'s hatRowPosition and hatColumnPosition with the correct values when called', () => {\r\n            //setup\r\n            fieldGame.setHatPosition();\r\n\r\n            //exercise\r\n            const result = fieldGame.gameGrid[fieldGame.hatRowPosition][fieldGame.hatColumnPosition];\r\n\r\n            //verify\r\n            assert.strictEqual(result, hatCharacter);\r\n        })\r\n    })\r\n\r\n    describe('.setPlayerPosition', () => {\r\n\r\n        let fieldGame;\r\n        beforeEach(() => {\r\n            fieldGame = new Field();\r\n\r\n            //generate and assign gameGrid for field instance\r\n            const fieldHeight = 10;\r\n            const fieldWidth = 50;\r\n            const percentageHoles = 20;\r\n            const playerRandom = true;\r\n            const hatRandom = true;\r\n            fieldGame.gameGrid = fieldGame.generateField(fieldHeight, fieldWidth, percentageHoles, playerRandom, hatRandom);\r\n            \r\n\r\n        })\r\n\r\n        it('throws an error if the field instance\\'s gameGrid property is undefined', () => {\r\n            //setup\r\n            fieldGame.gameGrid = undefined;\r\n\r\n            //exercise\r\n            const result = () => fieldGame.setPlayerPosition();\r\n\r\n            //verify\r\n            assert.throws(result, /Game Grid must already be provided/);\r\n        })\r\n\r\n        it('sets the instance\\'s playerRowPosition and playerColumnPosition with the correct values when called', () => {\r\n            //setup\r\n            fieldGame.setPlayerPosition();\r\n\r\n            //exercise\r\n            const result = fieldGame.gameGrid[fieldGame.playerRowPosition][fieldGame.playerColumnPosition];\r\n\r\n            //verify\r\n            assert.strictEqual(result, playerCharacter);\r\n        })\r\n    })\r\n\r\n    describe('.setFieldDimensions', () => {\r\n\r\n        let fieldGame;\r\n        beforeEach(() => {\r\n            fieldGame = new Field();\r\n        })\r\n        \r\n        it('throws an error if the field instance\\'s gameGrid property is undefined', () => {\r\n            //setup\r\n            fieldGame.gameGrid = undefined;\r\n\r\n            //exercise\r\n            const result = () => fieldGame.setFieldDimensions();\r\n\r\n            //verify\r\n            assert.throws(result, /Game Grid must already be provided/);\r\n        })\r\n\r\n        it('correctly sets the field\\'s dimensions when called and a custom game field has been provided', () => {\r\n            //setup\r\n            fieldGame.gameGrid = [\r\n                ['*', '░', 'O'],\r\n                ['░', 'O', '░'],\r\n                ['░', '^', '░']\r\n            ];\r\n            const expectedFieldWidth = fieldGame.gameGrid[0].length;\r\n            const expectedFieldHeight = fieldGame.gameGrid.length;\r\n\r\n            //exercise\r\n            fieldGame.setFieldDimensions();\r\n            const fieldWidthResult = fieldGame.fieldWidth;\r\n            const fieldHeightResult = fieldGame.fieldHeight;\r\n            \r\n\r\n            //verify\r\n            assert.strictEqual(expectedFieldWidth, fieldWidthResult);\r\n            assert.strictEqual(expectedFieldHeight, fieldHeightResult);\r\n        })\r\n    })\r\n\r\n    describe('.setHoles', () => {\r\n\r\n        let fieldGame;\r\n        beforeEach(() => {\r\n            fieldGame = new Field();\r\n        })\r\n        \r\n        it('throws an error if the field instance\\'s gameGrid property is undefined', () => {\r\n            //setup\r\n            fieldGame.gameGrid = undefined;\r\n\r\n            //exercise\r\n            const result = () => fieldGame.setHoles();\r\n\r\n            //verify\r\n            assert.throws(result, /Game Grid must already be provided/);\r\n        })\r\n\r\n        it('correctly sets the field\\'s hole positions when called and a custom game field has been provided', () => {\r\n            //setup\r\n            fieldGame.gameGrid = [\r\n                ['*', '░', 'O'],\r\n                ['░', 'O', 'O'],\r\n                ['░', '^', 'O']\r\n            ];\r\n            const expectedHolePositions = [[0, 2], [1, 1], [1, 2], [2, 2]];\r\n\r\n            //exercise\r\n            fieldGame.setHoles();\r\n            const resultHolePositions = fieldGame.holes;\r\n            \r\n\r\n            //verify\r\n            assert.deepEqual(expectedHolePositions, resultHolePositions);\r\n        })\r\n    })\r\n\r\n    describe('populateRandomHoles', () => {\r\n\r\n        let fieldGame, field, percentageHoles;\r\n        beforeEach(() => {\r\n            fieldGame = new Field();\r\n            field = [\r\n                ['*', '░', '░'],\r\n                ['░', '░', '░'],\r\n                ['░', '░', '░'],\r\n                ['░', '░', '░'],\r\n                ['░', '░', '░'],\r\n                ['░', '^', '░']\r\n            ];\r\n            fieldGame.fieldHeight = field.length;\r\n            fieldGame.fieldWidth = field[0].length;\r\n            percentageHoles = 20;\r\n\r\n            \r\n        })\r\n        \r\n        it('accurately updates the instance\\'s holes property with [row, column] positions as it determines spots to be holes', () => {\r\n            //setup\r\n            percentageHoles = 20;\r\n            fieldGame.populateRandomHoles(field, percentageHoles);\r\n            const resultHolePositions = fieldGame.holes;\r\n            let testPass = true;\r\n\r\n            //exercise\r\n            for (let row = 0; row < field.length; row++) {\r\n                for (let column = 0; column < field[row].length; column++) {\r\n                    let stringifiedPosition = JSON.stringify([row, column]);\r\n                    if (field[row][column] === holeCharacter && !resultHolePositions.find((element) => JSON.stringify(element) === stringifiedPosition)) {\r\n                        testPass = false;\r\n                        break;\r\n                    } else if (field[row][column] !== holeCharacter && resultHolePositions.find((element) => JSON.stringify(element) === stringifiedPosition)) {\r\n                        testPass = false;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            \r\n            //verify\r\n            assert.ok(testPass);\r\n        })\r\n\r\n        it('sets an amount of holes equal to the floored percentage of holes allowed by the passed percentageHoles parameter', () => {\r\n            //setup\r\n            percentageHoles = 60;\r\n            fieldGame.populateRandomHoles(field, percentageHoles);\r\n            let resultNumberHoles = 0;\r\n            const expectedNumberHoles = Math.floor(((fieldGame.fieldHeight * fieldGame.fieldWidth) - 2) * (percentageHoles / 100)); //9\r\n\r\n            //exercise\r\n            for (let row = 0; row < field.length; row++) {\r\n                for (let column = 0; column < field[row].length; column++) {\r\n                    if (field[row][column] === holeCharacter) {\r\n                        resultNumberHoles++;\r\n                    }\r\n                }\r\n            }\r\n            \r\n            //verify\r\n            assert.deepEqual(resultNumberHoles, expectedNumberHoles);\r\n        })\r\n    })\r\n    \r\n    describe('.generateField', () => {\r\n\r\n        let fieldGame, fieldHeight, fieldWidth, percentageHoles, playerRandom;\r\n        beforeEach(() => {\r\n            fieldGame = new Field();\r\n            //give method arguments default values. Can reassign as necessary\r\n            fieldHeight = 10;\r\n            fieldWidth = 10;\r\n            percentageHoles = 20;\r\n            playerRandom = true;\r\n            hatRandom = true;\r\n        })\r\n\r\n        it('assigns the fieldWidth and fieldHeight arguments to be the fieldHeight and fieldWidth of the Field instance', () => {\r\n            //setup\r\n            fieldHeight = 10;\r\n            fieldWidth = 20;\r\n            const expectedHeight = fieldHeight;\r\n            const expectedWidth = fieldWidth;\r\n            //exercise\r\n            fieldGame.generateField(fieldHeight, fieldWidth, percentageHoles, playerRandom, hatRandom);\r\n            const heightResult = fieldGame.fieldHeight;\r\n            const widthResult = fieldGame.fieldWidth;\r\n            //verify\r\n            assert.strictEqual(heightResult, expectedHeight);\r\n            assert.strictEqual(widthResult, expectedWidth);\r\n        })\r\n\r\n        it('sets the player in a random starting position if \"playerRandom\" is set to true and sets path character in that starting position', () => {\r\n            //setup\r\n            playerRandom = true;\r\n            const defaultPlayerPosition = 0;\r\n            let potentialFailures = 0;\r\n            //exercise\r\n            for (let i = 0; i < 3; i++) {\r\n                //if resulting position is the default position 3 times, conclude randomization of player position is failing\r\n                fieldGame.gameGrid = fieldGame.generateField(fieldHeight, fieldWidth, percentageHoles, playerRandom, hatRandom);\r\n                let playerRowPositionResult = fieldGame.playerRowPosition;\r\n                let playerColumnPositionResult = fieldGame.playerColumnPosition;\r\n\r\n                if (playerRowPositionResult === defaultPlayerPosition && playerColumnPositionResult === defaultPlayerPosition) {\r\n                    potentialFailures++;\r\n                }\r\n\r\n            }\r\n\r\n            //verify\r\n            assert.ok(potentialFailures <= 3);\r\n            assert.strictEqual(fieldGame.gameGrid[fieldGame.playerRowPosition][fieldGame.playerColumnPosition], playerCharacter);\r\n        })\r\n\r\n        it('sets the player in the default starting position (top left) if \"playerRandom\" is set to false', () => {\r\n            //setup\r\n            playerRandom = false;\r\n            const defaultPlayerPosition = 0;\r\n            //exercise\r\n            fieldGame.gameGrid = fieldGame.generateField(fieldHeight, fieldWidth, percentageHoles, playerRandom, hatRandom);\r\n\r\n            //verify\r\n            assert.strictEqual(fieldGame.gameGrid[defaultPlayerPosition][defaultPlayerPosition], playerCharacter);\r\n        })\r\n\r\n        it('sets the hat in a random position if \"hatRandom\" is set to true and sets hat character in that position', () => {\r\n            //setup\r\n            hatRandom = true;\r\n            const defaultHatRowPosition = fieldHeight - 1;\r\n            const defaultHatColumnPosition = fieldWidth - 2;\r\n            let potentialFailures = 0;\r\n\r\n            //exercise\r\n            for (let i = 0; i < 3; i++) {\r\n                //if resulting position is the default position 3 times, conclude randomization of hat position is failing\r\n                fieldGame.gameGrid = fieldGame.generateField(fieldHeight, fieldWidth, percentageHoles, playerRandom, hatRandom);\r\n\r\n                if (fieldGame.hatRowPosition === defaultHatRowPosition && fieldGame.hatColumnPosition === defaultHatColumnPosition) {\r\n                    potentialFailures++;\r\n                }\r\n\r\n            }\r\n\r\n            //verify\r\n            assert.ok(potentialFailures <= 3);\r\n            assert.strictEqual(fieldGame.gameGrid[fieldGame.hatRowPosition][fieldGame.hatColumnPosition], hatCharacter);\r\n        })\r\n\r\n        it('never sets the hat and the player in the same position when \"hatRandom\" and \"playerRandom\" are set to true', () => {\r\n            //setup\r\n            hatRandom = true;\r\n            playerRandom = true;\r\n            fieldHeight = 2;\r\n            fieldWidth = 1;\r\n            let failure = false;\r\n            //exercise\r\n            for (let i = 0; i < 10; i++) {\r\n                fieldGame.generateField(fieldHeight, fieldWidth, percentageHoles, playerRandom, hatRandom);\r\n                 \r\n                if (fieldGame.hatRowPosition === fieldGame.playerRowPosition && fieldGame.hatColumnPosition === fieldGame.playerColumnPosition) {\r\n                    failure = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            //verify\r\n            assert.strictEqual(failure, false);\r\n        })\r\n\r\n        it('never sets the hat and the player in the same position when \"hatRandom\" is set to true and \"playerRandom\" is set to false', () => {\r\n            //setup\r\n            hatRandom = true;\r\n            playerRandom = false;\r\n            fieldHeight = 2;\r\n            fieldWidth = 1;\r\n            let failure = false;\r\n            let hatPosition = [];\r\n            //exercise\r\n            for (let i = 0; i < 10; i++) {\r\n                //if resulting position is the default position 3 times, conclude randomization of hat position is failing\r\n                fieldGame.gameGrid = fieldGame.generateField(fieldHeight, fieldWidth, percentageHoles, playerRandom, hatRandom);\r\n\r\n                 \r\n                if (fieldGame.hatRowPosition === fieldGame.playerRowPosition && fieldGame.hatColumnPosition === fieldGame.playerColumnPosition) {\r\n                    failure = true;\r\n                    break;\r\n                }\r\n\r\n            }\r\n\r\n            //verify\r\n            assert.strictEqual(failure, false);\r\n        })\r\n\r\n        it('sets the hat in the default position (second to last of bottom row) if \"hatRandom\" is set to false', () => {\r\n            //setup\r\n            hatRandom = false;\r\n            const defaultHatRowPosition = fieldHeight - 1;\r\n            const defaultHatColumnPosition = fieldWidth - 2;\r\n            //exercise\r\n            fieldGame.gameGrid = fieldGame.generateField(fieldHeight, fieldWidth, percentageHoles, playerRandom, hatRandom);\r\n\r\n            //verify\r\n            assert.strictEqual(fieldGame.gameGrid[defaultHatRowPosition][defaultHatColumnPosition], hatCharacter);\r\n            assert.strictEqual(fieldGame.hatRowPosition, defaultHatRowPosition);\r\n            assert.strictEqual(fieldGame.hatColumnPosition, defaultHatColumnPosition);\r\n        })\r\n\r\n        \r\n    })\r\n\r\n    describe('hideHoles', () => {\r\n        let fieldGame, fieldHeight, fieldWidth, percentageHoles, playerRandom, hatRandom;\r\n        beforeEach(() => {\r\n            fieldGame = new Field();\r\n\r\n            fieldHeight = 10;\r\n            fieldWidth = 10;\r\n            percentageHoles = 50;\r\n            playerRandom = true;\r\n            hatRandom = true;\r\n        })\r\n\r\n        it('hides all holes and only holes by replacing them with field characters', () => {\r\n            //setup\r\n            fieldGame.gameGrid = fieldGame.generateField(fieldHeight, fieldWidth, percentageHoles, playerRandom, hatRandom);\r\n            let expectedPlayerCount = 1;\r\n            let expectedHatCount = 1;\r\n            let expectedHoleCount = 0;\r\n\r\n            //exercise\r\n            fieldGame.hideHoles();\r\n            let resultPlayerCount = 0;\r\n            let resultHatCount = 0;\r\n            let resultHoleCount = 0;\r\n            for (let row of fieldGame.gameGrid) {\r\n                for (let column of row) {\r\n                    if (column === playerCharacter) resultPlayerCount++;\r\n                    if (column === hatCharacter) resultHatCount++;\r\n                    if (column === holeCharacter) resultHoleCount++;\r\n                }\r\n            }\r\n\r\n            //verify\r\n            assert.strictEqual(expectedPlayerCount, resultPlayerCount);\r\n            assert.strictEqual(expectedHatCount, resultHatCount);\r\n            assert.strictEqual(expectedHoleCount, resultHoleCount);\r\n\r\n        })\r\n\r\n\r\n\r\n        it('throws an error if called and no gameGrid has been defined', () => {\r\n            //setup\r\n            fieldGame.gameGrid = undefined;\r\n\r\n            //exercise\r\n            const result = () => fieldGame.hideHoles();\r\n\r\n            //verify\r\n            assert.throws(result, /Game Grid must already be provided/);\r\n        })\r\n    })\r\n\r\n    describe('move', () => {\r\n        \r\n        let fieldGame;\r\n        beforeEach(() => {\r\n            fieldGame = new Field();\r\n            fieldGame.gameGrid = [\r\n                ['░', '░', '░'],\r\n                ['░', '!', '░'],\r\n                ['░', '░', '░']\r\n            ];\r\n            fieldGame.setPlayerPosition();\r\n            fieldGame.setFieldDimensions();\r\n        })\r\n\r\n        it('moves the player character left one position when the direction parameter is \"a\" and leaves a path character in the previous position', () => {\r\n            //setup\r\n            const expectedPlayerPosition = [1, 0];\r\n            const expectedPathPosition = [1, 1];\r\n            \r\n\r\n            //exercise\r\n            fieldGame.move('a');\r\n            const resultPlayerPosition = [fieldGame.playerRowPosition, fieldGame.playerColumnPosition];\r\n            const resultPathPosition = [];\r\n            for (let row = 0; row < fieldGame.gameGrid.length; row++) {\r\n                for (let column = 0; column < fieldGame.gameGrid[row].length; column++) {\r\n                    if (fieldGame.gameGrid[row][column] === pathCharacter) {\r\n                        [resultPathPosition[0], resultPathPosition[1]] = [row, column];\r\n                    }\r\n                }\r\n            }\r\n\r\n            //verify\r\n            assert.deepEqual(expectedPlayerPosition, resultPlayerPosition);\r\n            assert.deepEqual(expectedPathPosition, resultPathPosition);\r\n        })\r\n\r\n        it('moves the player character right one position when the direction parameter is \"d\" and leaves a path character in the previous position', () => {\r\n            //setup\r\n            const expectedPlayerPosition = [1, 2];\r\n            const expectedPathPosition = [1, 1];\r\n            \r\n\r\n            //exercise\r\n            fieldGame.move('d');\r\n            const resultPlayerPosition = [fieldGame.playerRowPosition, fieldGame.playerColumnPosition];\r\n            const resultPathPosition = [];\r\n            for (let row = 0; row < fieldGame.gameGrid.length; row++) {\r\n                for (let column = 0; column < fieldGame.gameGrid[row].length; column++) {\r\n                    if (fieldGame.gameGrid[row][column] === pathCharacter) {\r\n                        [resultPathPosition[0], resultPathPosition[1]] = [row, column];\r\n                    }\r\n                }\r\n            }\r\n\r\n            //verify\r\n            assert.deepEqual(expectedPlayerPosition, resultPlayerPosition);\r\n            assert.deepEqual(expectedPathPosition, resultPathPosition);\r\n        })\r\n\r\n        it('moves the player character up one position when the direction parameter is \"w\" and leaves a path character in the previous position', () => {\r\n            //setup\r\n            const expectedPlayerPosition = [0, 1];\r\n            const expectedPathPosition = [1, 1];\r\n            \r\n\r\n            //exercise\r\n            fieldGame.move('w');\r\n            const resultPlayerPosition = [fieldGame.playerRowPosition, fieldGame.playerColumnPosition];\r\n            const resultPathPosition = [];\r\n            for (let row = 0; row < fieldGame.gameGrid.length; row++) {\r\n                for (let column = 0; column < fieldGame.gameGrid[row].length; column++) {\r\n                    if (fieldGame.gameGrid[row][column] === pathCharacter) {\r\n                        [resultPathPosition[0], resultPathPosition[1]] = [row, column];\r\n                    }\r\n                }\r\n            }\r\n\r\n            //verify\r\n            assert.deepEqual(expectedPlayerPosition, resultPlayerPosition);\r\n            assert.deepEqual(expectedPathPosition, resultPathPosition);\r\n        })\r\n\r\n        it('moves the player character down one position when the direction parameter is \"s\" and leaves a path character in the previous position', () => {\r\n            //setup\r\n            const expectedPlayerPosition = [2, 1];\r\n            const expectedPathPosition = [1, 1];\r\n            \r\n\r\n            //exercise\r\n            fieldGame.move('s');\r\n            const resultPlayerPosition = [fieldGame.playerRowPosition, fieldGame.playerColumnPosition];\r\n            const resultPathPosition = [];\r\n            for (let row = 0; row < fieldGame.gameGrid.length; row++) {\r\n                for (let column = 0; column < fieldGame.gameGrid[row].length; column++) {\r\n                    if (fieldGame.gameGrid[row][column] === pathCharacter) {\r\n                        [resultPathPosition[0], resultPathPosition[1]] = [row, column];\r\n                    }\r\n                }\r\n            }\r\n\r\n            //verify\r\n            assert.deepEqual(expectedPlayerPosition, resultPlayerPosition);\r\n            assert.deepEqual(expectedPathPosition, resultPathPosition);\r\n        })\r\n        \r\n        it('it does not move the character if the direction parameter is not a valid WASD input', () => {\r\n            //setup\r\n            const expectedPlayerPosition = [1, 1];\r\n            const expectedPathCount = 0;\r\n            \r\n\r\n            //exercise\r\n            fieldGame.move('invalid input');\r\n            const resultPlayerPosition = [fieldGame.playerRowPosition, fieldGame.playerColumnPosition];\r\n            const resultPathCount = 0;\r\n            for (let row = 0; row < fieldGame.gameGrid.length; row++) {\r\n                for (let column = 0; column < fieldGame.gameGrid[row].length; column++) {\r\n                    if (fieldGame.gameGrid[row][column] === pathCharacter) {\r\n                        resultPathCount = 1;\r\n                    }\r\n                }\r\n            }\r\n\r\n            //verify\r\n            assert.deepEqual(expectedPlayerPosition, resultPlayerPosition);\r\n            assert.strictEqual(expectedPathCount, resultPathCount);\r\n        })\r\n        \r\n\r\n        it('throws an error if gameGrid has not been defined yet', () => {\r\n            //setup\r\n            fieldGame.gameGrid = undefined;\r\n\r\n            //exercise\r\n            const result = () => fieldGame.move();\r\n\r\n            //verify\r\n            assert.throws(result, /This method cannot be used until a game grid has been provided/);\r\n        })\r\n    })\r\n\r\n    describe('moveLeft', () => {\r\n\r\n        let fieldGame;\r\n        beforeEach(() => {\r\n            fieldGame = new Field();\r\n            fieldGame.gameGrid = [\r\n                ['░', '░', '░'],\r\n                ['░', playerCharacter, '░'],\r\n                ['░', '░', '░']\r\n            ];\r\n            fieldGame.setPlayerPosition();\r\n            fieldGame.setFieldDimensions();\r\n        })\r\n\r\n        it('moves the player down one position and leaves a path character in previous position', () => {\r\n            //setup\r\n            const expectedPlayerPosition = [1, 0];\r\n            const expectedPathPosition = [1, 1];\r\n            \r\n\r\n            //exercise\r\n            fieldGame.moveLeft();\r\n            const resultPlayerPosition = [fieldGame.playerRowPosition, fieldGame.playerColumnPosition];\r\n            const resultPathPosition = [];\r\n            for (let row = 0; row < fieldGame.gameGrid.length; row++) {\r\n                for (let column = 0; column < fieldGame.gameGrid[row].length; column++) {\r\n                    if (fieldGame.gameGrid[row][column] === pathCharacter) {\r\n                        [resultPathPosition[0], resultPathPosition[1]] = [row, column];\r\n                    }\r\n                }\r\n            }\r\n\r\n            //verify\r\n            assert.deepEqual(expectedPlayerPosition, resultPlayerPosition);\r\n            assert.deepEqual(expectedPathPosition, resultPathPosition);\r\n        })\r\n\r\n        it('ends the game and does not move the player\\'s position left if the new position satisfies game\\'s end conditions', () => {\r\n            //setup\r\n            fieldGame.gameGrid[1][0] = holeCharacter;\r\n            fieldGame.setHoles();\r\n            const expectedPlayerPosition = [1, 1];\r\n\r\n            //exercise\r\n            fieldGame.moveLeft();\r\n            const resultPlayerPosition = [fieldGame.playerRowPosition, fieldGame.playerColumnPosition];\r\n\r\n            //verify\r\n            assert.deepEqual(expectedPlayerPosition, resultPlayerPosition);\r\n        })\r\n\r\n        it('throws an error if gameGrid has not been defined yet', () => {\r\n            //setup\r\n            fieldGame.gameGrid = undefined;\r\n\r\n            //exercise\r\n            const result = () => fieldGame.moveLeft();\r\n\r\n            //verify\r\n            assert.throws(result, /This method cannot be used until a game grid has been provided/);\r\n        })\r\n    })\r\n\r\n    describe('moveRight', () => {\r\n\r\n        let fieldGame;\r\n        beforeEach(() => {\r\n            fieldGame = new Field();\r\n            fieldGame.gameGrid = [\r\n                ['░', '░', '░'],\r\n                ['░', playerCharacter, '░'],\r\n                ['░', '░', '░']\r\n            ];\r\n            fieldGame.setPlayerPosition();\r\n            fieldGame.setFieldDimensions();\r\n        })\r\n\r\n        it('moves the player right one position and leaves a path character in previous position', () => {\r\n            //setup\r\n            const expectedPlayerPosition = [1, 2];\r\n            const expectedPathPosition = [1, 1];\r\n            \r\n\r\n            //exercise\r\n            fieldGame.moveRight();\r\n            const resultPlayerPosition = [fieldGame.playerRowPosition, fieldGame.playerColumnPosition];\r\n            const resultPathPosition = [];\r\n            for (let row = 0; row < fieldGame.gameGrid.length; row++) {\r\n                for (let column = 0; column < fieldGame.gameGrid[row].length; column++) {\r\n                    if (fieldGame.gameGrid[row][column] === pathCharacter) {\r\n                        [resultPathPosition[0], resultPathPosition[1]] = [row, column];\r\n                    }\r\n                }\r\n            }\r\n            \r\n            //verify\r\n            assert.deepEqual(expectedPlayerPosition, resultPlayerPosition);\r\n            assert.deepEqual(expectedPathPosition, resultPathPosition);\r\n        })\r\n\r\n        it('ends the game and does not move the player\\'s position right if the new position satisfies game\\'s end conditions', () => {\r\n            //setup\r\n            fieldGame.gameGrid[1][2] = hatCharacter;\r\n            fieldGame.setHatPosition();\r\n            const expectedPlayerPosition = [1, 1];\r\n\r\n            //exercise\r\n            fieldGame.moveRight();\r\n            const resultPlayerPosition = [fieldGame.playerRowPosition, fieldGame.playerColumnPosition];\r\n\r\n            //verify\r\n            assert.deepEqual(expectedPlayerPosition, resultPlayerPosition);\r\n        })\r\n\r\n        it('throws an error if gameGrid has not been defined yet', () => {\r\n            //setup\r\n            fieldGame.gameGrid = undefined;\r\n\r\n            //exercise\r\n            const result = () => fieldGame.moveRight();\r\n\r\n            //verify\r\n            assert.throws(result, /This method cannot be used until a game grid has been provided/);\r\n        })\r\n    })\r\n\r\n    describe('moveUp', () => {\r\n\r\n        let fieldGame;\r\n        beforeEach(() => {\r\n            fieldGame = new Field();\r\n            fieldGame.gameGrid = [\r\n                ['░', '░', '░'],\r\n                ['░', playerCharacter, '░'],\r\n                ['░', '░', '░']\r\n            ];\r\n            fieldGame.setPlayerPosition();\r\n            fieldGame.setFieldDimensions();\r\n        })\r\n\r\n        it('moves the player down up position and leaves a path character in previous position', () => {\r\n            //setup\r\n            const expectedPlayerPosition = [0, 1];\r\n            const expectedPathPosition = [1, 1];\r\n            \r\n\r\n            //exercise\r\n            fieldGame.moveUp();\r\n            const resultPlayerPosition = [fieldGame.playerRowPosition, fieldGame.playerColumnPosition];\r\n            const resultPathPosition = [];\r\n            for (let row = 0; row < fieldGame.gameGrid.length; row++) {\r\n                for (let column = 0; column < fieldGame.gameGrid[row].length; column++) {\r\n                    if (fieldGame.gameGrid[row][column] === pathCharacter) {\r\n                        [resultPathPosition[0], resultPathPosition[1]] = [row, column];\r\n                    }\r\n                }\r\n            }\r\n\r\n            //verify\r\n            assert.deepEqual(expectedPlayerPosition, resultPlayerPosition);\r\n            assert.deepEqual(expectedPathPosition, resultPathPosition);\r\n        })\r\n\r\n        it('ends the game and does not move the player\\'s position up if the new position satisfies game\\'s end conditions', () => {\r\n            //setup\r\n            fieldGame.gameGrid[0][1] = hatCharacter;\r\n            fieldGame.setHatPosition();\r\n            const expectedPlayerPosition = [1, 1];\r\n\r\n            //exercise\r\n            fieldGame.moveUp();\r\n            const resultPlayerPosition = [fieldGame.playerRowPosition, fieldGame.playerColumnPosition];\r\n\r\n            //verify\r\n            assert.deepEqual(expectedPlayerPosition, resultPlayerPosition);\r\n        })\r\n\r\n        it('throws an error if gameGrid has not been defined yet', () => {\r\n            //setup\r\n            fieldGame.gameGrid = undefined;\r\n\r\n            //exercise\r\n            const result = () => fieldGame.moveUp();\r\n\r\n            //verify\r\n            assert.throws(result, /This method cannot be used until a game grid has been provided/);\r\n        })\r\n    })\r\n\r\n    describe('moveDown', () => {\r\n\r\n        let fieldGame;\r\n        beforeEach(() => {\r\n            fieldGame = new Field();\r\n            fieldGame.gameGrid = [\r\n                ['░', '░', '░'],\r\n                ['░', playerCharacter, '░'],\r\n                ['░', '░', '░']\r\n            ];\r\n            fieldGame.setPlayerPosition();\r\n            fieldGame.setFieldDimensions();\r\n        })\r\n\r\n        it('moves the player down one position and leaves a path character in previous position', () => {\r\n            //setup\r\n            const expectedPlayerPosition = [2, 1];\r\n            const expectedPathPosition = [1, 1];\r\n            \r\n\r\n            //exercise\r\n            fieldGame.moveDown();\r\n            const resultPlayerPosition = [fieldGame.playerRowPosition, fieldGame.playerColumnPosition];\r\n            const resultPathPosition = [];\r\n            for (let row = 0; row < fieldGame.gameGrid.length; row++) {\r\n                for (let column = 0; column < fieldGame.gameGrid[row].length; column++) {\r\n                    if (fieldGame.gameGrid[row][column] === pathCharacter) {\r\n                        [resultPathPosition[0], resultPathPosition[1]] = [row, column];\r\n                    }\r\n                }\r\n            }\r\n\r\n            //verify\r\n            assert.deepEqual(expectedPlayerPosition, resultPlayerPosition);\r\n            assert.deepEqual(expectedPathPosition, resultPathPosition);\r\n        })\r\n\r\n        it('ends the game and does not move the player\\'s position down if the new position satisfies game\\'s end conditions', () => {\r\n            //setup\r\n            const expectedPlayerPosition = [2, 1];\r\n\r\n            //exercise\r\n            fieldGame.moveDown();\r\n            fieldGame.moveDown();\r\n            const resultPlayerPosition = [fieldGame.playerRowPosition, fieldGame.playerColumnPosition];\r\n\r\n            //verify\r\n            assert.deepEqual(expectedPlayerPosition, resultPlayerPosition);\r\n        })\r\n\r\n        it('throws an error if gameGrid has not been defined yet', () => {\r\n            //setup\r\n            fieldGame.gameGrid = undefined;\r\n\r\n            //exercise\r\n            const result = () => fieldGame.moveDown();\r\n\r\n            //verify\r\n            assert.throws(result, /This method cannot be used until a game grid has been provided/);\r\n        })\r\n    })\r\n\r\n    describe('meetsEndConditions', () => {\r\n\r\n        let fieldGame, outOfBoundsPosition, hatPosition, holePosition, safePosition;\r\n        beforeEach(() => {\r\n            fieldGame = new Field();\r\n            fieldGame.gameGrid = [\r\n                ['░', '░', '░'],\r\n                ['░', '░', hatCharacter],\r\n                ['░', '░', holeCharacter]\r\n            ];\r\n            fieldGame.setFieldDimensions();\r\n            fieldGame.setHoles();\r\n            fieldGame.setHatPosition();\r\n            fieldGame.gameActive = true;\r\n\r\n            outOfBoundsPosition = [0, 4];\r\n            hatPosition = [1, 3];\r\n            holePosition = [2, 3];\r\n            safePosition = [0, 0];\r\n        })\r\n\r\n        it('returns true if newPosition parameter is out of the game map\\'s bounds and calls gameOver to end the game', () => {\r\n            //setup\r\n            const newPosition = outOfBoundsPosition;\r\n            const expectedResult = true;\r\n\r\n            //exercise\r\n            const actualResult = fieldGame.meetsEndConditions(newPosition);\r\n\r\n            //verify\r\n            assert.strictEqual(expectedResult, actualResult);\r\n            assert.strictEqual(fieldGame.gameActive, false);\r\n        })\r\n\r\n        it('returns true if newPosition parameter is the hat location and calls gameOver to end the game', () => {\r\n            //setup\r\n            const newPosition = hatPosition;\r\n            const expectedResult = true;\r\n\r\n            //exercise\r\n            const actualResult = fieldGame.meetsEndConditions(newPosition);\r\n\r\n            //verify\r\n            assert.strictEqual(expectedResult, actualResult);\r\n            assert.strictEqual(fieldGame.gameActive, false);\r\n        })\r\n\r\n        it('returns true if newPosition parameter is a hole location and calls gameOver to end the game', () => {\r\n            //setup\r\n            const newPosition = holePosition;\r\n            const expectedResult = true;\r\n\r\n            //exercise\r\n            const actualResult = fieldGame.meetsEndConditions(newPosition);\r\n\r\n            //verify\r\n            assert.strictEqual(expectedResult, actualResult);\r\n            assert.strictEqual(fieldGame.gameActive, false);\r\n        })\r\n\r\n        it('returns false if newPosition parameter does not meet end conditions and does not call gameOver to end the game', () => {\r\n            //setup\r\n            const newPosition = safePosition;\r\n            const expectedResult = false;\r\n\r\n            //exercise\r\n            const actualResult = fieldGame.meetsEndConditions(newPosition);\r\n\r\n            //verify\r\n            assert.strictEqual(expectedResult, actualResult);\r\n            assert.strictEqual(fieldGame.gameActive, true);\r\n        })\r\n\r\n        it('throws an error if gameGrid has not been defined yet', () => {\r\n            //setup\r\n            fieldGame.gameGrid = undefined;\r\n\r\n            //exercise\r\n            const result = () => fieldGame.meetsEndConditions();\r\n\r\n            //verify\r\n            assert.throws(result, /This method cannot be used until a game grid has been provided/);\r\n        })\r\n    })\r\n\r\n    describe('gameOver', () => {\r\n\r\n        let fieldGame, gameOverReason, consoleSpy;\r\n        beforeEach(() => {\r\n            fieldGame = new Field();\r\n            fieldGame.gameActive = true;\r\n\r\n            gameOverReason = {\r\n                OutOfBounds: 'out',\r\n                Win: 'win',\r\n                FellInHole: 'fell'\r\n            }\r\n        })\r\n\r\n        it('ends the game if \"out\" is the passed in gameOver reason and returns the reason', () => {\r\n            //setup\r\n            const gameOverArgument = gameOverReason.OutOfBounds;\r\n            const expectedGameActiveResult = false;\r\n            const expectedGameOverReturnReason = gameOverArgument;\r\n\r\n            //exercise\r\n            const actualGameOverReturnReason = fieldGame.gameOver(gameOverArgument);\r\n            const actualGameActiveResult = fieldGame.gameActive;\r\n\r\n            //verify\r\n            assert.equal(expectedGameActiveResult, actualGameActiveResult);\r\n            assert.equal(expectedGameOverReturnReason, actualGameOverReturnReason);\r\n        })\r\n\r\n        it('ends the game if \"win\" is the passed in gameOver reason and returns the reason', () => {\r\n            //setup\r\n            const gameOverArgument = gameOverReason.Win;\r\n            const expectedGameActiveResult = false;\r\n            const expectedGameOverReturnReason = gameOverArgument;\r\n\r\n            //exercise\r\n            const actualGameOverReturnReason = fieldGame.gameOver(gameOverArgument);\r\n            const actualGameActiveResult = fieldGame.gameActive;\r\n\r\n            //verify\r\n            assert.equal(expectedGameActiveResult, actualGameActiveResult);\r\n            assert.equal(expectedGameOverReturnReason, actualGameOverReturnReason);\r\n        })\r\n\r\n        it('ends the game if \"fell\" is the passed in gameOver reason and returns the reason', () => {\r\n            //setup\r\n            const gameOverArgument = gameOverReason.FellInHole;\r\n            const expectedGameActiveResult = false;\r\n            const expectedGameOverReturnReason = gameOverArgument;\r\n\r\n            //exercise\r\n            const actualGameOverReturnReason = fieldGame.gameOver(gameOverArgument);\r\n            const actualGameActiveResult = fieldGame.gameActive;\r\n\r\n            //verify\r\n            assert.equal(expectedGameActiveResult, actualGameActiveResult);\r\n            assert.equal(expectedGameOverReturnReason, actualGameOverReturnReason);\r\n        })\r\n    })\r\n})"],"mappings":"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","ignoreList":[]}},"mtime":1727733890554},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\dpett\\\\projects\\\\Find Your Hat\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\dpett\\\\projects\\\\Find Your Hat\",\"filename\":\"C:\\\\Users\\\\dpett\\\\projects\\\\Find Your Hat\\\\FieldClass.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\dpett\\\\projects\\\\Find Your Hat\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.25.2:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst isGameGridSolvable_1 = require(\"./ensureSolvableAlgorithm/isGameGridSolvable\");\nconst Character_1 = require(\"./enums/Character\");\nconst GameOverReason_1 = require(\"./enums/GameOverReason\");\nconst prompt = require('prompt-sync')({\n  sigint: true\n});\nclass Field {\n  constructor(gameGrid) {\n    this.gameGrid = gameGrid;\n    this.playerRowPosition = 0;\n    this.playerColumnPosition = 0;\n    this.hatRowPosition = this.fieldHeight - 1;\n    this.hatColumnPosition = this.fieldWidth - 2;\n    this.fieldHeight = 0;\n    this.fieldWidth = 0;\n    this.gameActive = false;\n    this.holes = [];\n    this.hardMode = false;\n    this.holesHidden = false;\n  }\n  //function for setting random position, to be used for player and hat in generateField\n  getRandomKeyPosition(fieldHeight, fieldWidth) {\n    if (fieldHeight < 1 || fieldWidth < 1) {\n      throw new Error('Height and width values cannot be less than 1!');\n    }\n    let row = Math.floor(Math.random() * fieldHeight);\n    let column = Math.floor(Math.random() * fieldWidth);\n    return [row, column];\n  }\n  setHatPosition() {\n    if (this.gameGrid === undefined) {\n      throw new Error('Game Grid must already be provided.');\n    }\n    for (let row = 0; row < this.gameGrid.length; row++) {\n      for (let column = 0; column < this.gameGrid[row].length; column++) {\n        if (this.gameGrid[row][column] === Character_1.default.Hat) {\n          [this.hatRowPosition, this.hatColumnPosition] = [row, column];\n          break;\n        }\n      }\n    }\n  }\n  setPlayerPosition() {\n    if (this.gameGrid === undefined) {\n      throw new Error('Game Grid must already be provided.');\n    }\n    for (let row = 0; row < this.gameGrid.length; row++) {\n      for (let column = 0; column < this.gameGrid[row].length; column++) {\n        if (this.gameGrid[row][column] === Character_1.default.Player) {\n          [this.playerRowPosition, this.playerColumnPosition] = [row, column];\n          break;\n        }\n      }\n    }\n  }\n  setFieldDimensions() {\n    if (this.gameGrid === undefined) {\n      throw new Error('Game Grid must already be provided.');\n    }\n    this.fieldHeight = this.gameGrid.length;\n    this.fieldWidth = this.gameGrid[0].length;\n  }\n  setHoles() {\n    if (this.gameGrid === undefined) {\n      throw new Error('Game Grid must already be provided.');\n    }\n    for (let row = 0; row < this.gameGrid.length; row++) {\n      for (let column = 0; column < this.gameGrid[row].length; column++) {\n        if (this.gameGrid[row][column] === Character_1.default.Hole) {\n          this.holes.push([row, column]);\n        }\n      }\n    }\n  }\n  populateRandomHoles(field, percentageHoles) {\n    //function that sets any given location to be a hole based on percentage chance\n    const setHole = percentageHoles => {\n      return Math.random() * 100 <= percentageHoles;\n    };\n    //ensure this.holes is empty to start out\n    this.holes = [];\n    //randomly select spots to be holes if spot is already field character\n    const allowedHoles = Math.floor((this.fieldHeight * this.fieldWidth - 2) * (percentageHoles / 100));\n    let holeCount = 0;\n    while (holeCount < allowedHoles) {\n      for (let row = 0; row < this.fieldHeight; row++) {\n        for (let column = 0; column < this.fieldWidth; column++) {\n          if (field[row][column] === Character_1.default.Field) {\n            if (setHole(percentageHoles)) {\n              field[row][column] = Character_1.default.Hole;\n              this.holes.push([row, column]);\n              holeCount++;\n              //ensure there are never more holes than the percentage allows\n              if (holeCount === allowedHoles) {\n                return;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  generateField(fieldHeight, fieldWidth, percentageHoles, playerRandom = false, hatRandom = false) {\n    let field;\n    this.fieldHeight = fieldHeight;\n    this.fieldWidth = fieldWidth;\n    let playerPosition;\n    do {\n      field = [];\n      //fill out field with predefined height and width and fill with fieldCharacter\n      for (let i = 0; i < fieldHeight; i++) {\n        field.push(new Array(fieldWidth).fill(Character_1.default.Field));\n      }\n      //set player position in random spot if playerRandom is true\n      if (playerRandom) [this.playerRowPosition, this.playerColumnPosition] = this.getRandomKeyPosition(fieldHeight, fieldWidth);\n      playerPosition = [this.playerRowPosition, this.playerColumnPosition];\n      field[this.playerRowPosition][this.playerColumnPosition] = Character_1.default.Player;\n      //set hat in random spot if hatRandom is true, making sure it's not same spot as player\n      if (hatRandom) {\n        do {\n          [this.hatRowPosition, this.hatColumnPosition] = this.getRandomKeyPosition(fieldHeight, fieldWidth);\n        } while (this.hatRowPosition === this.playerRowPosition && this.hatColumnPosition === this.playerColumnPosition);\n      } else {\n        [this.hatRowPosition, this.hatColumnPosition] = [fieldHeight - 1, fieldWidth - 2];\n      }\n      field[this.hatRowPosition][this.hatColumnPosition] = Character_1.default.Hat;\n      //set random holes up to allowed percentage\n      this.populateRandomHoles(field, percentageHoles);\n    } while (!this.gameGridSolvable(field, playerPosition));\n    return field;\n  }\n  gameGridSolvable(gameGrid, playerPosition) {\n    return (0, isGameGridSolvable_1.default)(gameGrid, playerPosition);\n  }\n  getUserFieldValues() {\n    let makeCustomField = prompt('Would you like to define values for a custom field? Enter \"y\" or \"n\" >> ');\n    switch (makeCustomField) {\n      case 'y':\n        let fieldHeight = Math.floor(Number(prompt('Enter an integer for the field height >> ')));\n        while (isNaN(fieldHeight) || fieldHeight < 2) {\n          fieldHeight = Math.floor(Number(prompt('Please enter a valid whole number greater than 1 >> ')));\n        }\n        let fieldWidth = Math.floor(Number(prompt('Enter an integer for the field width >> ')));\n        while (isNaN(fieldWidth) || fieldWidth < 2) {\n          fieldWidth = Math.floor(Number(prompt('Please enter a valid whole number greater than 1 >> ')));\n        }\n        let percentageHoles = Number(prompt('Enter an integer for the percentage of the field that will be holes >> '));\n        while (isNaN(percentageHoles)) {\n          percentageHoles = Number(prompt('Please enter a valid number >> '));\n        }\n        let playerRandom = prompt('Should the player\\'s starting location be random? Enter \"y\" or \"n\" >> ');\n        while (playerRandom !== 'y' && playerRandom !== 'n') {\n          playerRandom = prompt('Please enter \"y\" or \"n\" >> ');\n        }\n        playerRandom === 'y' ? playerRandom = true : playerRandom = false;\n        let hatRandom = prompt('Should the hat\\'s location be random? Enter \"y\" or \"n\" >> ');\n        while (hatRandom !== 'y' && hatRandom !== 'n') {\n          hatRandom = prompt('Please enter \"y\" or \"n\" >> ');\n        }\n        hatRandom === 'y' ? hatRandom = true : hatRandom = false;\n        this.gameGrid = this.generateField(fieldHeight, fieldWidth, percentageHoles, playerRandom, hatRandom);\n        break;\n      case 'n':\n        this.hardMode ? this.gameGrid = this.generateField(5, 10, 15) : this.gameGrid = this.generateField(10, 20, 15);\n        break;\n      default:\n        console.log('Invalid input. Starting game with predetermined field settings.');\n        this.hardMode ? this.gameGrid = this.generateField(5, 10, 15) : this.gameGrid = this.generateField(10, 20, 15);\n    }\n  }\n  playGame() {\n    let useProvidedField = prompt('Enter \"1\" to randomly generate a field, or \"2\" to use one in this file >> ');\n    switch (useProvidedField) {\n      case '1':\n        this.getUserFieldValues();\n        break;\n      case '2':\n        this.setFieldDimensions();\n        this.setHatPosition();\n        this.setPlayerPosition();\n        this.setHoles();\n        break;\n      default:\n        console.log('Invalid input. Using field in file.');\n        this.setFieldDimensions();\n        this.setHatPosition();\n        this.setPlayerPosition();\n        this.setHoles();\n    }\n    let hardMode = prompt('Hard mode? Enter \"y\" or \"n\" >> ');\n    if (hardMode === 'y') {\n      this.hardMode = true;\n      console.log('Game is set to Hard (holes are hidden after the first move).');\n    } else {\n      console.log('Game set to normal (holes are always visible).');\n    }\n    console.log(\"Select a WASD control and press enter to navigate the map and find your hat!\");\n    this.gameActive = true;\n    while (this.gameActive) {\n      this.playTurn();\n    }\n  }\n  printField() {\n    if (this.gameGrid === undefined) {\n      console.log('This method cannot be used until a game grid has been provided');\n      return;\n    }\n    for (let row of this.gameGrid) {\n      console.log(row.join(''));\n    }\n  }\n  printVictory() {\n    const victoryArray = [['*', '░', '*', '░', '░', '░', '░', '░', '░', '░', '*', '░', '░', '░', '░', '░', '░', '░', '░', '░', '░', '░', '░', '░'], ['*', '░', '*', '░', '░', '░', '░', '░', '░', '░', '*', '░', '░', '░', '░', '░', '░', '░', '░', '░', '░', '░', '░', '░'], ['*', '░', '*', '░', '░', '░', '░', '░', '░', '*', '*', '*', '░', '░', '░', '░', '░', '░', '░', '░', '░', '░', '░', '░'], ['*', '░', '*', '░', '*', '░', '░', '░', '░', '░', '*', '░', '░', '░', '░', '░', '░', '░', '░', '░', '░', '░', '░', '░'], ['*', '░', '*', '░', '░', '░', '░', '░', '░', '░', '*', '░', '░', '░', '░', '░', '░', '░', '░', '░', '░', '░', '░', '░'], ['*', '░', '*', '░', '*', '░', '*', '*', '*', '░', '*', '░', '*', '*', '*', '░', '*', '░', '░', '░', '*', '░', '*', '░'], ['*', '░', '*', '░', '*', '░', '*', '░', '░', '░', '*', '░', '*', '░', '*', '░', '*', '*', '*', '░', '*', '░', '*', '░'], ['*', '░', '*', '░', '*', '░', '*', '░', '░', '░', '*', '░', '*', '░', '*', '░', '*', '░', '*', '░', '*', '*', '*', '░'], ['*', '░', '*', '░', '*', '░', '*', '░', '░', '░', '*', '░', '*', '░', '*', '░', '*', '░', '░', '░', '░', '*', '░', '░'], ['░', '*', '░', '░', '*', '░', '*', '*', '*', '░', '*', '░', '*', '*', '*', '░', '*', '░', '░', '░', '░', '*', '░', '░']];\n    for (let row of victoryArray) {\n      console.log(row.join(''));\n    }\n  }\n  playTurn() {\n    this.printField();\n    if (this.hardMode && !this.holesHidden) {\n      this.hideHoles();\n    }\n    const direction = prompt('Which direction would you like to move? >> ');\n    this.move(direction);\n  }\n  //for use when this.hardMode is set to true\n  hideHoles() {\n    if (this.gameGrid === undefined) {\n      throw new Error('Game Grid must already be provided');\n    }\n    for (let [row, column] of this.holes) {\n      this.gameGrid[row][column] = Character_1.default.Field;\n    }\n    this.holesHidden = true;\n  }\n  move(direction) {\n    if (this.gameGrid === undefined) {\n      throw new Error('This method cannot be used until a game grid has been provided');\n    }\n    switch (direction) {\n      case 'a':\n        this.moveLeft();\n        break;\n      case 'd':\n        this.moveRight();\n        break;\n      case 'w':\n        this.moveUp();\n        break;\n      case 's':\n        this.moveDown();\n        break;\n      default:\n        console.log(\"Please enter a valid WASD control.\");\n    }\n  }\n  moveLeft() {\n    if (this.gameGrid === undefined) {\n      throw new Error('This method cannot be used until a game grid has been provided');\n    }\n    const newPosition = [this.playerRowPosition, this.playerColumnPosition - 1];\n    if (this.meetsEndConditions(newPosition)) {\n      return;\n    }\n    //set last position to path\n    this.gameGrid[this.playerRowPosition][this.playerColumnPosition] = Character_1.default.Path;\n    //set new position to player\n    this.playerColumnPosition -= 1;\n    this.gameGrid[this.playerRowPosition][this.playerColumnPosition] = Character_1.default.Player;\n  }\n  moveRight() {\n    if (this.gameGrid === undefined) {\n      throw new Error('This method cannot be used until a game grid has been provided');\n    }\n    const newPosition = [this.playerRowPosition, this.playerColumnPosition + 1];\n    if (this.meetsEndConditions(newPosition)) {\n      return;\n    }\n    this.gameGrid[this.playerRowPosition][this.playerColumnPosition] = Character_1.default.Path;\n    this.playerColumnPosition += 1;\n    this.gameGrid[this.playerRowPosition][this.playerColumnPosition] = Character_1.default.Player;\n  }\n  moveUp() {\n    if (this.gameGrid === undefined) {\n      throw new Error('This method cannot be used until a game grid has been provided');\n    }\n    const newPosition = [this.playerRowPosition - 1, this.playerColumnPosition];\n    if (this.meetsEndConditions(newPosition)) {\n      return;\n    }\n    this.gameGrid[this.playerRowPosition][this.playerColumnPosition] = Character_1.default.Path;\n    this.playerRowPosition -= 1;\n    this.gameGrid[this.playerRowPosition][this.playerColumnPosition] = Character_1.default.Player;\n  }\n  moveDown() {\n    if (this.gameGrid === undefined) {\n      throw new Error('This method cannot be used until a game grid has been provided');\n    }\n    const newPosition = [this.playerRowPosition + 1, this.playerColumnPosition];\n    if (this.meetsEndConditions(newPosition)) {\n      return;\n    }\n    this.gameGrid[this.playerRowPosition][this.playerColumnPosition] = Character_1.default.Path;\n    this.playerRowPosition += 1;\n    this.gameGrid[this.playerRowPosition][this.playerColumnPosition] = Character_1.default.Player;\n  }\n  meetsEndConditions(newPosition) {\n    if (this.gameGrid === undefined) {\n      throw new Error('This method cannot be used until a game grid has been provided');\n    }\n    let [newPositionRow, newPositionColumn] = newPosition;\n    let stringifiedPosition = JSON.stringify(newPosition);\n    if (newPositionRow < 0 || newPositionRow > this.fieldHeight - 1 || newPositionColumn < 0 || newPositionColumn > this.fieldWidth - 1) {\n      this.gameOver(GameOverReason_1.default.OutOfBounds);\n      return true;\n    } else if (this.gameGrid[newPositionRow][newPositionColumn] === Character_1.default.Hat) {\n      this.gameOver(GameOverReason_1.default.Win);\n      return true;\n    } else if (this.holes.find(element => JSON.stringify(element) === stringifiedPosition)) {\n      this.gameOver(GameOverReason_1.default.FellInHole);\n      return true;\n    } else {\n      return false;\n    }\n  }\n  gameOver(reason) {\n    switch (reason) {\n      case GameOverReason_1.default.OutOfBounds:\n        console.log('You went out of bounds! Game Over.');\n        this.gameActive = false;\n        return GameOverReason_1.default.OutOfBounds;\n      case GameOverReason_1.default.FellInHole:\n        console.log('You fell down a hole! Game Over.');\n        this.gameActive = false;\n        return GameOverReason_1.default.FellInHole;\n      default:\n        this.printVictory();\n        console.log('You found your hat! Thank God. Victory!');\n        this.gameActive = false;\n        return GameOverReason_1.default.Win;\n    }\n  }\n}\nmodule.exports.Field = Field;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImlzR2FtZUdyaWRTb2x2YWJsZV8xIiwicmVxdWlyZSIsIkNoYXJhY3Rlcl8xIiwiR2FtZU92ZXJSZWFzb25fMSIsInByb21wdCIsInNpZ2ludCIsIkZpZWxkIiwiY29uc3RydWN0b3IiLCJnYW1lR3JpZCIsInBsYXllclJvd1Bvc2l0aW9uIiwicGxheWVyQ29sdW1uUG9zaXRpb24iLCJoYXRSb3dQb3NpdGlvbiIsImZpZWxkSGVpZ2h0IiwiaGF0Q29sdW1uUG9zaXRpb24iLCJmaWVsZFdpZHRoIiwiZ2FtZUFjdGl2ZSIsImhvbGVzIiwiaGFyZE1vZGUiLCJob2xlc0hpZGRlbiIsImdldFJhbmRvbUtleVBvc2l0aW9uIiwiRXJyb3IiLCJyb3ciLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJjb2x1bW4iLCJzZXRIYXRQb3NpdGlvbiIsInVuZGVmaW5lZCIsImxlbmd0aCIsImRlZmF1bHQiLCJIYXQiLCJzZXRQbGF5ZXJQb3NpdGlvbiIsIlBsYXllciIsInNldEZpZWxkRGltZW5zaW9ucyIsInNldEhvbGVzIiwiSG9sZSIsInB1c2giLCJwb3B1bGF0ZVJhbmRvbUhvbGVzIiwiZmllbGQiLCJwZXJjZW50YWdlSG9sZXMiLCJzZXRIb2xlIiwiYWxsb3dlZEhvbGVzIiwiaG9sZUNvdW50IiwiZ2VuZXJhdGVGaWVsZCIsInBsYXllclJhbmRvbSIsImhhdFJhbmRvbSIsInBsYXllclBvc2l0aW9uIiwiaSIsIkFycmF5IiwiZmlsbCIsImdhbWVHcmlkU29sdmFibGUiLCJnZXRVc2VyRmllbGRWYWx1ZXMiLCJtYWtlQ3VzdG9tRmllbGQiLCJOdW1iZXIiLCJpc05hTiIsImNvbnNvbGUiLCJsb2ciLCJwbGF5R2FtZSIsInVzZVByb3ZpZGVkRmllbGQiLCJwbGF5VHVybiIsInByaW50RmllbGQiLCJqb2luIiwicHJpbnRWaWN0b3J5IiwidmljdG9yeUFycmF5IiwiaGlkZUhvbGVzIiwiZGlyZWN0aW9uIiwibW92ZSIsIm1vdmVMZWZ0IiwibW92ZVJpZ2h0IiwibW92ZVVwIiwibW92ZURvd24iLCJuZXdQb3NpdGlvbiIsIm1lZXRzRW5kQ29uZGl0aW9ucyIsIlBhdGgiLCJuZXdQb3NpdGlvblJvdyIsIm5ld1Bvc2l0aW9uQ29sdW1uIiwic3RyaW5naWZpZWRQb3NpdGlvbiIsIkpTT04iLCJzdHJpbmdpZnkiLCJnYW1lT3ZlciIsIk91dE9mQm91bmRzIiwiV2luIiwiZmluZCIsImVsZW1lbnQiLCJGZWxsSW5Ib2xlIiwicmVhc29uIiwibW9kdWxlIl0sInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGRwZXR0XFxwcm9qZWN0c1xcRmluZCBZb3VyIEhhdFxcIiwic291cmNlcyI6WyJGaWVsZENsYXNzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgaXNHYW1lR3JpZFNvbHZhYmxlXzEgPSByZXF1aXJlKFwiLi9lbnN1cmVTb2x2YWJsZUFsZ29yaXRobS9pc0dhbWVHcmlkU29sdmFibGVcIik7XG5jb25zdCBDaGFyYWN0ZXJfMSA9IHJlcXVpcmUoXCIuL2VudW1zL0NoYXJhY3RlclwiKTtcbmNvbnN0IEdhbWVPdmVyUmVhc29uXzEgPSByZXF1aXJlKFwiLi9lbnVtcy9HYW1lT3ZlclJlYXNvblwiKTtcbmNvbnN0IHByb21wdCA9IHJlcXVpcmUoJ3Byb21wdC1zeW5jJykoeyBzaWdpbnQ6IHRydWUgfSk7XG5jbGFzcyBGaWVsZCB7XG4gICAgY29uc3RydWN0b3IoZ2FtZUdyaWQpIHtcbiAgICAgICAgdGhpcy5nYW1lR3JpZCA9IGdhbWVHcmlkO1xuICAgICAgICB0aGlzLnBsYXllclJvd1Bvc2l0aW9uID0gMDtcbiAgICAgICAgdGhpcy5wbGF5ZXJDb2x1bW5Qb3NpdGlvbiA9IDA7XG4gICAgICAgIHRoaXMuaGF0Um93UG9zaXRpb24gPSB0aGlzLmZpZWxkSGVpZ2h0IC0gMTtcbiAgICAgICAgdGhpcy5oYXRDb2x1bW5Qb3NpdGlvbiA9IHRoaXMuZmllbGRXaWR0aCAtIDI7XG4gICAgICAgIHRoaXMuZmllbGRIZWlnaHQgPSAwO1xuICAgICAgICB0aGlzLmZpZWxkV2lkdGggPSAwO1xuICAgICAgICB0aGlzLmdhbWVBY3RpdmUgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5ob2xlcyA9IFtdO1xuICAgICAgICB0aGlzLmhhcmRNb2RlID0gZmFsc2U7XG4gICAgICAgIHRoaXMuaG9sZXNIaWRkZW4gPSBmYWxzZTtcbiAgICB9XG4gICAgLy9mdW5jdGlvbiBmb3Igc2V0dGluZyByYW5kb20gcG9zaXRpb24sIHRvIGJlIHVzZWQgZm9yIHBsYXllciBhbmQgaGF0IGluIGdlbmVyYXRlRmllbGRcbiAgICBnZXRSYW5kb21LZXlQb3NpdGlvbihmaWVsZEhlaWdodCwgZmllbGRXaWR0aCkge1xuICAgICAgICBpZiAoZmllbGRIZWlnaHQgPCAxIHx8IGZpZWxkV2lkdGggPCAxKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0hlaWdodCBhbmQgd2lkdGggdmFsdWVzIGNhbm5vdCBiZSBsZXNzIHRoYW4gMSEnKTtcbiAgICAgICAgfVxuICAgICAgICBsZXQgcm93ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogZmllbGRIZWlnaHQpO1xuICAgICAgICBsZXQgY29sdW1uID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogZmllbGRXaWR0aCk7XG4gICAgICAgIHJldHVybiBbcm93LCBjb2x1bW5dO1xuICAgIH1cbiAgICBzZXRIYXRQb3NpdGlvbigpIHtcbiAgICAgICAgaWYgKHRoaXMuZ2FtZUdyaWQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdHYW1lIEdyaWQgbXVzdCBhbHJlYWR5IGJlIHByb3ZpZGVkLicpO1xuICAgICAgICB9XG4gICAgICAgIGZvciAobGV0IHJvdyA9IDA7IHJvdyA8IHRoaXMuZ2FtZUdyaWQubGVuZ3RoOyByb3crKykge1xuICAgICAgICAgICAgZm9yIChsZXQgY29sdW1uID0gMDsgY29sdW1uIDwgdGhpcy5nYW1lR3JpZFtyb3ddLmxlbmd0aDsgY29sdW1uKyspIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5nYW1lR3JpZFtyb3ddW2NvbHVtbl0gPT09IENoYXJhY3Rlcl8xLmRlZmF1bHQuSGF0KSB7XG4gICAgICAgICAgICAgICAgICAgIFt0aGlzLmhhdFJvd1Bvc2l0aW9uLCB0aGlzLmhhdENvbHVtblBvc2l0aW9uXSA9IFtyb3csIGNvbHVtbl07XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBzZXRQbGF5ZXJQb3NpdGlvbigpIHtcbiAgICAgICAgaWYgKHRoaXMuZ2FtZUdyaWQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdHYW1lIEdyaWQgbXVzdCBhbHJlYWR5IGJlIHByb3ZpZGVkLicpO1xuICAgICAgICB9XG4gICAgICAgIGZvciAobGV0IHJvdyA9IDA7IHJvdyA8IHRoaXMuZ2FtZUdyaWQubGVuZ3RoOyByb3crKykge1xuICAgICAgICAgICAgZm9yIChsZXQgY29sdW1uID0gMDsgY29sdW1uIDwgdGhpcy5nYW1lR3JpZFtyb3ddLmxlbmd0aDsgY29sdW1uKyspIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5nYW1lR3JpZFtyb3ddW2NvbHVtbl0gPT09IENoYXJhY3Rlcl8xLmRlZmF1bHQuUGxheWVyKSB7XG4gICAgICAgICAgICAgICAgICAgIFt0aGlzLnBsYXllclJvd1Bvc2l0aW9uLCB0aGlzLnBsYXllckNvbHVtblBvc2l0aW9uXSA9IFtyb3csIGNvbHVtbl07XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBzZXRGaWVsZERpbWVuc2lvbnMoKSB7XG4gICAgICAgIGlmICh0aGlzLmdhbWVHcmlkID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignR2FtZSBHcmlkIG11c3QgYWxyZWFkeSBiZSBwcm92aWRlZC4nKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmZpZWxkSGVpZ2h0ID0gdGhpcy5nYW1lR3JpZC5sZW5ndGg7XG4gICAgICAgIHRoaXMuZmllbGRXaWR0aCA9IHRoaXMuZ2FtZUdyaWRbMF0ubGVuZ3RoO1xuICAgIH1cbiAgICBzZXRIb2xlcygpIHtcbiAgICAgICAgaWYgKHRoaXMuZ2FtZUdyaWQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdHYW1lIEdyaWQgbXVzdCBhbHJlYWR5IGJlIHByb3ZpZGVkLicpO1xuICAgICAgICB9XG4gICAgICAgIGZvciAobGV0IHJvdyA9IDA7IHJvdyA8IHRoaXMuZ2FtZUdyaWQubGVuZ3RoOyByb3crKykge1xuICAgICAgICAgICAgZm9yIChsZXQgY29sdW1uID0gMDsgY29sdW1uIDwgdGhpcy5nYW1lR3JpZFtyb3ddLmxlbmd0aDsgY29sdW1uKyspIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5nYW1lR3JpZFtyb3ddW2NvbHVtbl0gPT09IENoYXJhY3Rlcl8xLmRlZmF1bHQuSG9sZSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmhvbGVzLnB1c2goW3JvdywgY29sdW1uXSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHBvcHVsYXRlUmFuZG9tSG9sZXMoZmllbGQsIHBlcmNlbnRhZ2VIb2xlcykge1xuICAgICAgICAvL2Z1bmN0aW9uIHRoYXQgc2V0cyBhbnkgZ2l2ZW4gbG9jYXRpb24gdG8gYmUgYSBob2xlIGJhc2VkIG9uIHBlcmNlbnRhZ2UgY2hhbmNlXG4gICAgICAgIGNvbnN0IHNldEhvbGUgPSAocGVyY2VudGFnZUhvbGVzKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gTWF0aC5yYW5kb20oKSAqIDEwMCA8PSBwZXJjZW50YWdlSG9sZXM7XG4gICAgICAgIH07XG4gICAgICAgIC8vZW5zdXJlIHRoaXMuaG9sZXMgaXMgZW1wdHkgdG8gc3RhcnQgb3V0XG4gICAgICAgIHRoaXMuaG9sZXMgPSBbXTtcbiAgICAgICAgLy9yYW5kb21seSBzZWxlY3Qgc3BvdHMgdG8gYmUgaG9sZXMgaWYgc3BvdCBpcyBhbHJlYWR5IGZpZWxkIGNoYXJhY3RlclxuICAgICAgICBjb25zdCBhbGxvd2VkSG9sZXMgPSBNYXRoLmZsb29yKCgodGhpcy5maWVsZEhlaWdodCAqIHRoaXMuZmllbGRXaWR0aCkgLSAyKSAqIChwZXJjZW50YWdlSG9sZXMgLyAxMDApKTtcbiAgICAgICAgbGV0IGhvbGVDb3VudCA9IDA7XG4gICAgICAgIHdoaWxlIChob2xlQ291bnQgPCBhbGxvd2VkSG9sZXMpIHtcbiAgICAgICAgICAgIGZvciAobGV0IHJvdyA9IDA7IHJvdyA8IHRoaXMuZmllbGRIZWlnaHQ7IHJvdysrKSB7XG4gICAgICAgICAgICAgICAgZm9yIChsZXQgY29sdW1uID0gMDsgY29sdW1uIDwgdGhpcy5maWVsZFdpZHRoOyBjb2x1bW4rKykge1xuICAgICAgICAgICAgICAgICAgICBpZiAoZmllbGRbcm93XVtjb2x1bW5dID09PSBDaGFyYWN0ZXJfMS5kZWZhdWx0LkZpZWxkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoc2V0SG9sZShwZXJjZW50YWdlSG9sZXMpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmllbGRbcm93XVtjb2x1bW5dID0gQ2hhcmFjdGVyXzEuZGVmYXVsdC5Ib2xlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaG9sZXMucHVzaChbcm93LCBjb2x1bW5dKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBob2xlQ291bnQrKztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL2Vuc3VyZSB0aGVyZSBhcmUgbmV2ZXIgbW9yZSBob2xlcyB0aGFuIHRoZSBwZXJjZW50YWdlIGFsbG93c1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChob2xlQ291bnQgPT09IGFsbG93ZWRIb2xlcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGdlbmVyYXRlRmllbGQoZmllbGRIZWlnaHQsIGZpZWxkV2lkdGgsIHBlcmNlbnRhZ2VIb2xlcywgcGxheWVyUmFuZG9tID0gZmFsc2UsIGhhdFJhbmRvbSA9IGZhbHNlKSB7XG4gICAgICAgIGxldCBmaWVsZDtcbiAgICAgICAgdGhpcy5maWVsZEhlaWdodCA9IGZpZWxkSGVpZ2h0O1xuICAgICAgICB0aGlzLmZpZWxkV2lkdGggPSBmaWVsZFdpZHRoO1xuICAgICAgICBsZXQgcGxheWVyUG9zaXRpb247XG4gICAgICAgIGRvIHtcbiAgICAgICAgICAgIGZpZWxkID0gW107XG4gICAgICAgICAgICAvL2ZpbGwgb3V0IGZpZWxkIHdpdGggcHJlZGVmaW5lZCBoZWlnaHQgYW5kIHdpZHRoIGFuZCBmaWxsIHdpdGggZmllbGRDaGFyYWN0ZXJcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZmllbGRIZWlnaHQ7IGkrKykge1xuICAgICAgICAgICAgICAgIGZpZWxkLnB1c2gobmV3IEFycmF5KGZpZWxkV2lkdGgpLmZpbGwoQ2hhcmFjdGVyXzEuZGVmYXVsdC5GaWVsZCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy9zZXQgcGxheWVyIHBvc2l0aW9uIGluIHJhbmRvbSBzcG90IGlmIHBsYXllclJhbmRvbSBpcyB0cnVlXG4gICAgICAgICAgICBpZiAocGxheWVyUmFuZG9tKVxuICAgICAgICAgICAgICAgIFt0aGlzLnBsYXllclJvd1Bvc2l0aW9uLCB0aGlzLnBsYXllckNvbHVtblBvc2l0aW9uXSA9IHRoaXMuZ2V0UmFuZG9tS2V5UG9zaXRpb24oZmllbGRIZWlnaHQsIGZpZWxkV2lkdGgpO1xuICAgICAgICAgICAgcGxheWVyUG9zaXRpb24gPSBbdGhpcy5wbGF5ZXJSb3dQb3NpdGlvbiwgdGhpcy5wbGF5ZXJDb2x1bW5Qb3NpdGlvbl07XG4gICAgICAgICAgICBmaWVsZFt0aGlzLnBsYXllclJvd1Bvc2l0aW9uXVt0aGlzLnBsYXllckNvbHVtblBvc2l0aW9uXSA9IENoYXJhY3Rlcl8xLmRlZmF1bHQuUGxheWVyO1xuICAgICAgICAgICAgLy9zZXQgaGF0IGluIHJhbmRvbSBzcG90IGlmIGhhdFJhbmRvbSBpcyB0cnVlLCBtYWtpbmcgc3VyZSBpdCdzIG5vdCBzYW1lIHNwb3QgYXMgcGxheWVyXG4gICAgICAgICAgICBpZiAoaGF0UmFuZG9tKSB7XG4gICAgICAgICAgICAgICAgZG8ge1xuICAgICAgICAgICAgICAgICAgICBbdGhpcy5oYXRSb3dQb3NpdGlvbiwgdGhpcy5oYXRDb2x1bW5Qb3NpdGlvbl0gPSB0aGlzLmdldFJhbmRvbUtleVBvc2l0aW9uKGZpZWxkSGVpZ2h0LCBmaWVsZFdpZHRoKTtcbiAgICAgICAgICAgICAgICB9IHdoaWxlICh0aGlzLmhhdFJvd1Bvc2l0aW9uID09PSB0aGlzLnBsYXllclJvd1Bvc2l0aW9uICYmIHRoaXMuaGF0Q29sdW1uUG9zaXRpb24gPT09IHRoaXMucGxheWVyQ29sdW1uUG9zaXRpb24pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgW3RoaXMuaGF0Um93UG9zaXRpb24sIHRoaXMuaGF0Q29sdW1uUG9zaXRpb25dID0gW2ZpZWxkSGVpZ2h0IC0gMSwgZmllbGRXaWR0aCAtIDJdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZmllbGRbdGhpcy5oYXRSb3dQb3NpdGlvbl1bdGhpcy5oYXRDb2x1bW5Qb3NpdGlvbl0gPSBDaGFyYWN0ZXJfMS5kZWZhdWx0LkhhdDtcbiAgICAgICAgICAgIC8vc2V0IHJhbmRvbSBob2xlcyB1cCB0byBhbGxvd2VkIHBlcmNlbnRhZ2VcbiAgICAgICAgICAgIHRoaXMucG9wdWxhdGVSYW5kb21Ib2xlcyhmaWVsZCwgcGVyY2VudGFnZUhvbGVzKTtcbiAgICAgICAgfSB3aGlsZSAoIXRoaXMuZ2FtZUdyaWRTb2x2YWJsZShmaWVsZCwgcGxheWVyUG9zaXRpb24pKTtcbiAgICAgICAgcmV0dXJuIGZpZWxkO1xuICAgIH1cbiAgICBnYW1lR3JpZFNvbHZhYmxlKGdhbWVHcmlkLCBwbGF5ZXJQb3NpdGlvbikge1xuICAgICAgICByZXR1cm4gKDAsIGlzR2FtZUdyaWRTb2x2YWJsZV8xLmRlZmF1bHQpKGdhbWVHcmlkLCBwbGF5ZXJQb3NpdGlvbik7XG4gICAgfVxuICAgIGdldFVzZXJGaWVsZFZhbHVlcygpIHtcbiAgICAgICAgbGV0IG1ha2VDdXN0b21GaWVsZCA9IHByb21wdCgnV291bGQgeW91IGxpa2UgdG8gZGVmaW5lIHZhbHVlcyBmb3IgYSBjdXN0b20gZmllbGQ/IEVudGVyIFwieVwiIG9yIFwiblwiID4+ICcpO1xuICAgICAgICBzd2l0Y2ggKG1ha2VDdXN0b21GaWVsZCkge1xuICAgICAgICAgICAgY2FzZSAneSc6XG4gICAgICAgICAgICAgICAgbGV0IGZpZWxkSGVpZ2h0ID0gTWF0aC5mbG9vcihOdW1iZXIocHJvbXB0KCdFbnRlciBhbiBpbnRlZ2VyIGZvciB0aGUgZmllbGQgaGVpZ2h0ID4+ICcpKSk7XG4gICAgICAgICAgICAgICAgd2hpbGUgKGlzTmFOKGZpZWxkSGVpZ2h0KSB8fCBmaWVsZEhlaWdodCA8IDIpIHtcbiAgICAgICAgICAgICAgICAgICAgZmllbGRIZWlnaHQgPSBNYXRoLmZsb29yKE51bWJlcihwcm9tcHQoJ1BsZWFzZSBlbnRlciBhIHZhbGlkIHdob2xlIG51bWJlciBncmVhdGVyIHRoYW4gMSA+PiAnKSkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBsZXQgZmllbGRXaWR0aCA9IE1hdGguZmxvb3IoTnVtYmVyKHByb21wdCgnRW50ZXIgYW4gaW50ZWdlciBmb3IgdGhlIGZpZWxkIHdpZHRoID4+ICcpKSk7XG4gICAgICAgICAgICAgICAgd2hpbGUgKGlzTmFOKGZpZWxkV2lkdGgpIHx8IGZpZWxkV2lkdGggPCAyKSB7XG4gICAgICAgICAgICAgICAgICAgIGZpZWxkV2lkdGggPSBNYXRoLmZsb29yKE51bWJlcihwcm9tcHQoJ1BsZWFzZSBlbnRlciBhIHZhbGlkIHdob2xlIG51bWJlciBncmVhdGVyIHRoYW4gMSA+PiAnKSkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBsZXQgcGVyY2VudGFnZUhvbGVzID0gTnVtYmVyKHByb21wdCgnRW50ZXIgYW4gaW50ZWdlciBmb3IgdGhlIHBlcmNlbnRhZ2Ugb2YgdGhlIGZpZWxkIHRoYXQgd2lsbCBiZSBob2xlcyA+PiAnKSk7XG4gICAgICAgICAgICAgICAgd2hpbGUgKGlzTmFOKHBlcmNlbnRhZ2VIb2xlcykpIHtcbiAgICAgICAgICAgICAgICAgICAgcGVyY2VudGFnZUhvbGVzID0gTnVtYmVyKHByb21wdCgnUGxlYXNlIGVudGVyIGEgdmFsaWQgbnVtYmVyID4+ICcpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgbGV0IHBsYXllclJhbmRvbSA9IHByb21wdCgnU2hvdWxkIHRoZSBwbGF5ZXJcXCdzIHN0YXJ0aW5nIGxvY2F0aW9uIGJlIHJhbmRvbT8gRW50ZXIgXCJ5XCIgb3IgXCJuXCIgPj4gJyk7XG4gICAgICAgICAgICAgICAgd2hpbGUgKHBsYXllclJhbmRvbSAhPT0gJ3knICYmIHBsYXllclJhbmRvbSAhPT0gJ24nKSB7XG4gICAgICAgICAgICAgICAgICAgIHBsYXllclJhbmRvbSA9IHByb21wdCgnUGxlYXNlIGVudGVyIFwieVwiIG9yIFwiblwiID4+ICcpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBwbGF5ZXJSYW5kb20gPT09ICd5JyA/IHBsYXllclJhbmRvbSA9IHRydWUgOiBwbGF5ZXJSYW5kb20gPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBsZXQgaGF0UmFuZG9tID0gcHJvbXB0KCdTaG91bGQgdGhlIGhhdFxcJ3MgbG9jYXRpb24gYmUgcmFuZG9tPyBFbnRlciBcInlcIiBvciBcIm5cIiA+PiAnKTtcbiAgICAgICAgICAgICAgICB3aGlsZSAoaGF0UmFuZG9tICE9PSAneScgJiYgaGF0UmFuZG9tICE9PSAnbicpIHtcbiAgICAgICAgICAgICAgICAgICAgaGF0UmFuZG9tID0gcHJvbXB0KCdQbGVhc2UgZW50ZXIgXCJ5XCIgb3IgXCJuXCIgPj4gJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGhhdFJhbmRvbSA9PT0gJ3knID8gaGF0UmFuZG9tID0gdHJ1ZSA6IGhhdFJhbmRvbSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHRoaXMuZ2FtZUdyaWQgPSB0aGlzLmdlbmVyYXRlRmllbGQoZmllbGRIZWlnaHQsIGZpZWxkV2lkdGgsIHBlcmNlbnRhZ2VIb2xlcywgcGxheWVyUmFuZG9tLCBoYXRSYW5kb20pO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnbic6XG4gICAgICAgICAgICAgICAgdGhpcy5oYXJkTW9kZSA/IHRoaXMuZ2FtZUdyaWQgPSB0aGlzLmdlbmVyYXRlRmllbGQoNSwgMTAsIDE1KSA6IHRoaXMuZ2FtZUdyaWQgPSB0aGlzLmdlbmVyYXRlRmllbGQoMTAsIDIwLCAxNSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdJbnZhbGlkIGlucHV0LiBTdGFydGluZyBnYW1lIHdpdGggcHJlZGV0ZXJtaW5lZCBmaWVsZCBzZXR0aW5ncy4nKTtcbiAgICAgICAgICAgICAgICB0aGlzLmhhcmRNb2RlID8gdGhpcy5nYW1lR3JpZCA9IHRoaXMuZ2VuZXJhdGVGaWVsZCg1LCAxMCwgMTUpIDogdGhpcy5nYW1lR3JpZCA9IHRoaXMuZ2VuZXJhdGVGaWVsZCgxMCwgMjAsIDE1KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBwbGF5R2FtZSgpIHtcbiAgICAgICAgbGV0IHVzZVByb3ZpZGVkRmllbGQgPSBwcm9tcHQoJ0VudGVyIFwiMVwiIHRvIHJhbmRvbWx5IGdlbmVyYXRlIGEgZmllbGQsIG9yIFwiMlwiIHRvIHVzZSBvbmUgaW4gdGhpcyBmaWxlID4+ICcpO1xuICAgICAgICBzd2l0Y2ggKHVzZVByb3ZpZGVkRmllbGQpIHtcbiAgICAgICAgICAgIGNhc2UgJzEnOlxuICAgICAgICAgICAgICAgIHRoaXMuZ2V0VXNlckZpZWxkVmFsdWVzKCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICcyJzpcbiAgICAgICAgICAgICAgICB0aGlzLnNldEZpZWxkRGltZW5zaW9ucygpO1xuICAgICAgICAgICAgICAgIHRoaXMuc2V0SGF0UG9zaXRpb24oKTtcbiAgICAgICAgICAgICAgICB0aGlzLnNldFBsYXllclBvc2l0aW9uKCk7XG4gICAgICAgICAgICAgICAgdGhpcy5zZXRIb2xlcygpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnSW52YWxpZCBpbnB1dC4gVXNpbmcgZmllbGQgaW4gZmlsZS4nKTtcbiAgICAgICAgICAgICAgICB0aGlzLnNldEZpZWxkRGltZW5zaW9ucygpO1xuICAgICAgICAgICAgICAgIHRoaXMuc2V0SGF0UG9zaXRpb24oKTtcbiAgICAgICAgICAgICAgICB0aGlzLnNldFBsYXllclBvc2l0aW9uKCk7XG4gICAgICAgICAgICAgICAgdGhpcy5zZXRIb2xlcygpO1xuICAgICAgICB9XG4gICAgICAgIGxldCBoYXJkTW9kZSA9IHByb21wdCgnSGFyZCBtb2RlPyBFbnRlciBcInlcIiBvciBcIm5cIiA+PiAnKTtcbiAgICAgICAgaWYgKGhhcmRNb2RlID09PSAneScpIHtcbiAgICAgICAgICAgIHRoaXMuaGFyZE1vZGUgPSB0cnVlO1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ0dhbWUgaXMgc2V0IHRvIEhhcmQgKGhvbGVzIGFyZSBoaWRkZW4gYWZ0ZXIgdGhlIGZpcnN0IG1vdmUpLicpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ0dhbWUgc2V0IHRvIG5vcm1hbCAoaG9sZXMgYXJlIGFsd2F5cyB2aXNpYmxlKS4nKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zb2xlLmxvZyhcIlNlbGVjdCBhIFdBU0QgY29udHJvbCBhbmQgcHJlc3MgZW50ZXIgdG8gbmF2aWdhdGUgdGhlIG1hcCBhbmQgZmluZCB5b3VyIGhhdCFcIik7XG4gICAgICAgIHRoaXMuZ2FtZUFjdGl2ZSA9IHRydWU7XG4gICAgICAgIHdoaWxlICh0aGlzLmdhbWVBY3RpdmUpIHtcbiAgICAgICAgICAgIHRoaXMucGxheVR1cm4oKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBwcmludEZpZWxkKCkge1xuICAgICAgICBpZiAodGhpcy5nYW1lR3JpZCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnVGhpcyBtZXRob2QgY2Fubm90IGJlIHVzZWQgdW50aWwgYSBnYW1lIGdyaWQgaGFzIGJlZW4gcHJvdmlkZWQnKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKGxldCByb3cgb2YgdGhpcy5nYW1lR3JpZCkge1xuICAgICAgICAgICAgY29uc29sZS5sb2cocm93LmpvaW4oJycpKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBwcmludFZpY3RvcnkoKSB7XG4gICAgICAgIGNvbnN0IHZpY3RvcnlBcnJheSA9IFtcbiAgICAgICAgICAgIFsnKicsICfilpEnLCAnKicsICfilpEnLCAn4paRJywgJ+KWkScsICfilpEnLCAn4paRJywgJ+KWkScsICfilpEnLCAnKicsICfilpEnLCAn4paRJywgJ+KWkScsICfilpEnLCAn4paRJywgJ+KWkScsICfilpEnLCAn4paRJywgJ+KWkScsICfilpEnLCAn4paRJywgJ+KWkScsICfilpEnXSxcbiAgICAgICAgICAgIFsnKicsICfilpEnLCAnKicsICfilpEnLCAn4paRJywgJ+KWkScsICfilpEnLCAn4paRJywgJ+KWkScsICfilpEnLCAnKicsICfilpEnLCAn4paRJywgJ+KWkScsICfilpEnLCAn4paRJywgJ+KWkScsICfilpEnLCAn4paRJywgJ+KWkScsICfilpEnLCAn4paRJywgJ+KWkScsICfilpEnXSxcbiAgICAgICAgICAgIFsnKicsICfilpEnLCAnKicsICfilpEnLCAn4paRJywgJ+KWkScsICfilpEnLCAn4paRJywgJ+KWkScsICcqJywgJyonLCAnKicsICfilpEnLCAn4paRJywgJ+KWkScsICfilpEnLCAn4paRJywgJ+KWkScsICfilpEnLCAn4paRJywgJ+KWkScsICfilpEnLCAn4paRJywgJ+KWkSddLFxuICAgICAgICAgICAgWycqJywgJ+KWkScsICcqJywgJ+KWkScsICcqJywgJ+KWkScsICfilpEnLCAn4paRJywgJ+KWkScsICfilpEnLCAnKicsICfilpEnLCAn4paRJywgJ+KWkScsICfilpEnLCAn4paRJywgJ+KWkScsICfilpEnLCAn4paRJywgJ+KWkScsICfilpEnLCAn4paRJywgJ+KWkScsICfilpEnXSxcbiAgICAgICAgICAgIFsnKicsICfilpEnLCAnKicsICfilpEnLCAn4paRJywgJ+KWkScsICfilpEnLCAn4paRJywgJ+KWkScsICfilpEnLCAnKicsICfilpEnLCAn4paRJywgJ+KWkScsICfilpEnLCAn4paRJywgJ+KWkScsICfilpEnLCAn4paRJywgJ+KWkScsICfilpEnLCAn4paRJywgJ+KWkScsICfilpEnXSxcbiAgICAgICAgICAgIFsnKicsICfilpEnLCAnKicsICfilpEnLCAnKicsICfilpEnLCAnKicsICcqJywgJyonLCAn4paRJywgJyonLCAn4paRJywgJyonLCAnKicsICcqJywgJ+KWkScsICcqJywgJ+KWkScsICfilpEnLCAn4paRJywgJyonLCAn4paRJywgJyonLCAn4paRJ10sXG4gICAgICAgICAgICBbJyonLCAn4paRJywgJyonLCAn4paRJywgJyonLCAn4paRJywgJyonLCAn4paRJywgJ+KWkScsICfilpEnLCAnKicsICfilpEnLCAnKicsICfilpEnLCAnKicsICfilpEnLCAnKicsICcqJywgJyonLCAn4paRJywgJyonLCAn4paRJywgJyonLCAn4paRJ10sXG4gICAgICAgICAgICBbJyonLCAn4paRJywgJyonLCAn4paRJywgJyonLCAn4paRJywgJyonLCAn4paRJywgJ+KWkScsICfilpEnLCAnKicsICfilpEnLCAnKicsICfilpEnLCAnKicsICfilpEnLCAnKicsICfilpEnLCAnKicsICfilpEnLCAnKicsICcqJywgJyonLCAn4paRJ10sXG4gICAgICAgICAgICBbJyonLCAn4paRJywgJyonLCAn4paRJywgJyonLCAn4paRJywgJyonLCAn4paRJywgJ+KWkScsICfilpEnLCAnKicsICfilpEnLCAnKicsICfilpEnLCAnKicsICfilpEnLCAnKicsICfilpEnLCAn4paRJywgJ+KWkScsICfilpEnLCAnKicsICfilpEnLCAn4paRJ10sXG4gICAgICAgICAgICBbJ+KWkScsICcqJywgJ+KWkScsICfilpEnLCAnKicsICfilpEnLCAnKicsICcqJywgJyonLCAn4paRJywgJyonLCAn4paRJywgJyonLCAnKicsICcqJywgJ+KWkScsICcqJywgJ+KWkScsICfilpEnLCAn4paRJywgJ+KWkScsICcqJywgJ+KWkScsICfilpEnXVxuICAgICAgICBdO1xuICAgICAgICBmb3IgKGxldCByb3cgb2YgdmljdG9yeUFycmF5KSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhyb3cuam9pbignJykpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHBsYXlUdXJuKCkge1xuICAgICAgICB0aGlzLnByaW50RmllbGQoKTtcbiAgICAgICAgaWYgKHRoaXMuaGFyZE1vZGUgJiYgIXRoaXMuaG9sZXNIaWRkZW4pIHtcbiAgICAgICAgICAgIHRoaXMuaGlkZUhvbGVzKCk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZGlyZWN0aW9uID0gcHJvbXB0KCdXaGljaCBkaXJlY3Rpb24gd291bGQgeW91IGxpa2UgdG8gbW92ZT8gPj4gJyk7XG4gICAgICAgIHRoaXMubW92ZShkaXJlY3Rpb24pO1xuICAgIH1cbiAgICAvL2ZvciB1c2Ugd2hlbiB0aGlzLmhhcmRNb2RlIGlzIHNldCB0byB0cnVlXG4gICAgaGlkZUhvbGVzKCkge1xuICAgICAgICBpZiAodGhpcy5nYW1lR3JpZCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0dhbWUgR3JpZCBtdXN0IGFscmVhZHkgYmUgcHJvdmlkZWQnKTtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKGxldCBbcm93LCBjb2x1bW5dIG9mIHRoaXMuaG9sZXMpIHtcbiAgICAgICAgICAgIHRoaXMuZ2FtZUdyaWRbcm93XVtjb2x1bW5dID0gQ2hhcmFjdGVyXzEuZGVmYXVsdC5GaWVsZDtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmhvbGVzSGlkZGVuID0gdHJ1ZTtcbiAgICB9XG4gICAgbW92ZShkaXJlY3Rpb24pIHtcbiAgICAgICAgaWYgKHRoaXMuZ2FtZUdyaWQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdUaGlzIG1ldGhvZCBjYW5ub3QgYmUgdXNlZCB1bnRpbCBhIGdhbWUgZ3JpZCBoYXMgYmVlbiBwcm92aWRlZCcpO1xuICAgICAgICB9XG4gICAgICAgIHN3aXRjaCAoZGlyZWN0aW9uKSB7XG4gICAgICAgICAgICBjYXNlICdhJzpcbiAgICAgICAgICAgICAgICB0aGlzLm1vdmVMZWZ0KCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdkJzpcbiAgICAgICAgICAgICAgICB0aGlzLm1vdmVSaWdodCgpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAndyc6XG4gICAgICAgICAgICAgICAgdGhpcy5tb3ZlVXAoKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ3MnOlxuICAgICAgICAgICAgICAgIHRoaXMubW92ZURvd24oKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJQbGVhc2UgZW50ZXIgYSB2YWxpZCBXQVNEIGNvbnRyb2wuXCIpO1xuICAgICAgICB9XG4gICAgfVxuICAgIG1vdmVMZWZ0KCkge1xuICAgICAgICBpZiAodGhpcy5nYW1lR3JpZCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RoaXMgbWV0aG9kIGNhbm5vdCBiZSB1c2VkIHVudGlsIGEgZ2FtZSBncmlkIGhhcyBiZWVuIHByb3ZpZGVkJyk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgbmV3UG9zaXRpb24gPSBbdGhpcy5wbGF5ZXJSb3dQb3NpdGlvbiwgdGhpcy5wbGF5ZXJDb2x1bW5Qb3NpdGlvbiAtIDFdO1xuICAgICAgICBpZiAodGhpcy5tZWV0c0VuZENvbmRpdGlvbnMobmV3UG9zaXRpb24pKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgLy9zZXQgbGFzdCBwb3NpdGlvbiB0byBwYXRoXG4gICAgICAgIHRoaXMuZ2FtZUdyaWRbdGhpcy5wbGF5ZXJSb3dQb3NpdGlvbl1bdGhpcy5wbGF5ZXJDb2x1bW5Qb3NpdGlvbl0gPSBDaGFyYWN0ZXJfMS5kZWZhdWx0LlBhdGg7XG4gICAgICAgIC8vc2V0IG5ldyBwb3NpdGlvbiB0byBwbGF5ZXJcbiAgICAgICAgdGhpcy5wbGF5ZXJDb2x1bW5Qb3NpdGlvbiAtPSAxO1xuICAgICAgICB0aGlzLmdhbWVHcmlkW3RoaXMucGxheWVyUm93UG9zaXRpb25dW3RoaXMucGxheWVyQ29sdW1uUG9zaXRpb25dID0gQ2hhcmFjdGVyXzEuZGVmYXVsdC5QbGF5ZXI7XG4gICAgfVxuICAgIG1vdmVSaWdodCgpIHtcbiAgICAgICAgaWYgKHRoaXMuZ2FtZUdyaWQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdUaGlzIG1ldGhvZCBjYW5ub3QgYmUgdXNlZCB1bnRpbCBhIGdhbWUgZ3JpZCBoYXMgYmVlbiBwcm92aWRlZCcpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IG5ld1Bvc2l0aW9uID0gW3RoaXMucGxheWVyUm93UG9zaXRpb24sIHRoaXMucGxheWVyQ29sdW1uUG9zaXRpb24gKyAxXTtcbiAgICAgICAgaWYgKHRoaXMubWVldHNFbmRDb25kaXRpb25zKG5ld1Bvc2l0aW9uKSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuZ2FtZUdyaWRbdGhpcy5wbGF5ZXJSb3dQb3NpdGlvbl1bdGhpcy5wbGF5ZXJDb2x1bW5Qb3NpdGlvbl0gPSBDaGFyYWN0ZXJfMS5kZWZhdWx0LlBhdGg7XG4gICAgICAgIHRoaXMucGxheWVyQ29sdW1uUG9zaXRpb24gKz0gMTtcbiAgICAgICAgdGhpcy5nYW1lR3JpZFt0aGlzLnBsYXllclJvd1Bvc2l0aW9uXVt0aGlzLnBsYXllckNvbHVtblBvc2l0aW9uXSA9IENoYXJhY3Rlcl8xLmRlZmF1bHQuUGxheWVyO1xuICAgIH1cbiAgICBtb3ZlVXAoKSB7XG4gICAgICAgIGlmICh0aGlzLmdhbWVHcmlkID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignVGhpcyBtZXRob2QgY2Fubm90IGJlIHVzZWQgdW50aWwgYSBnYW1lIGdyaWQgaGFzIGJlZW4gcHJvdmlkZWQnKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBuZXdQb3NpdGlvbiA9IFt0aGlzLnBsYXllclJvd1Bvc2l0aW9uIC0gMSwgdGhpcy5wbGF5ZXJDb2x1bW5Qb3NpdGlvbl07XG4gICAgICAgIGlmICh0aGlzLm1lZXRzRW5kQ29uZGl0aW9ucyhuZXdQb3NpdGlvbikpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmdhbWVHcmlkW3RoaXMucGxheWVyUm93UG9zaXRpb25dW3RoaXMucGxheWVyQ29sdW1uUG9zaXRpb25dID0gQ2hhcmFjdGVyXzEuZGVmYXVsdC5QYXRoO1xuICAgICAgICB0aGlzLnBsYXllclJvd1Bvc2l0aW9uIC09IDE7XG4gICAgICAgIHRoaXMuZ2FtZUdyaWRbdGhpcy5wbGF5ZXJSb3dQb3NpdGlvbl1bdGhpcy5wbGF5ZXJDb2x1bW5Qb3NpdGlvbl0gPSBDaGFyYWN0ZXJfMS5kZWZhdWx0LlBsYXllcjtcbiAgICB9XG4gICAgbW92ZURvd24oKSB7XG4gICAgICAgIGlmICh0aGlzLmdhbWVHcmlkID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignVGhpcyBtZXRob2QgY2Fubm90IGJlIHVzZWQgdW50aWwgYSBnYW1lIGdyaWQgaGFzIGJlZW4gcHJvdmlkZWQnKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBuZXdQb3NpdGlvbiA9IFt0aGlzLnBsYXllclJvd1Bvc2l0aW9uICsgMSwgdGhpcy5wbGF5ZXJDb2x1bW5Qb3NpdGlvbl07XG4gICAgICAgIGlmICh0aGlzLm1lZXRzRW5kQ29uZGl0aW9ucyhuZXdQb3NpdGlvbikpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmdhbWVHcmlkW3RoaXMucGxheWVyUm93UG9zaXRpb25dW3RoaXMucGxheWVyQ29sdW1uUG9zaXRpb25dID0gQ2hhcmFjdGVyXzEuZGVmYXVsdC5QYXRoO1xuICAgICAgICB0aGlzLnBsYXllclJvd1Bvc2l0aW9uICs9IDE7XG4gICAgICAgIHRoaXMuZ2FtZUdyaWRbdGhpcy5wbGF5ZXJSb3dQb3NpdGlvbl1bdGhpcy5wbGF5ZXJDb2x1bW5Qb3NpdGlvbl0gPSBDaGFyYWN0ZXJfMS5kZWZhdWx0LlBsYXllcjtcbiAgICB9XG4gICAgbWVldHNFbmRDb25kaXRpb25zKG5ld1Bvc2l0aW9uKSB7XG4gICAgICAgIGlmICh0aGlzLmdhbWVHcmlkID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignVGhpcyBtZXRob2QgY2Fubm90IGJlIHVzZWQgdW50aWwgYSBnYW1lIGdyaWQgaGFzIGJlZW4gcHJvdmlkZWQnKTtcbiAgICAgICAgfVxuICAgICAgICBsZXQgW25ld1Bvc2l0aW9uUm93LCBuZXdQb3NpdGlvbkNvbHVtbl0gPSBuZXdQb3NpdGlvbjtcbiAgICAgICAgbGV0IHN0cmluZ2lmaWVkUG9zaXRpb24gPSBKU09OLnN0cmluZ2lmeShuZXdQb3NpdGlvbik7XG4gICAgICAgIGlmIChuZXdQb3NpdGlvblJvdyA8IDAgfHwgbmV3UG9zaXRpb25Sb3cgPiB0aGlzLmZpZWxkSGVpZ2h0IC0gMSB8fCBuZXdQb3NpdGlvbkNvbHVtbiA8IDAgfHwgbmV3UG9zaXRpb25Db2x1bW4gPiB0aGlzLmZpZWxkV2lkdGggLSAxKSB7XG4gICAgICAgICAgICB0aGlzLmdhbWVPdmVyKEdhbWVPdmVyUmVhc29uXzEuZGVmYXVsdC5PdXRPZkJvdW5kcyk7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0aGlzLmdhbWVHcmlkW25ld1Bvc2l0aW9uUm93XVtuZXdQb3NpdGlvbkNvbHVtbl0gPT09IENoYXJhY3Rlcl8xLmRlZmF1bHQuSGF0KSB7XG4gICAgICAgICAgICB0aGlzLmdhbWVPdmVyKEdhbWVPdmVyUmVhc29uXzEuZGVmYXVsdC5XaW4pO1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodGhpcy5ob2xlcy5maW5kKChlbGVtZW50KSA9PiBKU09OLnN0cmluZ2lmeShlbGVtZW50KSA9PT0gc3RyaW5naWZpZWRQb3NpdGlvbikpIHtcbiAgICAgICAgICAgIHRoaXMuZ2FtZU92ZXIoR2FtZU92ZXJSZWFzb25fMS5kZWZhdWx0LkZlbGxJbkhvbGUpO1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2FtZU92ZXIocmVhc29uKSB7XG4gICAgICAgIHN3aXRjaCAocmVhc29uKSB7XG4gICAgICAgICAgICBjYXNlIEdhbWVPdmVyUmVhc29uXzEuZGVmYXVsdC5PdXRPZkJvdW5kczpcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnWW91IHdlbnQgb3V0IG9mIGJvdW5kcyEgR2FtZSBPdmVyLicpO1xuICAgICAgICAgICAgICAgIHRoaXMuZ2FtZUFjdGl2ZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHJldHVybiBHYW1lT3ZlclJlYXNvbl8xLmRlZmF1bHQuT3V0T2ZCb3VuZHM7XG4gICAgICAgICAgICBjYXNlIEdhbWVPdmVyUmVhc29uXzEuZGVmYXVsdC5GZWxsSW5Ib2xlOlxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdZb3UgZmVsbCBkb3duIGEgaG9sZSEgR2FtZSBPdmVyLicpO1xuICAgICAgICAgICAgICAgIHRoaXMuZ2FtZUFjdGl2ZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHJldHVybiBHYW1lT3ZlclJlYXNvbl8xLmRlZmF1bHQuRmVsbEluSG9sZTtcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgdGhpcy5wcmludFZpY3RvcnkoKTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnWW91IGZvdW5kIHlvdXIgaGF0ISBUaGFuayBHb2QuIFZpY3RvcnkhJyk7XG4gICAgICAgICAgICAgICAgdGhpcy5nYW1lQWN0aXZlID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgcmV0dXJuIEdhbWVPdmVyUmVhc29uXzEuZGVmYXVsdC5XaW47XG4gICAgICAgIH1cbiAgICB9XG59XG5tb2R1bGUuZXhwb3J0cy5GaWVsZCA9IEZpZWxkO1xuIl0sIm1hcHBpbmdzIjoiQUFBQSxZQUFZOztBQUNaQSxNQUFNLENBQUNDLGNBQWMsQ0FBQ0MsT0FBTyxFQUFFLFlBQVksRUFBRTtFQUFFQyxLQUFLLEVBQUU7QUFBSyxDQUFDLENBQUM7QUFDN0QsTUFBTUMsb0JBQW9CLEdBQUdDLE9BQU8sQ0FBQyw4Q0FBOEMsQ0FBQztBQUNwRixNQUFNQyxXQUFXLEdBQUdELE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQztBQUNoRCxNQUFNRSxnQkFBZ0IsR0FBR0YsT0FBTyxDQUFDLHdCQUF3QixDQUFDO0FBQzFELE1BQU1HLE1BQU0sR0FBR0gsT0FBTyxDQUFDLGFBQWEsQ0FBQyxDQUFDO0VBQUVJLE1BQU0sRUFBRTtBQUFLLENBQUMsQ0FBQztBQUN2RCxNQUFNQyxLQUFLLENBQUM7RUFDUkMsV0FBV0EsQ0FBQ0MsUUFBUSxFQUFFO0lBQ2xCLElBQUksQ0FBQ0EsUUFBUSxHQUFHQSxRQUFRO0lBQ3hCLElBQUksQ0FBQ0MsaUJBQWlCLEdBQUcsQ0FBQztJQUMxQixJQUFJLENBQUNDLG9CQUFvQixHQUFHLENBQUM7SUFDN0IsSUFBSSxDQUFDQyxjQUFjLEdBQUcsSUFBSSxDQUFDQyxXQUFXLEdBQUcsQ0FBQztJQUMxQyxJQUFJLENBQUNDLGlCQUFpQixHQUFHLElBQUksQ0FBQ0MsVUFBVSxHQUFHLENBQUM7SUFDNUMsSUFBSSxDQUFDRixXQUFXLEdBQUcsQ0FBQztJQUNwQixJQUFJLENBQUNFLFVBQVUsR0FBRyxDQUFDO0lBQ25CLElBQUksQ0FBQ0MsVUFBVSxHQUFHLEtBQUs7SUFDdkIsSUFBSSxDQUFDQyxLQUFLLEdBQUcsRUFBRTtJQUNmLElBQUksQ0FBQ0MsUUFBUSxHQUFHLEtBQUs7SUFDckIsSUFBSSxDQUFDQyxXQUFXLEdBQUcsS0FBSztFQUM1QjtFQUNBO0VBQ0FDLG9CQUFvQkEsQ0FBQ1As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LEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxFQUN4SCxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxDQUFDLEVBQ3hILENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsRUFDeEgsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxFQUN4SCxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxDQUFDLEVBQ3hILENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsRUFDeEgsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxFQUN4SCxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdB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UUFBUSxDQUFDNUUsZ0JBQWdCLENBQUMwQixPQUFPLENBQUNtRCxXQUFXLENBQUM7TUFDbkQsT0FBTyxJQUFJO0lBQ2YsQ0FBQyxNQUNJLElBQUksSUFBSSxDQUFDeEUsUUFBUSxDQUFDa0UsY0FBYyxDQUFDLENBQUNDLGlCQUFpQixDQUFDLEtBQUt6RSxXQUFXLENBQUMyQixPQUFPLENBQUNDLEdBQUcsRUFBRTtNQUNuRixJQUFJLENBQUNpRCxRQUFRLENBQUM1RSxnQkFBZ0IsQ0FBQzBCLE9BQU8sQ0FBQ29ELEdBQUcsQ0FBQztNQUMzQyxPQUFPLElBQUk7SUFDZixDQUFDLE1BQ0ksSUFBSSxJQUFJLENBQUNqRSxLQUFLLENBQUNrRSxJQUFJLENBQUVDLE9BQU8sSUFBS04sSUFBSSxDQUFDQyxTQUFTLENBQUNLLE9BQU8sQ0FBQyxLQUFLUCxtQkFBbUIsQ0FBQyxFQUFFO01BQ3BGLElBQUksQ0FBQ0csUUFBUSxDQUFDNUUsZ0JBQWdCLENBQUMwQixPQUFPLENBQUN1RCxVQUFVLENBQUM7TUFDbEQsT0FBTyxJQUFJO0lBQ2YsQ0FBQyxNQUNJO01BQ0QsT0FBTyxLQUFLO0lBQ2hCO0VBQ0o7RUFDQUwsUUFBUUEsQ0FBQ00sTUFBTSxFQUFFO0lBQ2IsUUFBUUEsTUFBTTtNQUNWLEtBQUtsRixnQkFBZ0IsQ0FBQzBCLE9BQU8sQ0FBQ21ELFdBQVc7UUFDckN6QixPQUFPLENBQUNDLEdBQUcsQ0FBQyxvQ0FBb0MsQ0FBQztRQUNqRCxJQUFJLENBQUN6QyxVQUFVLEdBQUcsS0FBSztRQUN2QixPQUFPWixnQkFBZ0IsQ0FBQzBCLE9BQU8sQ0FBQ21ELFdBQVc7TUFDL0MsS0FBSzdFLGdCQUFnQixDQUFDMEIsT0FBTyxDQUFDdUQsVUFBVTtRQUNwQzdCLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLGtDQUFrQyxDQUFDO1FBQy9DLElBQUksQ0FBQ3pDLFVBQVUsR0FBRyxLQUFLO1FBQ3ZCLE9BQU9aLGdCQUFnQixDQUFDMEIsT0FBTyxDQUFDdUQsVUFBVTtNQUM5QztRQUNJLElBQUksQ0FBQ3RCLFlBQVksQ0FBQyxDQUFDO1FBQ25CUCxPQUFPLENBQUNDLEdBQUcsQ0FBQyx5Q0FBeUMsQ0FBQztRQUN0RCxJQUFJLENBQUN6QyxVQUFVLEdBQUcsS0FBSztRQUN2QixPQUFPWixnQkFBZ0IsQ0FBQzBCLE9BQU8sQ0FBQ29ELEdBQUc7SUFDM0M7RUFDSjtBQUNKO0FBQ0FLLE1BQU0sQ0FBQ3hGLE9BQU8sQ0FBQ1EsS0FBSyxHQUFHQSxLQUFLIiwiaWdub3JlTGlzdCI6W119","map":{"version":3,"names":["Object","defineProperty","exports","value","isGameGridSolvable_1","require","Character_1","GameOverReason_1","prompt","sigint","Field","constructor","gameGrid","playerRowPosition","playerColumnPosition","hatRowPosition","fieldHeight","hatColumnPosition","fieldWidth","gameActive","holes","hardMode","holesHidden","getRandomKeyPosition","Error","row","Math","floor","random","column","setHatPosition","undefined","length","default","Hat","setPlayerPosition","Player","setFieldDimensions","setHoles","Hole","push","populateRandomHoles","field","percentageHoles","setHole","allowedHoles","holeCount","generateField","playerRandom","hatRandom","playerPosition","i","Array","fill","gameGridSolvable","getUserFieldValues","makeCustomField","Number","isNaN","console","log","playGame","useProvidedField","playTurn","printField","join","printVictory","victoryArray","hideHoles","direction","move","moveLeft","moveRight","moveUp","moveDown","newPosition","meetsEndConditions","Path","newPositionRow","newPositionColumn","stringifiedPosition","JSON","stringify","gameOver","OutOfBounds","Win","find","element","FellInHole","reason","module"],"sourceRoot":"C:\\Users\\dpett\\projects\\Find Your Hat\\","sources":["FieldClass.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst isGameGridSolvable_1 = require(\"./ensureSolvableAlgorithm/isGameGridSolvable\");\nconst Character_1 = require(\"./enums/Character\");\nconst GameOverReason_1 = require(\"./enums/GameOverReason\");\nconst prompt = require('prompt-sync')({ sigint: true });\nclass Field {\n    constructor(gameGrid) {\n        this.gameGrid = gameGrid;\n        this.playerRowPosition = 0;\n        this.playerColumnPosition = 0;\n        this.hatRowPosition = this.fieldHeight - 1;\n        this.hatColumnPosition = this.fieldWidth - 2;\n        this.fieldHeight = 0;\n        this.fieldWidth = 0;\n        this.gameActive = false;\n        this.holes = [];\n        this.hardMode = false;\n        this.holesHidden = false;\n    }\n    //function for setting random position, to be used for player and hat in generateField\n    getRandomKeyPosition(fieldHeight, fieldWidth) {\n        if (fieldHeight < 1 || fieldWidth < 1) {\n            throw new Error('Height and width values cannot be less than 1!');\n        }\n        let row = Math.floor(Math.random() * fieldHeight);\n        let column = Math.floor(Math.random() * fieldWidth);\n        return [row, column];\n    }\n    setHatPosition() {\n        if (this.gameGrid === undefined) {\n            throw new Error('Game Grid must already be provided.');\n        }\n        for (let row = 0; row < this.gameGrid.length; row++) {\n            for (let column = 0; column < this.gameGrid[row].length; column++) {\n                if (this.gameGrid[row][column] === Character_1.default.Hat) {\n                    [this.hatRowPosition, this.hatColumnPosition] = [row, column];\n                    break;\n                }\n            }\n        }\n    }\n    setPlayerPosition() {\n        if (this.gameGrid === undefined) {\n            throw new Error('Game Grid must already be provided.');\n        }\n        for (let row = 0; row < this.gameGrid.length; row++) {\n            for (let column = 0; column < this.gameGrid[row].length; column++) {\n                if (this.gameGrid[row][column] === Character_1.default.Player) {\n                    [this.playerRowPosition, this.playerColumnPosition] = [row, column];\n                    break;\n                }\n            }\n        }\n    }\n    setFieldDimensions() {\n        if (this.gameGrid === undefined) {\n            throw new Error('Game Grid must already be provided.');\n        }\n        this.fieldHeight = this.gameGrid.length;\n        this.fieldWidth = this.gameGrid[0].length;\n    }\n    setHoles() {\n        if (this.gameGrid === undefined) {\n            throw new Error('Game Grid must already be provided.');\n        }\n        for (let row = 0; row < this.gameGrid.length; row++) {\n            for (let column = 0; column < this.gameGrid[row].length; column++) {\n                if (this.gameGrid[row][column] === Character_1.default.Hole) {\n                    this.holes.push([row, column]);\n                }\n            }\n        }\n    }\n    populateRandomHoles(field, percentageHoles) {\n        //function that sets any given location to be a hole based on percentage chance\n        const setHole = (percentageHoles) => {\n            return Math.random() * 100 <= percentageHoles;\n        };\n        //ensure this.holes is empty to start out\n        this.holes = [];\n        //randomly select spots to be holes if spot is already field character\n        const allowedHoles = Math.floor(((this.fieldHeight * this.fieldWidth) - 2) * (percentageHoles / 100));\n        let holeCount = 0;\n        while (holeCount < allowedHoles) {\n            for (let row = 0; row < this.fieldHeight; row++) {\n                for (let column = 0; column < this.fieldWidth; column++) {\n                    if (field[row][column] === Character_1.default.Field) {\n                        if (setHole(percentageHoles)) {\n                            field[row][column] = Character_1.default.Hole;\n                            this.holes.push([row, column]);\n                            holeCount++;\n                            //ensure there are never more holes than the percentage allows\n                            if (holeCount === allowedHoles) {\n                                return;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    generateField(fieldHeight, fieldWidth, percentageHoles, playerRandom = false, hatRandom = false) {\n        let field;\n        this.fieldHeight = fieldHeight;\n        this.fieldWidth = fieldWidth;\n        let playerPosition;\n        do {\n            field = [];\n            //fill out field with predefined height and width and fill with fieldCharacter\n            for (let i = 0; i < fieldHeight; i++) {\n                field.push(new Array(fieldWidth).fill(Character_1.default.Field));\n            }\n            //set player position in random spot if playerRandom is true\n            if (playerRandom)\n                [this.playerRowPosition, this.playerColumnPosition] = this.getRandomKeyPosition(fieldHeight, fieldWidth);\n            playerPosition = [this.playerRowPosition, this.playerColumnPosition];\n            field[this.playerRowPosition][this.playerColumnPosition] = Character_1.default.Player;\n            //set hat in random spot if hatRandom is true, making sure it's not same spot as player\n            if (hatRandom) {\n                do {\n                    [this.hatRowPosition, this.hatColumnPosition] = this.getRandomKeyPosition(fieldHeight, fieldWidth);\n                } while (this.hatRowPosition === this.playerRowPosition && this.hatColumnPosition === this.playerColumnPosition);\n            }\n            else {\n                [this.hatRowPosition, this.hatColumnPosition] = [fieldHeight - 1, fieldWidth - 2];\n            }\n            field[this.hatRowPosition][this.hatColumnPosition] = Character_1.default.Hat;\n            //set random holes up to allowed percentage\n            this.populateRandomHoles(field, percentageHoles);\n        } while (!this.gameGridSolvable(field, playerPosition));\n        return field;\n    }\n    gameGridSolvable(gameGrid, playerPosition) {\n        return (0, isGameGridSolvable_1.default)(gameGrid, playerPosition);\n    }\n    getUserFieldValues() {\n        let makeCustomField = prompt('Would you like to define values for a custom field? Enter \"y\" or \"n\" >> ');\n        switch (makeCustomField) {\n            case 'y':\n                let fieldHeight = Math.floor(Number(prompt('Enter an integer for the field height >> ')));\n                while (isNaN(fieldHeight) || fieldHeight < 2) {\n                    fieldHeight = Math.floor(Number(prompt('Please enter a valid whole number greater than 1 >> ')));\n                }\n                let fieldWidth = Math.floor(Number(prompt('Enter an integer for the field width >> ')));\n                while (isNaN(fieldWidth) || fieldWidth < 2) {\n                    fieldWidth = Math.floor(Number(prompt('Please enter a valid whole number greater than 1 >> ')));\n                }\n                let percentageHoles = Number(prompt('Enter an integer for the percentage of the field that will be holes >> '));\n                while (isNaN(percentageHoles)) {\n                    percentageHoles = Number(prompt('Please enter a valid number >> '));\n                }\n                let playerRandom = prompt('Should the player\\'s starting location be random? Enter \"y\" or \"n\" >> ');\n                while (playerRandom !== 'y' && playerRandom !== 'n') {\n                    playerRandom = prompt('Please enter \"y\" or \"n\" >> ');\n                }\n                playerRandom === 'y' ? playerRandom = true : playerRandom = false;\n                let hatRandom = prompt('Should the hat\\'s location be random? Enter \"y\" or \"n\" >> ');\n                while (hatRandom !== 'y' && hatRandom !== 'n') {\n                    hatRandom = prompt('Please enter \"y\" or \"n\" >> ');\n                }\n                hatRandom === 'y' ? hatRandom = true : hatRandom = false;\n                this.gameGrid = this.generateField(fieldHeight, fieldWidth, percentageHoles, playerRandom, hatRandom);\n                break;\n            case 'n':\n                this.hardMode ? this.gameGrid = this.generateField(5, 10, 15) : this.gameGrid = this.generateField(10, 20, 15);\n                break;\n            default:\n                console.log('Invalid input. Starting game with predetermined field settings.');\n                this.hardMode ? this.gameGrid = this.generateField(5, 10, 15) : this.gameGrid = this.generateField(10, 20, 15);\n        }\n    }\n    playGame() {\n        let useProvidedField = prompt('Enter \"1\" to randomly generate a field, or \"2\" to use one in this file >> ');\n        switch (useProvidedField) {\n            case '1':\n                this.getUserFieldValues();\n                break;\n            case '2':\n                this.setFieldDimensions();\n                this.setHatPosition();\n                this.setPlayerPosition();\n                this.setHoles();\n                break;\n            default:\n                console.log('Invalid input. Using field in file.');\n                this.setFieldDimensions();\n                this.setHatPosition();\n                this.setPlayerPosition();\n                this.setHoles();\n        }\n        let hardMode = prompt('Hard mode? Enter \"y\" or \"n\" >> ');\n        if (hardMode === 'y') {\n            this.hardMode = true;\n            console.log('Game is set to Hard (holes are hidden after the first move).');\n        }\n        else {\n            console.log('Game set to normal (holes are always visible).');\n        }\n        console.log(\"Select a WASD control and press enter to navigate the map and find your hat!\");\n        this.gameActive = true;\n        while (this.gameActive) {\n            this.playTurn();\n        }\n    }\n    printField() {\n        if (this.gameGrid === undefined) {\n            console.log('This method cannot be used until a game grid has been provided');\n            return;\n        }\n        for (let row of this.gameGrid) {\n            console.log(row.join(''));\n        }\n    }\n    printVictory() {\n        const victoryArray = [\n            ['*', '░', '*', '░', '░', '░', '░', '░', '░', '░', '*', '░', '░', '░', '░', '░', '░', '░', '░', '░', '░', '░', '░', '░'],\n            ['*', '░', '*', '░', '░', '░', '░', '░', '░', '░', '*', '░', '░', '░', '░', '░', '░', '░', '░', '░', '░', '░', '░', '░'],\n            ['*', '░', '*', '░', '░', '░', '░', '░', '░', '*', '*', '*', '░', '░', '░', '░', '░', '░', '░', '░', '░', '░', '░', '░'],\n            ['*', '░', '*', '░', '*', '░', '░', '░', '░', '░', '*', '░', '░', '░', '░', '░', '░', '░', '░', '░', '░', '░', '░', '░'],\n            ['*', '░', '*', '░', '░', '░', '░', '░', '░', '░', '*', '░', '░', '░', '░', '░', '░', '░', '░', '░', '░', '░', '░', '░'],\n            ['*', '░', '*', '░', '*', '░', '*', '*', '*', '░', '*', '░', '*', '*', '*', '░', '*', '░', '░', '░', '*', '░', '*', '░'],\n            ['*', '░', '*', '░', '*', '░', '*', '░', '░', '░', '*', '░', '*', '░', '*', '░', '*', '*', '*', '░', '*', '░', '*', '░'],\n            ['*', '░', '*', '░', '*', '░', '*', '░', '░', '░', '*', '░', '*', '░', '*', '░', '*', '░', '*', '░', '*', '*', '*', '░'],\n            ['*', '░', '*', '░', '*', '░', '*', '░', '░', '░', '*', '░', '*', '░', '*', '░', '*', '░', '░', '░', '░', '*', '░', '░'],\n            ['░', '*', '░', '░', '*', '░', '*', '*', '*', '░', '*', '░', '*', '*', '*', '░', '*', '░', '░', '░', '░', '*', '░', '░']\n        ];\n        for (let row of victoryArray) {\n            console.log(row.join(''));\n        }\n    }\n    playTurn() {\n        this.printField();\n        if (this.hardMode && !this.holesHidden) {\n            this.hideHoles();\n        }\n        const direction = prompt('Which direction would you like to move? >> ');\n        this.move(direction);\n    }\n    //for use when this.hardMode is set to true\n    hideHoles() {\n        if (this.gameGrid === undefined) {\n            throw new Error('Game Grid must already be provided');\n        }\n        for (let [row, column] of this.holes) {\n            this.gameGrid[row][column] = Character_1.default.Field;\n        }\n        this.holesHidden = true;\n    }\n    move(direction) {\n        if (this.gameGrid === undefined) {\n            throw new Error('This method cannot be used until a game grid has been provided');\n        }\n        switch (direction) {\n            case 'a':\n                this.moveLeft();\n                break;\n            case 'd':\n                this.moveRight();\n                break;\n            case 'w':\n                this.moveUp();\n                break;\n            case 's':\n                this.moveDown();\n                break;\n            default:\n                console.log(\"Please enter a valid WASD control.\");\n        }\n    }\n    moveLeft() {\n        if (this.gameGrid === undefined) {\n            throw new Error('This method cannot be used until a game grid has been provided');\n        }\n        const newPosition = [this.playerRowPosition, this.playerColumnPosition - 1];\n        if (this.meetsEndConditions(newPosition)) {\n            return;\n        }\n        //set last position to path\n        this.gameGrid[this.playerRowPosition][this.playerColumnPosition] = Character_1.default.Path;\n        //set new position to player\n        this.playerColumnPosition -= 1;\n        this.gameGrid[this.playerRowPosition][this.playerColumnPosition] = Character_1.default.Player;\n    }\n    moveRight() {\n        if (this.gameGrid === undefined) {\n            throw new Error('This method cannot be used until a game grid has been provided');\n        }\n        const newPosition = [this.playerRowPosition, this.playerColumnPosition + 1];\n        if (this.meetsEndConditions(newPosition)) {\n            return;\n        }\n        this.gameGrid[this.playerRowPosition][this.playerColumnPosition] = Character_1.default.Path;\n        this.playerColumnPosition += 1;\n        this.gameGrid[this.playerRowPosition][this.playerColumnPosition] = Character_1.default.Player;\n    }\n    moveUp() {\n        if (this.gameGrid === undefined) {\n            throw new Error('This method cannot be used until a game grid has been provided');\n        }\n        const newPosition = [this.playerRowPosition - 1, this.playerColumnPosition];\n        if (this.meetsEndConditions(newPosition)) {\n            return;\n        }\n        this.gameGrid[this.playerRowPosition][this.playerColumnPosition] = Character_1.default.Path;\n        this.playerRowPosition -= 1;\n        this.gameGrid[this.playerRowPosition][this.playerColumnPosition] = Character_1.default.Player;\n    }\n    moveDown() {\n        if (this.gameGrid === undefined) {\n            throw new Error('This method cannot be used until a game grid has been provided');\n        }\n        const newPosition = [this.playerRowPosition + 1, this.playerColumnPosition];\n        if (this.meetsEndConditions(newPosition)) {\n            return;\n        }\n        this.gameGrid[this.playerRowPosition][this.playerColumnPosition] = Character_1.default.Path;\n        this.playerRowPosition += 1;\n        this.gameGrid[this.playerRowPosition][this.playerColumnPosition] = Character_1.default.Player;\n    }\n    meetsEndConditions(newPosition) {\n        if (this.gameGrid === undefined) {\n            throw new Error('This method cannot be used until a game grid has been provided');\n        }\n        let [newPositionRow, newPositionColumn] = newPosition;\n        let stringifiedPosition = JSON.stringify(newPosition);\n        if (newPositionRow < 0 || newPositionRow > this.fieldHeight - 1 || newPositionColumn < 0 || newPositionColumn > this.fieldWidth - 1) {\n            this.gameOver(GameOverReason_1.default.OutOfBounds);\n            return true;\n        }\n        else if (this.gameGrid[newPositionRow][newPositionColumn] === Character_1.default.Hat) {\n            this.gameOver(GameOverReason_1.default.Win);\n            return true;\n        }\n        else if (this.holes.find((element) => JSON.stringify(element) === stringifiedPosition)) {\n            this.gameOver(GameOverReason_1.default.FellInHole);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    gameOver(reason) {\n        switch (reason) {\n            case GameOverReason_1.default.OutOfBounds:\n                console.log('You went out of bounds! Game Over.');\n                this.gameActive = false;\n                return GameOverReason_1.default.OutOfBounds;\n            case GameOverReason_1.default.FellInHole:\n                console.log('You fell down a hole! Game Over.');\n                this.gameActive = false;\n                return GameOverReason_1.default.FellInHole;\n            default:\n                this.printVictory();\n                console.log('You found your hat! Thank God. Victory!');\n                this.gameActive = false;\n                return GameOverReason_1.default.Win;\n        }\n    }\n}\nmodule.exports.Field = Field;\n"],"mappings":"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AG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EACxH,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EACxH,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EACxH,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EACxH,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EACxH,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EA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","ignoreList":[]}},"mtime":1727749634969},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\dpett\\\\projects\\\\Find Your Hat\\\\ensureSolvableAlgorithm\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\dpett\\\\projects\\\\Find Your Hat\",\"filename\":\"C:\\\\Users\\\\dpett\\\\projects\\\\Find Your Hat\\\\ensureSolvableAlgorithm\\\\isGameGridSolvable.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\dpett\\\\projects\\\\Find Your Hat\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.25.2:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst findPathToHat_js_1 = require(\"./findPathToHat.js\");\nconst mapGameGrid_1 = require(\"./mapGameGrid\");\nconst getPositionString_js_1 = require(\"./getPositionString.js\");\nconst isGameGridSolvable = (gameGrid, playerPosition) => {\n  const gameGraph = (0, mapGameGrid_1.default)(gameGrid);\n  const startingPoint = gameGraph.getVertexByValue((0, getPositionString_js_1.default)(playerPosition));\n  return (0, findPathToHat_js_1.default)(startingPoint, gameGrid);\n};\n/* For testing\nconst testField = [\n    ['!', 'O', 'O'],\n    ['░', '░', '░'],\n    ['O', '^', '░'],\n]\nconst playerPosition = [0, 0];\nconsole.log(isGameGridSolvable(testField, playerPosition));\n*/\nexports.default = isGameGridSolvable;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImZpbmRQYXRoVG9IYXRfanNfMSIsInJlcXVpcmUiLCJtYXBHYW1lR3JpZF8xIiwiZ2V0UG9zaXRpb25TdHJpbmdfanNfMSIsImlzR2FtZUdyaWRTb2x2YWJsZSIsImdhbWVHcmlkIiwicGxheWVyUG9zaXRpb24iLCJnYW1lR3JhcGgiLCJkZWZhdWx0Iiwic3RhcnRpbmdQb2ludCIsImdldFZlcnRleEJ5VmFsdWUiXSwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcZHBldHRcXHByb2plY3RzXFxGaW5kIFlvdXIgSGF0XFxlbnN1cmVTb2x2YWJsZUFsZ29yaXRobVxcIiwic291cmNlcyI6WyJpc0dhbWVHcmlkU29sdmFibGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBmaW5kUGF0aFRvSGF0X2pzXzEgPSByZXF1aXJlKFwiLi9maW5kUGF0aFRvSGF0LmpzXCIpO1xuY29uc3QgbWFwR2FtZUdyaWRfMSA9IHJlcXVpcmUoXCIuL21hcEdhbWVHcmlkXCIpO1xuY29uc3QgZ2V0UG9zaXRpb25TdHJpbmdfanNfMSA9IHJlcXVpcmUoXCIuL2dldFBvc2l0aW9uU3RyaW5nLmpzXCIpO1xuY29uc3QgaXNHYW1lR3JpZFNvbHZhYmxlID0gKGdhbWVHcmlkLCBwbGF5ZXJQb3NpdGlvbikgPT4ge1xuICAgIGNvbnN0IGdhbWVHcmFwaCA9ICgwLCBtYXBHYW1lR3JpZF8xLmRlZmF1bHQpKGdhbWVHcmlkKTtcbiAgICBjb25zdCBzdGFydGluZ1BvaW50ID0gZ2FtZUdyYXBoLmdldFZlcnRleEJ5VmFsdWUoKDAsIGdldFBvc2l0aW9uU3RyaW5nX2pzXzEuZGVmYXVsdCkocGxheWVyUG9zaXRpb24pKTtcbiAgICByZXR1cm4gKDAsIGZpbmRQYXRoVG9IYXRfanNfMS5kZWZhdWx0KShzdGFydGluZ1BvaW50LCBnYW1lR3JpZCk7XG59O1xuLyogRm9yIHRlc3RpbmdcbmNvbnN0IHRlc3RGaWVsZCA9IFtcbiAgICBbJyEnLCAnTycsICdPJ10sXG4gICAgWyfilpEnLCAn4paRJywgJ+KWkSddLFxuICAgIFsnTycsICdeJywgJ+KWkSddLFxuXVxuY29uc3QgcGxheWVyUG9zaXRpb24gPSBbMCwgMF07XG5jb25zb2xlLmxvZyhpc0dhbWVHcmlkU29sdmFibGUodGVzdEZpZWxkLCBwbGF5ZXJQb3NpdGlvbikpO1xuKi9cbmV4cG9ydHMuZGVmYXVsdCA9IGlzR2FtZUdyaWRTb2x2YWJsZTtcbiJdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWTs7QUFDWkEsTUFBTSxDQUFDQyxjQUFjLENBQUNDLE9BQU8sRUFBRSxZQUFZLEVBQUU7RUFBRUMsS0FBSyxFQUFFO0FBQUssQ0FBQyxDQUFDO0FBQzdELE1BQU1DLGtCQUFrQixHQUFHQyxPQUFPLENBQUMsb0JBQW9CLENBQUM7QUFDeEQsTUFBTUMsYUFBYSxHQUFHRCxPQUFPLENBQUMsZUFBZSxDQUFDO0FBQzlDLE1BQU1FLHNCQUFzQixHQUFHRixPQUFPLENBQUMsd0JBQXdCLENBQUM7QUFDaEUsTUFBTUcsa0JBQWtCLEdBQUdBLENBQUNDLFFBQVEsRUFBRUMsY0FBYyxLQUFLO0VBQ3JELE1BQU1DLFNBQVMsR0FBRyxDQUFDLENBQUMsRUFBRUwsYUFBYSxDQUFDTSxPQUFPLEVBQUVILFFBQVEsQ0FBQztFQUN0RCxNQUFNSSxhQUFhLEdBQUdGLFNBQVMsQ0FBQ0csZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLEVBQUVQLHNCQUFzQixDQUFDSyxPQUFPLEVBQUVGLGNBQWMsQ0FBQyxDQUFDO0VBQ3JHLE9BQU8sQ0FBQyxDQUFDLEVBQUVOLGtCQUFrQixDQUFDUSxPQUFPLEVBQUVDLGFBQWEsRUFBRUosUUFBUSxDQUFDO0FBQ25FLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQVAsT0FBTyxDQUFDVSxPQUFPLEdBQUdKLGtCQUFrQiIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":["Object","defineProperty","exports","value","findPathToHat_js_1","require","mapGameGrid_1","getPositionString_js_1","isGameGridSolvable","gameGrid","playerPosition","gameGraph","default","startingPoint","getVertexByValue"],"sourceRoot":"C:\\Users\\dpett\\projects\\Find Your Hat\\ensureSolvableAlgorithm\\","sources":["isGameGridSolvable.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst findPathToHat_js_1 = require(\"./findPathToHat.js\");\nconst mapGameGrid_1 = require(\"./mapGameGrid\");\nconst getPositionString_js_1 = require(\"./getPositionString.js\");\nconst isGameGridSolvable = (gameGrid, playerPosition) => {\n    const gameGraph = (0, mapGameGrid_1.default)(gameGrid);\n    const startingPoint = gameGraph.getVertexByValue((0, getPositionString_js_1.default)(playerPosition));\n    return (0, findPathToHat_js_1.default)(startingPoint, gameGrid);\n};\n/* For testing\nconst testField = [\n    ['!', 'O', 'O'],\n    ['░', '░', '░'],\n    ['O', '^', '░'],\n]\nconst playerPosition = [0, 0];\nconsole.log(isGameGridSolvable(testField, playerPosition));\n*/\nexports.default = isGameGridSolvable;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMC,kBAAkB,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AACxD,MAAMC,aAAa,GAAGD,OAAO,CAAC,eAAe,CAAC;AAC9C,MAAME,sBAAsB,GAAGF,OAAO,CAAC,wBAAwB,CAAC;AAChE,MAAMG,kBAAkB,GAAGA,CAACC,QAAQ,EAAEC,cAAc,KAAK;EACrD,MAAMC,SAAS,GAAG,CAAC,CAAC,EAAEL,aAAa,CAACM,OAAO,EAAEH,QAAQ,CAAC;EACtD,MAAMI,aAAa,GAAGF,SAAS,CAACG,gBAAgB,CAAC,CAAC,CAAC,EAAEP,sBAAsB,CAACK,OAAO,EAAEF,cAAc,CAAC,CAAC;EACrG,OAAO,CAAC,CAAC,EAAEN,kBAAkB,CAACQ,OAAO,EAAEC,aAAa,EAAEJ,QAAQ,CAAC;AACnE,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAP,OAAO,CAACU,OAAO,GAAGJ,kBAAkB","ignoreList":[]}},"mtime":1727749634953},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\dpett\\\\projects\\\\Find Your Hat\\\\ensureSolvableAlgorithm\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\dpett\\\\projects\\\\Find Your Hat\",\"filename\":\"C:\\\\Users\\\\dpett\\\\projects\\\\Find Your Hat\\\\ensureSolvableAlgorithm\\\\findPathToHat.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\dpett\\\\projects\\\\Find Your Hat\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.25.2:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst hole = 'O';\nconst hat = '^';\nconst findPathToHat = (startingPoint, gameMap, visitedPositions = [startingPoint]) => {\n  let foundHat = false;\n  for (let edge of startingPoint.edges) {\n    let neighborPosition = edge.end.data.split('-');\n    let rowPosition = Number(neighborPosition[0]);\n    let colPosition = Number(neighborPosition[1]);\n    if (gameMap[rowPosition][colPosition] === hat) {\n      return true;\n    }\n    if (gameMap[rowPosition][colPosition] === hole) startingPoint.removeEdge(edge.end);\n  }\n  startingPoint.edges.forEach(edge => {\n    const neighbor = edge.end;\n    if (!visitedPositions.includes(neighbor)) {\n      visitedPositions.push(neighbor);\n      foundHat = findPathToHat(neighbor, gameMap, visitedPositions);\n    }\n  });\n  return foundHat;\n};\n/* For testing\nconst testField = [\n    ['!', 'O', 'O'],\n    ['░', '░', '░'],\n    ['O', '^', '░'],\n]\nmapGameGrid(testField);\nconst startingPoint = gameGraph.getVertexByValue(getPositionString([0, 0]));\nconsole.log(findPathToHat(startingPoint, testField));\n*/\nexports.default = findPathToHat;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImhvbGUiLCJoYXQiLCJmaW5kUGF0aFRvSGF0Iiwic3RhcnRpbmdQb2ludCIsImdhbWVNYXAiLCJ2aXNpdGVkUG9zaXRpb25zIiwiZm91bmRIYXQiLCJlZGdlIiwiZWRnZXMiLCJuZWlnaGJvclBvc2l0aW9uIiwiZW5kIiwiZGF0YSIsInNwbGl0Iiwicm93UG9zaXRpb24iLCJOdW1iZXIiLCJjb2xQb3NpdGlvbiIsInJlbW92ZUVkZ2UiLCJmb3JFYWNoIiwibmVpZ2hib3IiLCJpbmNsdWRlcyIsInB1c2giLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGRwZXR0XFxwcm9qZWN0c1xcRmluZCBZb3VyIEhhdFxcZW5zdXJlU29sdmFibGVBbGdvcml0aG1cXCIsInNvdXJjZXMiOlsiZmluZFBhdGhUb0hhdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IGhvbGUgPSAnTyc7XG5jb25zdCBoYXQgPSAnXic7XG5jb25zdCBmaW5kUGF0aFRvSGF0ID0gKHN0YXJ0aW5nUG9pbnQsIGdhbWVNYXAsIHZpc2l0ZWRQb3NpdGlvbnMgPSBbc3RhcnRpbmdQb2ludF0pID0+IHtcbiAgICBsZXQgZm91bmRIYXQgPSBmYWxzZTtcbiAgICBmb3IgKGxldCBlZGdlIG9mIHN0YXJ0aW5nUG9pbnQuZWRnZXMpIHtcbiAgICAgICAgbGV0IG5laWdoYm9yUG9zaXRpb24gPSBlZGdlLmVuZC5kYXRhLnNwbGl0KCctJyk7XG4gICAgICAgIGxldCByb3dQb3NpdGlvbiA9IE51bWJlcihuZWlnaGJvclBvc2l0aW9uWzBdKTtcbiAgICAgICAgbGV0IGNvbFBvc2l0aW9uID0gTnVtYmVyKG5laWdoYm9yUG9zaXRpb25bMV0pO1xuICAgICAgICBpZiAoZ2FtZU1hcFtyb3dQb3NpdGlvbl1bY29sUG9zaXRpb25dID09PSBoYXQpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChnYW1lTWFwW3Jvd1Bvc2l0aW9uXVtjb2xQb3NpdGlvbl0gPT09IGhvbGUpXG4gICAgICAgICAgICBzdGFydGluZ1BvaW50LnJlbW92ZUVkZ2UoZWRnZS5lbmQpO1xuICAgIH1cbiAgICBzdGFydGluZ1BvaW50LmVkZ2VzLmZvckVhY2goKGVkZ2UpID0+IHtcbiAgICAgICAgY29uc3QgbmVpZ2hib3IgPSBlZGdlLmVuZDtcbiAgICAgICAgaWYgKCF2aXNpdGVkUG9zaXRpb25zLmluY2x1ZGVzKG5laWdoYm9yKSkge1xuICAgICAgICAgICAgdmlzaXRlZFBvc2l0aW9ucy5wdXNoKG5laWdoYm9yKTtcbiAgICAgICAgICAgIGZvdW5kSGF0ID0gZmluZFBhdGhUb0hhdChuZWlnaGJvciwgZ2FtZU1hcCwgdmlzaXRlZFBvc2l0aW9ucyk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gZm91bmRIYXQ7XG59O1xuLyogRm9yIHRlc3RpbmdcbmNvbnN0IHRlc3RGaWVsZCA9IFtcbiAgICBbJyEnLCAnTycsICdPJ10sXG4gICAgWyfilpEnLCAn4paRJywgJ+KWkSddLFxuICAgIFsnTycsICdeJywgJ+KWkSddLFxuXVxubWFwR2FtZUdyaWQodGVzdEZpZWxkKTtcbmNvbnN0IHN0YXJ0aW5nUG9pbnQgPSBnYW1lR3JhcGguZ2V0VmVydGV4QnlWYWx1ZShnZXRQb3NpdGlvblN0cmluZyhbMCwgMF0pKTtcbmNvbnNvbGUubG9nKGZpbmRQYXRoVG9IYXQoc3RhcnRpbmdQb2ludCwgdGVzdEZpZWxkKSk7XG4qL1xuZXhwb3J0cy5kZWZhdWx0ID0gZmluZFBhdGhUb0hhdDtcbiJdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWTs7QUFDWkEsTUFBTSxDQUFDQyxjQUFjLENBQUNDLE9BQU8sRUFBRSxZQUFZLEVBQUU7RUFBRUMsS0FBSyxFQUFFO0FBQUssQ0FBQyxDQUFDO0FBQzdELE1BQU1DLElBQUksR0FBRyxHQUFHO0FBQ2hCLE1BQU1DLEdBQUcsR0FBRyxHQUFHO0FBQ2YsTUFBTUMsYUFBYSxHQUFHQSxDQUFDQyxhQUFhLEVBQUVDLE9BQU8sRUFBRUMsZ0JBQWdCLEdBQUcsQ0FBQ0YsYUFBYSxDQUFDLEtBQUs7RUFDbEYsSUFBSUcsUUFBUSxHQUFHLEtBQUs7RUFDcEIsS0FBSyxJQUFJQyxJQUFJLElBQUlKLGFBQWEsQ0FBQ0ssS0FBSyxFQUFFO0lBQ2xDLElBQUlDLGdCQUFnQixHQUFHRixJQUFJLENBQUNHLEdBQUcsQ0FBQ0MsSUFBSSxDQUFDQyxLQUFLLENBQUMsR0FBRyxDQUFDO0lBQy9DLElBQUlDLFdBQVcsR0FBR0MsTUFBTSxDQUFDTCxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUM3QyxJQUFJTSxXQUFXLEdBQUdELE1BQU0sQ0FBQ0wsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDN0MsSUFBSUwsT0FBTyxDQUFDUyxXQUFXLENBQUMsQ0FBQ0UsV0FBVyxDQUFDLEtBQUtkLEdBQUcsRUFBRTtNQUMzQyxPQUFPLElBQUk7SUFDZjtJQUNBLElBQUlHLE9BQU8sQ0FBQ1MsV0FBVyxDQUFDLENBQUNFLFdBQVcsQ0FBQyxLQUFLZixJQUFJLEVBQzFDRyxhQUFhLENBQUNhLFVBQVUsQ0FBQ1QsSUFBSSxDQUFDRyxHQUFHLENBQUM7RUFDMUM7RUFDQVAsYUFBYSxDQUFDSyxLQUFLLENBQUNTLE9BQU8sQ0FBRVYsSUFBSSxJQUFLO0lBQ2xDLE1BQU1XLFFBQVEsR0FBR1gsSUFBSSxDQUFDRyxHQUFHO0lBQ3pCLElBQUksQ0FBQ0wsZ0JBQWdCLENBQUNjLFFBQVEsQ0FBQ0QsUUFBUSxDQUFDLEVBQUU7TUFDdENiLGdCQUFnQixDQUFDZSxJQUFJLENBQUNGLFFBQVEsQ0FBQztNQUMvQlosUUFBUSxHQUFHSixhQUFhLENBQUNnQixRQUFRLEVBQUVkLE9BQU8sRUFBRUMsZ0JBQWdCLENBQUM7SUFDakU7RUFDSixDQUFDLENBQUM7RUFDRixPQUFPQyxRQUFRO0FBQ25CLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBUixPQUFPLENBQUN1QixPQUFPLEdBQUduQixhQUFhIiwiaWdub3JlTGlzdCI6W119","map":{"version":3,"names":["Object","defineProperty","exports","value","hole","hat","findPathToHat","startingPoint","gameMap","visitedPositions","foundHat","edge","edges","neighborPosition","end","data","split","rowPosition","Number","colPosition","removeEdge","forEach","neighbor","includes","push","default"],"sourceRoot":"C:\\Users\\dpett\\projects\\Find Your Hat\\ensureSolvableAlgorithm\\","sources":["findPathToHat.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst hole = 'O';\nconst hat = '^';\nconst findPathToHat = (startingPoint, gameMap, visitedPositions = [startingPoint]) => {\n    let foundHat = false;\n    for (let edge of startingPoint.edges) {\n        let neighborPosition = edge.end.data.split('-');\n        let rowPosition = Number(neighborPosition[0]);\n        let colPosition = Number(neighborPosition[1]);\n        if (gameMap[rowPosition][colPosition] === hat) {\n            return true;\n        }\n        if (gameMap[rowPosition][colPosition] === hole)\n            startingPoint.removeEdge(edge.end);\n    }\n    startingPoint.edges.forEach((edge) => {\n        const neighbor = edge.end;\n        if (!visitedPositions.includes(neighbor)) {\n            visitedPositions.push(neighbor);\n            foundHat = findPathToHat(neighbor, gameMap, visitedPositions);\n        }\n    });\n    return foundHat;\n};\n/* For testing\nconst testField = [\n    ['!', 'O', 'O'],\n    ['░', '░', '░'],\n    ['O', '^', '░'],\n]\nmapGameGrid(testField);\nconst startingPoint = gameGraph.getVertexByValue(getPositionString([0, 0]));\nconsole.log(findPathToHat(startingPoint, testField));\n*/\nexports.default = findPathToHat;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMC,IAAI,GAAG,GAAG;AAChB,MAAMC,GAAG,GAAG,GAAG;AACf,MAAMC,aAAa,GAAGA,CAACC,aAAa,EAAEC,OAAO,EAAEC,gBAAgB,GAAG,CAACF,aAAa,CAAC,KAAK;EAClF,IAAIG,QAAQ,GAAG,KAAK;EACpB,KAAK,IAAIC,IAAI,IAAIJ,aAAa,CAACK,KAAK,EAAE;IAClC,IAAIC,gBAAgB,GAAGF,IAAI,CAACG,GAAG,CAACC,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC;IAC/C,IAAIC,WAAW,GAAGC,MAAM,CAACL,gBAAgB,CAAC,CAAC,CAAC,CAAC;IAC7C,IAAIM,WAAW,GAAGD,MAAM,CAACL,gBAAgB,CAAC,CAAC,CAAC,CAAC;IAC7C,IAAIL,OAAO,CAACS,WAAW,CAAC,CAACE,WAAW,CAAC,KAAKd,GAAG,EAAE;MAC3C,OAAO,IAAI;IACf;IACA,IAAIG,OAAO,CAACS,WAAW,CAAC,CAACE,WAAW,CAAC,KAAKf,IAAI,EAC1CG,aAAa,CAACa,UAAU,CAACT,IAAI,CAACG,GAAG,CAAC;EAC1C;EACAP,aAAa,CAACK,KAAK,CAACS,OAAO,CAAEV,IAAI,IAAK;IAClC,MAAMW,QAAQ,GAAGX,IAAI,CAACG,GAAG;IACzB,IAAI,CAACL,gBAAgB,CAACc,QAAQ,CAACD,QAAQ,CAAC,EAAE;MACtCb,gBAAgB,CAACe,IAAI,CAACF,QAAQ,CAAC;MAC/BZ,QAAQ,GAAGJ,aAAa,CAACgB,QAAQ,EAAEd,OAAO,EAAEC,gBAAgB,CAAC;IACjE;EACJ,CAAC,CAAC;EACF,OAAOC,QAAQ;AACnB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAR,OAAO,CAACuB,OAAO,GAAGnB,aAAa","ignoreList":[]}},"mtime":1727749634951},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\dpett\\\\projects\\\\Find Your Hat\\\\ensureSolvableAlgorithm\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\dpett\\\\projects\\\\Find Your Hat\",\"filename\":\"C:\\\\Users\\\\dpett\\\\projects\\\\Find Your Hat\\\\ensureSolvableAlgorithm\\\\mapGameGrid.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\dpett\\\\projects\\\\Find Your Hat\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.25.2:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst PositionGraph_js_1 = require(\"./data structures/PositionGraph.js\");\nconst getPositionString_js_1 = require(\"./getPositionString.js\");\nconst mapGameGrid = gameGrid => {\n  const gameGraph = new PositionGraph_js_1.default();\n  const mapHeight = gameGrid.length;\n  const mapWidth = gameGrid[0].length;\n  for (let row = 0; row < gameGrid.length; row++) {\n    for (let col = 0; col < gameGrid[row].length; col++) {\n      gameGraph.addVertex((0, getPositionString_js_1.default)([row, col]));\n    }\n  }\n  //add edges\n  for (let row = 0; row < gameGrid.length; row++) {\n    for (let col = 0; col < gameGrid[row].length; col++) {\n      let currentVertex = gameGraph.getVertexByValue((0, getPositionString_js_1.default)([row, col]));\n      //down\n      if (row + 1 < mapHeight) {\n        gameGraph.addEdge(currentVertex, gameGraph.getVertexByValue((0, getPositionString_js_1.default)([row + 1, col])));\n      }\n      //right\n      if (col + 1 < mapWidth) {\n        gameGraph.addEdge(currentVertex, gameGraph.getVertexByValue((0, getPositionString_js_1.default)([row, col + 1])));\n      }\n    }\n  }\n  return gameGraph;\n};\nexports.default = mapGameGrid;\n/*\nconst testField = [\n    ['!', 'O', 'O'],\n    ['░', '░', '░'],\n    ['O', '^', '░'],\n]\nconsole.log(mapGameGrid(testField));\n*/\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIlBvc2l0aW9uR3JhcGhfanNfMSIsInJlcXVpcmUiLCJnZXRQb3NpdGlvblN0cmluZ19qc18xIiwibWFwR2FtZUdyaWQiLCJnYW1lR3JpZCIsImdhbWVHcmFwaCIsImRlZmF1bHQiLCJtYXBIZWlnaHQiLCJsZW5ndGgiLCJtYXBXaWR0aCIsInJvdyIsImNvbCIsImFkZFZlcnRleCIsImN1cnJlbnRWZXJ0ZXgiLCJnZXRWZXJ0ZXhCeVZhbHVlIiwiYWRkRWRnZSJdLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxkcGV0dFxccHJvamVjdHNcXEZpbmQgWW91ciBIYXRcXGVuc3VyZVNvbHZhYmxlQWxnb3JpdGhtXFwiLCJzb3VyY2VzIjpbIm1hcEdhbWVHcmlkLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgUG9zaXRpb25HcmFwaF9qc18xID0gcmVxdWlyZShcIi4vZGF0YSBzdHJ1Y3R1cmVzL1Bvc2l0aW9uR3JhcGguanNcIik7XG5jb25zdCBnZXRQb3NpdGlvblN0cmluZ19qc18xID0gcmVxdWlyZShcIi4vZ2V0UG9zaXRpb25TdHJpbmcuanNcIik7XG5jb25zdCBtYXBHYW1lR3JpZCA9IChnYW1lR3JpZCkgPT4ge1xuICAgIGNvbnN0IGdhbWVHcmFwaCA9IG5ldyBQb3NpdGlvbkdyYXBoX2pzXzEuZGVmYXVsdCgpO1xuICAgIGNvbnN0IG1hcEhlaWdodCA9IGdhbWVHcmlkLmxlbmd0aDtcbiAgICBjb25zdCBtYXBXaWR0aCA9IGdhbWVHcmlkWzBdLmxlbmd0aDtcbiAgICBmb3IgKGxldCByb3cgPSAwOyByb3cgPCBnYW1lR3JpZC5sZW5ndGg7IHJvdysrKSB7XG4gICAgICAgIGZvciAobGV0IGNvbCA9IDA7IGNvbCA8IGdhbWVHcmlkW3Jvd10ubGVuZ3RoOyBjb2wrKykge1xuICAgICAgICAgICAgZ2FtZUdyYXBoLmFkZFZlcnRleCgoMCwgZ2V0UG9zaXRpb25TdHJpbmdfanNfMS5kZWZhdWx0KShbcm93LCBjb2xdKSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy9hZGQgZWRnZXNcbiAgICBmb3IgKGxldCByb3cgPSAwOyByb3cgPCBnYW1lR3JpZC5sZW5ndGg7IHJvdysrKSB7XG4gICAgICAgIGZvciAobGV0IGNvbCA9IDA7IGNvbCA8IGdhbWVHcmlkW3Jvd10ubGVuZ3RoOyBjb2wrKykge1xuICAgICAgICAgICAgbGV0IGN1cnJlbnRWZXJ0ZXggPSBnYW1lR3JhcGguZ2V0VmVydGV4QnlWYWx1ZSgoMCwgZ2V0UG9zaXRpb25TdHJpbmdfanNfMS5kZWZhdWx0KShbcm93LCBjb2xdKSk7XG4gICAgICAgICAgICAvL2Rvd25cbiAgICAgICAgICAgIGlmIChyb3cgKyAxIDwgbWFwSGVpZ2h0KSB7XG4gICAgICAgICAgICAgICAgZ2FtZUdyYXBoLmFkZEVkZ2UoY3VycmVudFZlcnRleCwgZ2FtZUdyYXBoLmdldFZlcnRleEJ5VmFsdWUoKDAsIGdldFBvc2l0aW9uU3RyaW5nX2pzXzEuZGVmYXVsdCkoW3JvdyArIDEsIGNvbF0pKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvL3JpZ2h0XG4gICAgICAgICAgICBpZiAoY29sICsgMSA8IG1hcFdpZHRoKSB7XG4gICAgICAgICAgICAgICAgZ2FtZUdyYXBoLmFkZEVkZ2UoY3VycmVudFZlcnRleCwgZ2FtZUdyYXBoLmdldFZlcnRleEJ5VmFsdWUoKDAsIGdldFBvc2l0aW9uU3RyaW5nX2pzXzEuZGVmYXVsdCkoW3JvdywgY29sICsgMV0pKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGdhbWVHcmFwaDtcbn07XG5leHBvcnRzLmRlZmF1bHQgPSBtYXBHYW1lR3JpZDtcbi8qXG5jb25zdCB0ZXN0RmllbGQgPSBbXG4gICAgWychJywgJ08nLCAnTyddLFxuICAgIFsn4paRJywgJ+KWkScsICfilpEnXSxcbiAgICBbJ08nLCAnXicsICfilpEnXSxcbl1cbmNvbnNvbGUubG9nKG1hcEdhbWVHcmlkKHRlc3RGaWVsZCkpO1xuKi8gXG4iXSwibWFwcGluZ3MiOiJBQUFBLFlBQVk7O0FBQ1pBLE1BQU0sQ0FBQ0MsY0FBYyxDQUFDQyxPQUFPLEVBQUUsWUFBWSxFQUFFO0VBQUVDLEtBQUssRUFBRTtBQUFLLENBQUMsQ0FBQztBQUM3RCxNQUFNQyxrQkFBa0IsR0FBR0MsT0FBTyxDQUFDLG9DQUFvQyxDQUFDO0FBQ3hFLE1BQU1DLHNCQUFzQixHQUFHRCxPQUFPLENBQUMsd0JBQXdCLENBQUM7QUFDaEUsTUFBTUUsV0FBVyxHQUFJQyxRQUFRLElBQUs7RUFDOUIsTUFBTUMsU0FBUyxHQUFHLElBQUlMLGtCQUFrQixDQUFDTSxPQUFPLENBQUMsQ0FBQztFQUNsRCxNQUFNQyxTQUFTLEdBQUdILFFBQVEsQ0FBQ0ksTUFBTTtFQUNqQyxNQUFNQyxRQUFRLEdBQUdMLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQ0ksTUFBTTtFQUNuQyxLQUFLLElBQUlFLEdBQUcsR0FBRyxDQUFDLEVBQUVBLEdBQUcsR0FBR04sUUFBUSxDQUFDSSxNQUFNLEVBQUVFLEdBQUcsRUFBRSxFQUFFO0lBQzVDLEtBQUssSUFBSUMsR0FBRyxHQUFHLENBQUMsRUFBRUEsR0FBRyxHQUFHUCxRQUFRLENBQUNNLEdBQUcsQ0FBQyxDQUFDRixNQUFNLEVBQUVHLEdBQUcsRUFBRSxFQUFFO01BQ2pETixTQUFTLENBQUNPLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRVYsc0JBQXNCLENBQUNJLE9BQU8sRUFBRSxDQUFDSSxHQUFHLEVBQUVDLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDeEU7RUFDSjtFQUNBO0VBQ0EsS0FBSyxJQUFJRCxHQUFHLEdBQUcsQ0FBQyxFQUFFQSxHQUFHLEdBQUdOLFFBQVEsQ0FBQ0ksTUFBTSxFQUFFRSxHQUFHLEVBQUUsRUFBRTtJQUM1QyxLQUFLLElBQUlDLEdBQUcsR0FBRyxDQUFDLEVBQUVBLEdBQUcsR0FBR1AsUUFBUSxDQUFDTSxHQUFHLENBQUMsQ0FBQ0YsTUFBTSxFQUFFRyxHQUFHLEVBQUUsRUFBRTtNQUNqRCxJQUFJRSxhQUFhLEdBQUdSLFNBQVMsQ0FBQ1MsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLEVBQUVaLHNCQUFzQixDQUFDSSxPQUFPLEVBQUUsQ0FBQ0ksR0FBRyxFQUFFQyxHQUFHLENBQUMsQ0FBQyxDQUFDO01BQy9GO01BQ0EsSUFBSUQsR0FBRyxHQUFHLENBQUMsR0FBR0gsU0FBUyxFQUFFO1FBQ3JCRixTQUFTLENBQUNVLE9BQU8sQ0FBQ0YsYUFBYSxFQUFFUixTQUFTLENBQUNTLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxFQUFFWixzQkFBc0IsQ0FBQ0ksT0FBTyxFQUFFLENBQUNJLEdBQUcsR0FBRyxDQUFDLEVBQUVDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztNQUNySDtNQUNBO01BQ0EsSUFBSUEsR0FBRyxHQUFHLENBQUMsR0FBR0YsUUFBUSxFQUFFO1FBQ3BCSixTQUFTLENBQUNVLE9BQU8sQ0FBQ0YsYUFBYSxFQUFFUixTQUFTLENBQUNTLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxFQUFFWixzQkFBc0IsQ0FBQ0ksT0FBTyxFQUFFLENBQUNJLEdBQUcsRUFBRUMsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztNQUNySDtJQUNKO0VBQ0o7RUFDQSxPQUFPTixTQUFTO0FBQ3BCLENBQUM7QUFDRFAsT0FBTyxDQUFDUSxPQUFPLEdBQUdILFdBQVc7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":["Object","defineProperty","exports","value","PositionGraph_js_1","require","getPositionString_js_1","mapGameGrid","gameGrid","gameGraph","default","mapHeight","length","mapWidth","row","col","addVertex","currentVertex","getVertexByValue","addEdge"],"sourceRoot":"C:\\Users\\dpett\\projects\\Find Your Hat\\ensureSolvableAlgorithm\\","sources":["mapGameGrid.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst PositionGraph_js_1 = require(\"./data structures/PositionGraph.js\");\nconst getPositionString_js_1 = require(\"./getPositionString.js\");\nconst mapGameGrid = (gameGrid) => {\n    const gameGraph = new PositionGraph_js_1.default();\n    const mapHeight = gameGrid.length;\n    const mapWidth = gameGrid[0].length;\n    for (let row = 0; row < gameGrid.length; row++) {\n        for (let col = 0; col < gameGrid[row].length; col++) {\n            gameGraph.addVertex((0, getPositionString_js_1.default)([row, col]));\n        }\n    }\n    //add edges\n    for (let row = 0; row < gameGrid.length; row++) {\n        for (let col = 0; col < gameGrid[row].length; col++) {\n            let currentVertex = gameGraph.getVertexByValue((0, getPositionString_js_1.default)([row, col]));\n            //down\n            if (row + 1 < mapHeight) {\n                gameGraph.addEdge(currentVertex, gameGraph.getVertexByValue((0, getPositionString_js_1.default)([row + 1, col])));\n            }\n            //right\n            if (col + 1 < mapWidth) {\n                gameGraph.addEdge(currentVertex, gameGraph.getVertexByValue((0, getPositionString_js_1.default)([row, col + 1])));\n            }\n        }\n    }\n    return gameGraph;\n};\nexports.default = mapGameGrid;\n/*\nconst testField = [\n    ['!', 'O', 'O'],\n    ['░', '░', '░'],\n    ['O', '^', '░'],\n]\nconsole.log(mapGameGrid(testField));\n*/ \n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMC,kBAAkB,GAAGC,OAAO,CAAC,oCAAoC,CAAC;AACxE,MAAMC,sBAAsB,GAAGD,OAAO,CAAC,wBAAwB,CAAC;AAChE,MAAME,WAAW,GAAIC,QAAQ,IAAK;EAC9B,MAAMC,SAAS,GAAG,IAAIL,kBAAkB,CAACM,OAAO,CAAC,CAAC;EAClD,MAAMC,SAAS,GAAGH,QAAQ,CAACI,MAAM;EACjC,MAAMC,QAAQ,GAAGL,QAAQ,CAAC,CAAC,CAAC,CAACI,MAAM;EACnC,KAAK,IAAIE,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGN,QAAQ,CAACI,MAAM,EAAEE,GAAG,EAAE,EAAE;IAC5C,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGP,QAAQ,CAACM,GAAG,CAAC,CAACF,MAAM,EAAEG,GAAG,EAAE,EAAE;MACjDN,SAAS,CAACO,SAAS,CAAC,CAAC,CAAC,EAAEV,sBAAsB,CAACI,OAAO,EAAE,CAACI,GAAG,EAAEC,GAAG,CAAC,CAAC,CAAC;IACxE;EACJ;EACA;EACA,KAAK,IAAID,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGN,QAAQ,CAACI,MAAM,EAAEE,GAAG,EAAE,EAAE;IAC5C,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGP,QAAQ,CAACM,GAAG,CAAC,CAACF,MAAM,EAAEG,GAAG,EAAE,EAAE;MACjD,IAAIE,aAAa,GAAGR,SAAS,CAACS,gBAAgB,CAAC,CAAC,CAAC,EAAEZ,sBAAsB,CAACI,OAAO,EAAE,CAACI,GAAG,EAAEC,GAAG,CAAC,CAAC,CAAC;MAC/F;MACA,IAAID,GAAG,GAAG,CAAC,GAAGH,SAAS,EAAE;QACrBF,SAAS,CAACU,OAAO,CAACF,aAAa,EAAER,SAAS,CAACS,gBAAgB,CAAC,CAAC,CAAC,EAAEZ,sBAAsB,CAACI,OAAO,EAAE,CAACI,GAAG,GAAG,CAAC,EAAEC,GAAG,CAAC,CAAC,CAAC,CAAC;MACrH;MACA;MACA,IAAIA,GAAG,GAAG,CAAC,GAAGF,QAAQ,EAAE;QACpBJ,SAAS,CAACU,OAAO,CAACF,aAAa,EAAER,SAAS,CAACS,gBAAgB,CAAC,CAAC,CAAC,EAAEZ,sBAAsB,CAACI,OAAO,EAAE,CAACI,GAAG,EAAEC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MACrH;IACJ;EACJ;EACA,OAAON,SAAS;AACpB,CAAC;AACDP,OAAO,CAACQ,OAAO,GAAGH,WAAW;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]}},"mtime":1727749634949},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\dpett\\\\projects\\\\Find Your Hat\\\\ensureSolvableAlgorithm\\\\data structures\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\dpett\\\\projects\\\\Find Your Hat\",\"filename\":\"C:\\\\Users\\\\dpett\\\\projects\\\\Find Your Hat\\\\ensureSolvableAlgorithm\\\\data structures\\\\PositionGraph.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\dpett\\\\projects\\\\Find Your Hat\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.25.2:development":{"value":{"code":"class PositionGraph {\n  constructor() {\n    this.vertices = [];\n  }\n  addVertex(data) {\n    const newVertex = new Vertex(data);\n    this.vertices.push(newVertex);\n    return newVertex;\n  }\n  removeVertex(vertex) {\n    this.vertices = this.vertices.filter(v => v !== vertex);\n  }\n  addEdge(vertexOne, vertexTwo) {\n    if (vertexOne instanceof Vertex && vertexTwo instanceof Vertex) {\n      vertexOne.addEdge(vertexTwo);\n      vertexTwo.addEdge(vertexOne);\n    } else {\n      throw new Error('Expected Vertex arguments.');\n    }\n  }\n  removeEdge(vertexOne, vertexTwo) {\n    if (vertexOne instanceof Vertex && vertexTwo instanceof Vertex) {\n      vertexOne.removeEdge(vertexTwo);\n      vertexTwo.removeEdge(vertexOne);\n    } else {\n      throw new Error('Expected Vertex arguments.');\n    }\n  }\n  getVertexByValue(value) {\n    return this.vertices.find(vertex => vertex.data === value);\n  }\n  print() {\n    const vertexList = this.vertices;\n    vertexList.forEach(vertex => vertex.print());\n  }\n}\nclass Vertex {\n  constructor(data) {\n    this.data = data;\n    this.edges = [];\n  }\n  addEdge(vertex) {\n    if (vertex instanceof Vertex) {\n      this.edges.push(new Edge(this, vertex));\n    } else {\n      throw new Error('Edge start and end must both be Vertex');\n    }\n  }\n  removeEdge(vertex) {\n    this.edges = this.edges.filter(edge => edge.end !== vertex);\n  }\n  print() {\n    const edgeList = this.edges.map(edge => edge.end.data) || [];\n    const output = `${this.data} --> ${edgeList.join(', ')}`;\n    console.log(output);\n  }\n}\nclass Edge {\n  constructor(start, end) {\n    this.start = start;\n    this.end = end;\n  }\n}\nexport default PositionGraph;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQb3NpdGlvbkdyYXBoIiwiY29uc3RydWN0b3IiLCJ2ZXJ0aWNlcyIsImFkZFZlcnRleCIsImRhdGEiLCJuZXdWZXJ0ZXgiLCJWZXJ0ZXgiLCJwdXNoIiwicmVtb3ZlVmVydGV4IiwidmVydGV4IiwiZmlsdGVyIiwidiIsImFkZEVkZ2UiLCJ2ZXJ0ZXhPbmUiLCJ2ZXJ0ZXhUd28iLCJFcnJvciIsInJlbW92ZUVkZ2UiLCJnZXRWZXJ0ZXhCeVZhbHVlIiwidmFsdWUiLCJmaW5kIiwicHJpbnQiLCJ2ZXJ0ZXhMaXN0IiwiZm9yRWFjaCIsImVkZ2VzIiwiRWRnZSIsImVkZ2UiLCJlbmQiLCJlZGdlTGlzdCIsIm1hcCIsIm91dHB1dCIsImpvaW4iLCJjb25zb2xlIiwibG9nIiwic3RhcnQiXSwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcZHBldHRcXHByb2plY3RzXFxGaW5kIFlvdXIgSGF0XFxlbnN1cmVTb2x2YWJsZUFsZ29yaXRobVxcZGF0YSBzdHJ1Y3R1cmVzXFwiLCJzb3VyY2VzIjpbIlBvc2l0aW9uR3JhcGguanMiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgUG9zaXRpb25HcmFwaCB7XHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICB0aGlzLnZlcnRpY2VzID0gW107XHJcbiAgICB9XHJcblxyXG4gICAgYWRkVmVydGV4KGRhdGEpIHtcclxuICAgICAgICBjb25zdCBuZXdWZXJ0ZXggPSBuZXcgVmVydGV4KGRhdGEpO1xyXG4gICAgICAgIHRoaXMudmVydGljZXMucHVzaChuZXdWZXJ0ZXgpO1xyXG4gICAgICAgIHJldHVybiBuZXdWZXJ0ZXg7XHJcbiAgICB9XHJcblxyXG4gICAgcmVtb3ZlVmVydGV4KHZlcnRleCkge1xyXG4gICAgICAgIHRoaXMudmVydGljZXMgPSB0aGlzLnZlcnRpY2VzLmZpbHRlcih2ID0+IHYgIT09IHZlcnRleCk7XHJcbiAgICB9XHJcblxyXG4gICAgYWRkRWRnZSh2ZXJ0ZXhPbmUsIHZlcnRleFR3bykge1xyXG4gICAgICAgIGlmICh2ZXJ0ZXhPbmUgaW5zdGFuY2VvZiBWZXJ0ZXggJiYgdmVydGV4VHdvIGluc3RhbmNlb2YgVmVydGV4KSB7XHJcbiAgICAgICAgICAgIHZlcnRleE9uZS5hZGRFZGdlKHZlcnRleFR3byk7XHJcbiAgICAgICAgICAgIHZlcnRleFR3by5hZGRFZGdlKHZlcnRleE9uZSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdFeHBlY3RlZCBWZXJ0ZXggYXJndW1lbnRzLicpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICByZW1vdmVFZGdlKHZlcnRleE9uZSwgdmVydGV4VHdvKSB7XHJcbiAgICAgICAgaWYgKHZlcnRleE9uZSBpbnN0YW5jZW9mIFZlcnRleCAmJiB2ZXJ0ZXhUd28gaW5zdGFuY2VvZiBWZXJ0ZXgpIHtcclxuICAgICAgICAgICAgdmVydGV4T25lLnJlbW92ZUVkZ2UodmVydGV4VHdvKTtcclxuICAgICAgICAgICAgdmVydGV4VHdvLnJlbW92ZUVkZ2UodmVydGV4T25lKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0V4cGVjdGVkIFZlcnRleCBhcmd1bWVudHMuJyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGdldFZlcnRleEJ5VmFsdWUodmFsdWUpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy52ZXJ0aWNlcy5maW5kKHZlcnRleCA9PiB2ZXJ0ZXguZGF0YSA9PT0gdmFsdWUpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBwcmludCgpIHtcclxuICAgICAgICBjb25zdCB2ZXJ0ZXhMaXN0ID0gdGhpcy52ZXJ0aWNlcztcclxuICAgICAgICB2ZXJ0ZXhMaXN0LmZvckVhY2godmVydGV4ID0+IHZlcnRleC5wcmludCgpKTtcclxuICAgIH1cclxufVxyXG5cclxuY2xhc3MgVmVydGV4IHtcclxuICAgIGNvbnN0cnVjdG9yKGRhdGEpIHtcclxuICAgICAgICB0aGlzLmRhdGEgPSBkYXRhO1xyXG4gICAgICAgIHRoaXMuZWRnZXMgPSBbXTtcclxuICAgIH1cclxuXHJcbiAgICBhZGRFZGdlKHZlcnRleCkge1xyXG4gICAgICAgIGlmICh2ZXJ0ZXggaW5zdGFuY2VvZiBWZXJ0ZXgpIHtcclxuICAgICAgICAgICAgdGhpcy5lZGdlcy5wdXNoKG5ldyBFZGdlKHRoaXMsIHZlcnRleCkpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignRWRnZSBzdGFydCBhbmQgZW5kIG11c3QgYm90aCBiZSBWZXJ0ZXgnKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcmVtb3ZlRWRnZSh2ZXJ0ZXgpIHtcclxuICAgICAgICB0aGlzLmVkZ2VzID0gdGhpcy5lZGdlcy5maWx0ZXIoZWRnZSA9PiBlZGdlLmVuZCAhPT0gdmVydGV4KTtcclxuICAgIH1cclxuXHJcbiAgICBwcmludCgpIHtcclxuICAgICAgICBjb25zdCBlZGdlTGlzdCA9IHRoaXMuZWRnZXMubWFwKGVkZ2UgPT5cclxuICAgICAgICAgICAgZWRnZS5lbmQuZGF0YSkgfHwgW107XHJcbiAgICBcclxuICAgICAgICBjb25zdCBvdXRwdXQgPSBgJHt0aGlzLmRhdGF9IC0tPiAke2VkZ2VMaXN0LmpvaW4oJywgJyl9YDtcclxuICAgICAgICBjb25zb2xlLmxvZyhvdXRwdXQpO1xyXG4gICAgfVxyXG59XHJcblxyXG5jbGFzcyBFZGdlIHtcclxuICAgIGNvbnN0cnVjdG9yKHN0YXJ0LCBlbmQpIHtcclxuICAgICAgICB0aGlzLnN0YXJ0ID0gc3RhcnQ7XHJcbiAgICAgICAgdGhpcy5lbmQgPSBlbmQ7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFBvc2l0aW9uR3JhcGg7Il0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxhQUFhLENBQUM7RUFDaEJDLFdBQVdBLENBQUEsRUFBRztJQUNWLElBQUksQ0FBQ0MsUUFBUSxHQUFHLEVBQUU7RUFDdEI7RUFFQUMsU0FBU0EsQ0FBQ0MsSUFBSSxFQUFFO0lBQ1osTUFBTUMsU0FBUyxHQUFHLElBQUlDLE1BQU0sQ0FBQ0YsSUFBSSxDQUFDO0lBQ2xDLElBQUksQ0FBQ0YsUUFBUSxDQUFDSyxJQUFJLENBQUNGLFNBQVMsQ0FBQztJQUM3QixPQUFPQSxTQUFTO0VBQ3BCO0VBRUFHLFlBQVlBLENBQUNDLE1BQU0sRUFBRTtJQUNqQixJQUFJLENBQUNQLFFBQVEsR0FBRyxJQUFJLENBQUNBLFFBQVEsQ0FBQ1EsTUFBTSxDQUFDQyxDQUFDLElBQUlBLENBQUMsS0FBS0YsTUFBTSxDQUFDO0VBQzNEO0VBRUFHLE9BQU9BLENBQUNDLFNBQVMsRUFBRUMsU0FBUyxFQUFFO0lBQzFCLElBQUlELFNBQVMsWUFBWVAsTUFBTSxJQUFJUSxTQUFTLFlBQVlSLE1BQU0sRUFBRTtNQUM1RE8sU0FBUyxDQUFDRCxPQUFPLENBQUNFLFNBQVMsQ0FBQztNQUM1QkEsU0FBUyxDQUFDRixPQUFPLENBQUNDLFNBQVMsQ0FBQztJQUNoQyxDQUFDLE1BQU07TUFDSCxNQUFNLElBQUlFLEtBQUssQ0FBQyw0QkFBNEIsQ0FBQztJQUNqRDtFQUNKO0VBRUFDLFVBQVVBLENBQUNILFNBQVMsRUFBRUMsU0FBUyxFQUFFO0lBQzdCLElBQUlELFNBQVMsWUFBWVAsTUFBTSxJQUFJUSxTQUFTLFlBQVlSLE1BQU0sRUFBRTtNQUM1RE8sU0FBUyxDQUFDRyxVQUFVLENBQUNGLFNBQVMsQ0FBQztNQUMvQkEsU0FBUyxDQUFDRSxVQUFVLENBQUNILFNBQVMsQ0FBQztJQUNuQyxDQUFDLE1BQU07TUFDSCxNQUFNLElBQUlFLEtBQUssQ0FBQyw0QkFBNEIsQ0FBQztJQUNqRDtFQUNKO0VBRUFFLGdCQUFnQkEsQ0FBQ0MsS0FBSyxFQUFFO0lBQ3BCLE9BQU8sSUFBSSxDQUFDaEIsUUFBUSxDQUFDaUIsSUFBSSxDQUFDVixNQUFNLElBQUlBLE1BQU0sQ0FBQ0wsSUFBSSxLQUFLYyxLQUFLLENBQUM7RUFDOUQ7RUFFQUUsS0FBS0EsQ0FBQSxFQUFHO0lBQ0osTUFBTUMsVUFBVSxHQUFHLElBQUksQ0FBQ25CLFFBQVE7SUFDaENtQixVQUFVLENBQUNDLE9BQU8sQ0FBQ2IsTUFBTSxJQUFJQSxNQUFNLENBQUNXLEtBQUssQ0FBQyxDQUFDLENBQUM7RUFDaEQ7QUFDSjtBQUVBLE1BQU1kLE1BQU0sQ0FBQztFQUNUTCxXQUFXQSxDQUFDRyxJQUFJLEVBQUU7SUFDZCxJQUFJLENBQUNBLElBQUksR0FBR0EsSUFBSTtJQUNoQixJQUFJLENBQUNtQixLQUFLLEdBQUcsRUFBRTtFQUNuQjtFQUVBWCxPQUFPQSxDQUFDSCxNQUFNLEVBQUU7SUFDWixJQUFJQSxNQUFNLFlBQVlILE1BQU0sRUFBRTtNQUMxQixJQUFJLENBQUNpQixLQUFLLENBQUNoQixJQUFJLENBQUMsSUFBSWlCLElBQUksQ0FBQyxJQUFJLEVBQUVmLE1BQU0sQ0FBQyxDQUFDO0lBQzNDLENBQUMsTUFBTTtNQUNILE1BQU0sSUFBSU0sS0FBSyxDQUFDLHdDQUF3QyxDQUFDO0lBQzdEO0VBQ0o7RUFFQUMsVUFBVUEsQ0FBQ1AsTUFBTSxFQUFFO0lBQ2YsSUFBSSxDQUFDYyxLQUFLLEdBQUcsSUFBSSxDQUFDQSxLQUFLLENBQUNiLE1BQU0sQ0FBQ2UsSUFBSSxJQUFJQSxJQUFJLENBQUNDLEdBQUcsS0FBS2pCLE1BQU0sQ0FBQztFQUMvRDtFQUVBVyxLQUFLQSxDQUFBLEVBQUc7SUFDSixNQUFNTyxRQUFRLEdBQUcsSUFBSSxDQUFDSixLQUFLLENBQUNLLEdBQUcsQ0FBQ0gsSUFBSSxJQUNoQ0EsSUFBSSxDQUFDQyxHQUFHLENBQUN0QixJQUFJLENBQUMsSUFBSSxFQUFFO0lBRXhCLE1BQU15QixNQUFNLEdBQUcsR0FBRyxJQUFJLENBQUN6QixJQUFJLFFBQVF1QixRQUFRLENBQUNHLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRTtJQUN4REMsT0FBTyxDQUFDQyxHQUFHLENBQUNILE1BQU0sQ0FBQztFQUN2QjtBQUNKO0FBRUEsTUFBTUwsSUFBSSxDQUFDO0VBQ1B2QixXQUFXQSxDQUFDZ0MsS0FBSyxFQUFFUCxHQUFHLEVBQUU7SUFDcEIsSUFBSSxDQUFDTyxLQUFLLEdBQUdBLEtBQUs7SUFDbEIsSUFBSSxDQUFDUCxHQUFHLEdBQUdBLEdBQUc7RUFDbEI7QUFDSjtBQUVBLGVBQWUxQixhQUFhIiwiaWdub3JlTGlzdCI6W119","map":{"version":3,"names":["PositionGraph","constructor","vertices","addVertex","data","newVertex","Vertex","push","removeVertex","vertex","filter","v","addEdge","vertexOne","vertexTwo","Error","removeEdge","getVertexByValue","value","find","print","vertexList","forEach","edges","Edge","edge","end","edgeList","map","output","join","console","log","start"],"sourceRoot":"C:\\Users\\dpett\\projects\\Find Your Hat\\ensureSolvableAlgorithm\\data structures\\","sources":["PositionGraph.js"],"sourcesContent":["class PositionGraph {\r\n    constructor() {\r\n        this.vertices = [];\r\n    }\r\n\r\n    addVertex(data) {\r\n        const newVertex = new Vertex(data);\r\n        this.vertices.push(newVertex);\r\n        return newVertex;\r\n    }\r\n\r\n    removeVertex(vertex) {\r\n        this.vertices = this.vertices.filter(v => v !== vertex);\r\n    }\r\n\r\n    addEdge(vertexOne, vertexTwo) {\r\n        if (vertexOne instanceof Vertex && vertexTwo instanceof Vertex) {\r\n            vertexOne.addEdge(vertexTwo);\r\n            vertexTwo.addEdge(vertexOne);\r\n        } else {\r\n            throw new Error('Expected Vertex arguments.');\r\n        }\r\n    }\r\n\r\n    removeEdge(vertexOne, vertexTwo) {\r\n        if (vertexOne instanceof Vertex && vertexTwo instanceof Vertex) {\r\n            vertexOne.removeEdge(vertexTwo);\r\n            vertexTwo.removeEdge(vertexOne);\r\n        } else {\r\n            throw new Error('Expected Vertex arguments.');\r\n        }\r\n    }\r\n\r\n    getVertexByValue(value) {\r\n        return this.vertices.find(vertex => vertex.data === value);\r\n    }\r\n    \r\n    print() {\r\n        const vertexList = this.vertices;\r\n        vertexList.forEach(vertex => vertex.print());\r\n    }\r\n}\r\n\r\nclass Vertex {\r\n    constructor(data) {\r\n        this.data = data;\r\n        this.edges = [];\r\n    }\r\n\r\n    addEdge(vertex) {\r\n        if (vertex instanceof Vertex) {\r\n            this.edges.push(new Edge(this, vertex));\r\n        } else {\r\n            throw new Error('Edge start and end must both be Vertex');\r\n        }\r\n    }\r\n\r\n    removeEdge(vertex) {\r\n        this.edges = this.edges.filter(edge => edge.end !== vertex);\r\n    }\r\n\r\n    print() {\r\n        const edgeList = this.edges.map(edge =>\r\n            edge.end.data) || [];\r\n    \r\n        const output = `${this.data} --> ${edgeList.join(', ')}`;\r\n        console.log(output);\r\n    }\r\n}\r\n\r\nclass Edge {\r\n    constructor(start, end) {\r\n        this.start = start;\r\n        this.end = end;\r\n    }\r\n}\r\n\r\nexport default PositionGraph;"],"mappings":"AAAA,MAAMA,aAAa,CAAC;EAChBC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,QAAQ,GAAG,EAAE;EACtB;EAEAC,SAASA,CAACC,IAAI,EAAE;IACZ,MAAMC,SAAS,GAAG,IAAIC,MAAM,CAACF,IAAI,CAAC;IAClC,IAAI,CAACF,QAAQ,CAACK,IAAI,CAACF,SAAS,CAAC;IAC7B,OAAOA,SAAS;EACpB;EAEAG,YAAYA,CAACC,MAAM,EAAE;IACjB,IAAI,CAACP,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACQ,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAKF,MAAM,CAAC;EAC3D;EAEAG,OAAOA,CAACC,SAAS,EAAEC,SAAS,EAAE;IAC1B,IAAID,SAAS,YAAYP,MAAM,IAAIQ,SAAS,YAAYR,MAAM,EAAE;MAC5DO,SAAS,CAACD,OAAO,CAACE,SAAS,CAAC;MAC5BA,SAAS,CAACF,OAAO,CAACC,SAAS,CAAC;IAChC,CAAC,MAAM;MACH,MAAM,IAAIE,KAAK,CAAC,4BAA4B,CAAC;IACjD;EACJ;EAEAC,UAAUA,CAACH,SAAS,EAAEC,SAAS,EAAE;IAC7B,IAAID,SAAS,YAAYP,MAAM,IAAIQ,SAAS,YAAYR,MAAM,EAAE;MAC5DO,SAAS,CAACG,UAAU,CAACF,SAAS,CAAC;MAC/BA,SAAS,CAACE,UAAU,CAACH,SAAS,CAAC;IACnC,CAAC,MAAM;MACH,MAAM,IAAIE,KAAK,CAAC,4BAA4B,CAAC;IACjD;EACJ;EAEAE,gBAAgBA,CAACC,KAAK,EAAE;IACpB,OAAO,IAAI,CAAChB,QAAQ,CAACiB,IAAI,CAACV,MAAM,IAAIA,MAAM,CAACL,IAAI,KAAKc,KAAK,CAAC;EAC9D;EAEAE,KAAKA,CAAA,EAAG;IACJ,MAAMC,UAAU,GAAG,IAAI,CAACnB,QAAQ;IAChCmB,UAAU,CAACC,OAAO,CAACb,MAAM,IAAIA,MAAM,CAACW,KAAK,CAAC,CAAC,CAAC;EAChD;AACJ;AAEA,MAAMd,MAAM,CAAC;EACTL,WAAWA,CAACG,IAAI,EAAE;IACd,IAAI,CAACA,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACmB,KAAK,GAAG,EAAE;EACnB;EAEAX,OAAOA,CAACH,MAAM,EAAE;IACZ,IAAIA,MAAM,YAAYH,MAAM,EAAE;MAC1B,IAAI,CAACiB,KAAK,CAAChB,IAAI,CAAC,IAAIiB,IAAI,CAAC,IAAI,EAAEf,MAAM,CAAC,CAAC;IAC3C,CAAC,MAAM;MACH,MAAM,IAAIM,KAAK,CAAC,wCAAwC,CAAC;IAC7D;EACJ;EAEAC,UAAUA,CAACP,MAAM,EAAE;IACf,IAAI,CAACc,KAAK,GAAG,IAAI,CAACA,KAAK,CAACb,MAAM,CAACe,IAAI,IAAIA,IAAI,CAACC,GAAG,KAAKjB,MAAM,CAAC;EAC/D;EAEAW,KAAKA,CAAA,EAAG;IACJ,MAAMO,QAAQ,GAAG,IAAI,CAACJ,KAAK,CAACK,GAAG,CAACH,IAAI,IAChCA,IAAI,CAACC,GAAG,CAACtB,IAAI,CAAC,IAAI,EAAE;IAExB,MAAMyB,MAAM,GAAG,GAAG,IAAI,CAACzB,IAAI,QAAQuB,QAAQ,CAACG,IAAI,CAAC,IAAI,CAAC,EAAE;IACxDC,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;EACvB;AACJ;AAEA,MAAML,IAAI,CAAC;EACPvB,WAAWA,CAACgC,KAAK,EAAEP,GAAG,EAAE;IACpB,IAAI,CAACO,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACP,GAAG,GAAGA,GAAG;EAClB;AACJ;AAEA,eAAe1B,aAAa","ignoreList":[]}},"mtime":1727738013686}}